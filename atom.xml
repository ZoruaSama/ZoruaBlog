<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zorua&#39;s Blog</title>
  
  
  <link href="https://zoruasama.gitee.io/atom.xml" rel="self"/>
  
  <link href="https://zoruasama.gitee.io/"/>
  <updated>2022-02-16T16:47:18.396Z</updated>
  <id>https://zoruasama.gitee.io/</id>
  
  <author>
    <name>Zorua</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>目标检测 | RCNN 系列目标检测算法详解</title>
    <link href="https://zoruasama.gitee.io/2022/02/16/CV_objectDetection_1/"/>
    <id>https://zoruasama.gitee.io/2022/02/16/CV_objectDetection_1/</id>
    <published>2022-02-16T15:20:00.000Z</published>
    <updated>2022-02-16T16:47:18.396Z</updated>
    
    <content type="html"><![CDATA[<h1 id="思维导图"><a class="markdownIt-Anchor" href="#思维导图"></a> 思维导图</h1><blockquote class="pullquote mindmap mindmap-md"><ul><li>RCNN 系列<ul><li>R-CNN<ul><li>R-CNN 网络结构</li><li>R-CNN 网络效果</li></ul></li><li>Fast-RCNN<ul><li>Fast-RCNN 网络结构</li><li>Fast-RCNN 网络效果</li></ul></li><li>Faster-RCNN<ul><li>Faster-RCNN 网络结构</li><li>Anchor（锚框）</li><li>RPN<ul><li>训练策略</li><li>监督信息</li><li>Loss<ul><li>回归分支 Loss 计算公式</li></ul></li><li>生成 Proposals</li></ul></li><li>RoI Pooling<ul><li>RoI Pooling 不足</li><li>RoI Align</li></ul></li><li>BBox Head<ul><li>训练策略</li><li>监督信息</li><li>Loss</li></ul></li><li>效果</li></ul></li></ul></li></ul></blockquote><h1 id="r-cnn"><a class="markdownIt-Anchor" href="#r-cnn"></a> R-CNN</h1><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220216133633.png" alt="" /><br />用深度学习<strong>分类模型提取特征</strong>方法替代传统图像特征提取算法。<br />R-CNN 核心思想：对每张图片选取多个区域，然后每个区域作为一个样本进入一个卷积神经网络来抽取特征。</p><h2 id="r-cnn-网络结构"><a class="markdownIt-Anchor" href="#r-cnn-网络结构"></a> R-CNN 网络结构</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220216133919.png" alt="网络结构" /></p><ul><li>每张图会通过<strong>Selective Search</strong>提取2000个候选区域</li><li>每个区域被warped到卷积网络要求的输入大小，然后通过卷积网络得到一个输出，作为这个区域的特征</li><li>使用这些特征来训练多个SVM来识别物体，每个SVM预测一个区域是不是包含某个物体</li><li>使用这些区域特征来训练线性回归器来对区域位置进行调整</li></ul><h2 id="r-cnn-网络效果"><a class="markdownIt-Anchor" href="#r-cnn-网络效果"></a> R-CNN 网络效果</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220216134151.png" alt="实验结果" /></p><p>R-CNN三大不足︰</p><ol><li>每个候选区域都需要通过CNN计算特征，<strong>计算量大</strong></li><li>Selective Search提取的区域<strong>质量不够好</strong></li><li>特征提取、SVM分类器是分模块独立训练，没有联合起来系统性优化，<strong>训练耗时长</strong></li></ol><h1 id="fast-rcnn"><a class="markdownIt-Anchor" href="#fast-rcnn"></a> Fast-RCNN</h1><p>核心思想是简化R-CNN计算复杂度。</p><h2 id="fast-rcnn-网络结构"><a class="markdownIt-Anchor" href="#fast-rcnn-网络结构"></a> Fast-RCNN 网络结构</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220216134306.png" alt="网络结构" /></p><ul><li>把<code>resize</code>替换为<code>ROI Pooling</code>。将每个区域内均匀分成若干小块，每个小块得到该区域内的最大值</li><li>把<code>SVM+Regressor</code>替换为<code>softmax+regressor</code>。</li></ul><h2 id="fast-rcnn-网络效果"><a class="markdownIt-Anchor" href="#fast-rcnn-网络效果"></a> Fast-RCNN 网络效果</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220216134542.png" alt="" /></p><p>相比较先前基于卷积神经网络的检测模型，Fast R-CNN在<strong>训练速度和预测速度上都有了很大提升</strong>。但是候选区域仍然采用Selective Search的方法，<strong>提取候选区域耗时长</strong>。</p><h1 id="faster-rcnn"><a class="markdownIt-Anchor" href="#faster-rcnn"></a> Faster-RCNN</h1><p>核心思想是用RPN（Region Proposal Network）网络替代Selective Search，用于提取候选区域。</p><h2 id="faster-rcnn-网络结构"><a class="markdownIt-Anchor" href="#faster-rcnn-网络结构"></a> Faster-RCNN 网络结构</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220216134756.png" alt="网络结构" /></p><ol><li>第一阶段:产生候选区域<ul><li>使用Anchor替代Selective Search，选取候选区域。</li><li>选出包含物体的Anchor进入Rol Pooling提取特征。</li></ul></li><li>第二阶段：对候选区域进行分类并预测目标物体位置。</li></ol><h2 id="anchor锚框"><a class="markdownIt-Anchor" href="#anchor锚框"></a> Anchor（锚框）</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220216135906.png" alt="" /></p><p>定义：特征图上的每个点作为中心点生成多个大小比例不同的边界框，这些框称为Anchor。</p><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220216135951.png" alt="" /></p><p>图中红色、蓝色和绿色代表三种Anchor，它们的大小不同。每种Anchor又分成了长宽比为1:2、1:1、2:1的三个Anchor。<br /><strong>特征图每个位置生成9个Anchor</strong>。</p><h2 id="rpn"><a class="markdownIt-Anchor" href="#rpn"></a> RPN</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220216170834.png" alt="" /></p><h3 id="训练策略"><a class="markdownIt-Anchor" href="#训练策略"></a> 训练策略</h3><ol><li>向RPN网络输入一个监督信息，判断Anchor是<br />否包含物体。<ul><li>正样本：Anchor包含物体</li><li>负样本：Anchor不包含物体</li></ul></li><li>根据Anchr和真实框loU取值，判断正or负样本。<ul><li>正样本：<ul><li>与某一真实框loU最大的Anchor</li><li>与任意真实框loU&gt;0.7的Anchor</li></ul></li><li>负样本：<ul><li>与所有真实框的loU&lt;0.3的Anchor</li></ul></li></ul></li><li>采样规则：<ul><li>共采样256个样本</li><li>从正样本中随机采样，采样个数不超过128个</li><li>从负样本中随机采样，补齐256个样本</li></ul></li></ol><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220216172531.png" alt="" /></p><ul><li>正样本：1,2,4,5,6</li><li>负样本：3</li><li>既不是正样本也不是负样本：7</li></ul><h3 id="监督信息"><a class="markdownIt-Anchor" href="#监督信息"></a> 监督信息</h3><ul><li><p>分类分支：候选框是否包含物体</p><ul><li>正样本-1</li><li>负样本-0</li></ul></li><li><p>回归分支：Anchor到真实框的偏移量</p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>t</mi><mi>y</mi><mo>∗</mo></msubsup><mo>=</mo><mo stretchy="false">(</mo><msup><mi>y</mi><mo>∗</mo></msup><mo>−</mo><msub><mi>y</mi><mi>a</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><msub><mi>h</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">t_y^*=(y^*-y_a)/h_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.071804em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>t</mi><mi>x</mi><mo>∗</mo></msubsup><mo>=</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mo>∗</mo></msup><mo>−</mo><msub><mi>x</mi><mi>a</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><msub><mi>w</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">t_x^*=(x^*-x_a)/w_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.935696em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>t</mi><mi>w</mi><mo>∗</mo></msubsup><mo>=</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><msup><mi>w</mi><mo>∗</mo></msup><mi mathvariant="normal">/</mi><msub><mi>w</mi><mi>a</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">t_w^*=\log(w^*/w_a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.935696em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>t</mi><mi>h</mi><mo>∗</mo></msubsup><mo>=</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><msup><mi>h</mi><mo>∗</mo></msup><mi mathvariant="normal">/</mi><msub><mi>h</mi><mi>a</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">t_h^*=\log(h^*/h_a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9718039999999999em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>a</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>a</mi></msub><mo separator="true">,</mo><msub><mi>w</mi><mi>a</mi></msub><mo separator="true">,</mo><msub><mi>h</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">x_a,y_a,w_a,h_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>——Anchor</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mo>∗</mo></msup><mo separator="true">,</mo><msup><mi>y</mi><mo>∗</mo></msup><mo separator="true">,</mo><msup><mi>w</mi><mo>∗</mo></msup><mo separator="true">,</mo><msup><mi>h</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">x^*,y^*,w^*,h^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>——真实框</li></ul></li></ul><h3 id="loss"><a class="markdownIt-Anchor" href="#loss"></a> Loss</h3><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220216180213.png" alt="" /><br />RPN网络的Loss是分类和回归两个Loss相加得到的。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mo stretchy="false">{</mo><msub><mi>p</mi><mi>i</mi></msub><mo stretchy="false">}</mo><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>t</mi><mi>i</mi></msub><mo stretchy="false">}</mo><mo stretchy="false">)</mo><mo>=</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mn>1</mn><msub><mi>N</mi><mrow><mi>c</mi><mi>l</mi><mi>s</mi></mrow></msub></mfrac></mstyle><msub><mo>∑</mo><mi>i</mi></msub><mrow><msub><mi>L</mi><mrow><mi>c</mi><mi>l</mi><mi>s</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>p</mi><mi>i</mi></msub><mo separator="true">,</mo><msubsup><mi>p</mi><mi>i</mi><mo>∗</mo></msubsup><mo stretchy="false">)</mo></mrow><mo>+</mo><mi>λ</mi><mstyle displaystyle="true" scriptlevel="0"><mfrac><mn>1</mn><msub><mi>N</mi><mrow><mi>r</mi><mi>e</mi><mi>g</mi></mrow></msub></mfrac></mstyle><msub><mo>∑</mo><mi>i</mi></msub><mrow><msubsup><mi>p</mi><mi>i</mi><mo>∗</mo></msubsup><msub><mi>L</mi><mrow><mi>r</mi><mi>e</mi><mi>g</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>t</mi><mi>i</mi></msub><mo separator="true">,</mo><msubsup><mi>t</mi><mi>i</mi><mo>∗</mo></msubsup><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">L(\{p_i\},\{t_i\})=\dfrac{1}{N_{cls}}\sum_i{L_{cls}(p_i,p_i^*)}+\lambda\dfrac{1}{N_{reg}}\sum_i{p_i^*L_{reg}(t_i,t_i^*)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1574400000000002em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.293548em;vertical-align:-0.972108em;"></span><span class="mord mathdefault">λ</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span>：分类分支的预测值</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>：回归分支的预测值</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>p</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">p^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8831359999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>：表示分类分支的监督信息，取值为0或1<ul><li>1：表示Anchor为正样本</li><li>0：表示Anchor为负样本</li></ul></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>t</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">t^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>：表示回归分支的监督信息</li></ul><h4 id="回归分支-loss-计算公式"><a class="markdownIt-Anchor" href="#回归分支-loss-计算公式"></a> 回归分支 Loss 计算公式</h4><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi><mstyle displaystyle="true" scriptlevel="0"><mfrac><mn>1</mn><msub><mi>N</mi><mrow><mi>r</mi><mi>e</mi><mi>g</mi></mrow></msub></mfrac></mstyle><msub><mo>∑</mo><mi>i</mi></msub><mrow><msubsup><mi>p</mi><mi>i</mi><mo>∗</mo></msubsup><msub><mi>L</mi><mrow><mi>r</mi><mi>e</mi><mi>g</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>t</mi><mi>i</mi></msub><mo separator="true">,</mo><msubsup><mi>t</mi><mi>i</mi><mo>∗</mo></msubsup><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">\lambda\dfrac{1}{N_{reg}}\sum_i{p_i^*L_{reg}(t_i,t_i^*)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.293548em;vertical-align:-0.972108em;"></span><span class="mord mathdefault">λ</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mrow><mi>l</mi><mi>o</mi><mi>c</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>t</mi><mi>u</mi></msup><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∑</mo><mrow><mi>i</mi><mo>∈</mo><mo stretchy="false">{</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>w</mi><mo separator="true">,</mo><mi>h</mi><mo stretchy="false">}</mo></mrow></msub><mi>s</mi><mi>m</mi><mi>o</mi><mi>o</mi><mi>t</mi><msub><mi>h</mi><msub><mi>L</mi><mn>1</mn></msub></msub><mo stretchy="false">(</mo><msubsup><mi>t</mi><mi>i</mi><mi>u</mi></msubsup><mo>−</mo><msub><mi>v</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L_{loc}(t^u,v)=\sum_{i\in\{x,y,w,h\}}smooth_{L_1}(t_i^u-v_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">u</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.22471em;vertical-align:-0.47471em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22528999999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">∈</span><span class="mopen mtight">{</span><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">h</span><span class="mclose mtight">}</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.47471em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><br />其中，</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>m</mi><mi>o</mi><mi>o</mi><mi>t</mi><msub><mi>h</mi><msub><mi>L</mi><mn>1</mn></msub></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0.5</mn><msup><mi>x</mi><mn>2</mn></msup><mo separator="true">,</mo><mrow><mi>i</mi><mi>f</mi></mrow><mtext> </mtext><mtext> </mtext><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mo>−</mo><mn>0.5</mn><mo separator="true">,</mo><mrow><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>e</mi></mrow></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">smooth_{L_1}(x)=\begin{cases} 0.5x^2,\mathit{if} \,\, |x|&lt;1 \\|x|-0.5, \mathit{otherwise}\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathit">i</span><span class="mord mathit">f</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathit">o</span><span class="mord mathit">t</span><span class="mord mathit">h</span><span class="mord mathit">e</span><span class="mord mathit">r</span><span class="mord mathit">w</span><span class="mord mathit">i</span><span class="mord mathit">s</span><span class="mord mathit">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi mathvariant="normal">d</mi><mi>s</mi><mi>m</mi><mi>o</mi><mi>o</mi><mi>t</mi><msub><mi>h</mi><msub><mi>L</mi><mn>1</mn></msub></msub></mrow><mrow><mi mathvariant="normal">d</mi><mi>x</mi></mrow></mfrac><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo separator="true">,</mo><mrow><mi>i</mi><mi>f</mi></mrow><mtext> </mtext><mtext> </mtext><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>±</mo><mn>1</mn><mo separator="true">,</mo><mrow><mi>i</mi><mi>f</mi></mrow><mtext> </mtext><mtext> </mtext><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mo>&gt;</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\dfrac{\mathrm{d}smooth_{L_1}}{\mathrm{d}x}=\begin{cases} x,\mathit{if} \,\, |x|&lt;1 \\\pm1, \mathit{if}\,\,|x|&gt;1\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6769999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault">s</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathit">i</span><span class="mord mathit">f</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">±</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathit">i</span><span class="mord mathit">f</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220216225119.png" alt="" /></p><ul><li>当预测框与监督信息差别过大时，梯度值不至于过大；</li><li>当预测框监督信息差别很小时，梯度值足够小。</li></ul><h3 id="生成-proposals"><a class="markdownIt-Anchor" href="#生成-proposals"></a> 生成 Proposals</h3><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220216225240.png" alt="" /></p><h2 id="roi-pooling"><a class="markdownIt-Anchor" href="#roi-pooling"></a> RoI Pooling</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220216225513.png" alt="" /></p><p>核心思想∶候选框共享特征图特征，并保持输出大小一致<br />候选框分为若干子区域，将每个区域对应到输入特征图上，取每个区域内的最大值作为该区域的输出。</p><h3 id="roi-pooling-不足"><a class="markdownIt-Anchor" href="#roi-pooling-不足"></a> RoI Pooling 不足</h3><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220216225721.png" alt="" /><br />RoI Pooling 在两次取整近似时，会导致检测信息和提取出的特征不匹配。</p><ol><li>候选框的位置取整。当RoI位置不是整数时，RoI的位置需要取整。</li><li>提取特征时取整。划分4个子区域做 max pooling，框的长度需要做近似取整。</li></ol><h3 id="roi-align"><a class="markdownIt-Anchor" href="#roi-align"></a> RoI Align</h3><p>是 RoI Pooling 的改进，核心思想是消除 RoI Pooling 中产生的误差。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220216225942.png" alt="" /><br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220216225954.png" alt="" /><br />在区域内均匀的取N个点，找到特征图上离每个点最近的四个点;再通过双线性插值的方式，得到点的输出值。最后对N个点取平均得到区域的输出。</p><h2 id="bbox-head"><a class="markdownIt-Anchor" href="#bbox-head"></a> BBox Head</h2><h3 id="训练策略-2"><a class="markdownIt-Anchor" href="#训练策略-2"></a> 训练策略</h3><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220216230049.png" alt="" /></p><ul><li>RoI Feature 经过 Pooling 将特征图从14x14压缩到1x1；然后这个特征经过两个FC作为分类分支和回归分支的预测。最后再去计算 loss 。</li><li>预测阶段和 RPN 阶段生成 proposals 的过程类似，先将 head 部分的输出和 RPN 输出的RoI解码得到预测框，再进行 NMS 得到最终预测结果。</li></ul><div class="tabs" id="tab1-"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#tab1--1">RPN 网络训练阶段</button></li><li class="tab active"><button type="button" data-href="#tab1--2">BBox Head 训练阶段</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="tab1--1"><ol><li>判断Anchor是否包含物体</li><li>根据IoU判断正or负样本。<ul><li>正样本:IoU&gt;0.7</li><li>负样本:IoU&lt;0.3</li></ul></li><li>采样规则：<ul><li>共采样256个样本</li><li>从正样本中随机采样，采样个数不超过128个</li><li>从负样本中随机采样，补齐256个样本</li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="tab1--2"><ol><li>判断 RPN 网络产生的 proposals 是否包含物体</li><li>根据RoI和真实框的IoU，判断正or负样本。<ul><li>正样本:IoU&gt;0.5</li><li>负样本:IoU&lt;0.5</li></ul></li><li>采样规则：<ul><li>共采样512个样本</li><li>从正样本中随机采样，采样个数不超过128个</li><li>从负样本中随机采样，补齐512个样本</li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="监督信息-2"><a class="markdownIt-Anchor" href="#监督信息-2"></a> 监督信息</h3><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220216231704.png" alt="" /></p><ul><li>分类分支学习每个预测框的类别</li><li>回归分支学习每个 RoI 到真实框的偏移量</li></ul><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220216232127.png" alt="" /></p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>t</mi><mi>y</mi><mo>∗</mo></msubsup><mo>=</mo><mo stretchy="false">(</mo><msup><mi>y</mi><mo>∗</mo></msup><mo>−</mo><msub><mi>y</mi><mi>a</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><msub><mi>h</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">t_y^*=(y^*-y_a)/h_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.071804em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>t</mi><mi>x</mi><mo>∗</mo></msubsup><mo>=</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mo>∗</mo></msup><mo>−</mo><msub><mi>x</mi><mi>a</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><msub><mi>w</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">t_x^*=(x^*-x_a)/w_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.935696em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>t</mi><mi>w</mi><mo>∗</mo></msubsup><mo>=</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><msup><mi>w</mi><mo>∗</mo></msup><mi mathvariant="normal">/</mi><msub><mi>w</mi><mi>a</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">t_w^*=\log(w^*/w_a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.935696em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>t</mi><mi>h</mi><mo>∗</mo></msubsup><mo>=</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><msup><mi>h</mi><mo>∗</mo></msup><mi mathvariant="normal">/</mi><msub><mi>h</mi><mi>a</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">t_h^*=\log(h^*/h_a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9718039999999999em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>a</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>a</mi></msub><mo separator="true">,</mo><msub><mi>w</mi><mi>a</mi></msub><mo separator="true">,</mo><msub><mi>h</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">x_a,y_a,w_a,h_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>——RoI</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mo>∗</mo></msup><mo separator="true">,</mo><msup><mi>y</mi><mo>∗</mo></msup><mo separator="true">,</mo><msup><mi>w</mi><mo>∗</mo></msup><mo separator="true">,</mo><msup><mi>h</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">x^*,y^*,w^*,h^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>——真实框</li></ul><h3 id="loss-2"><a class="markdownIt-Anchor" href="#loss-2"></a> Loss</h3><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220216233748.png" alt="" /></p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span>：分类分支的预测值</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>：回归分支的预测值</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>p</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">p^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8831359999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>：表示分类分支的监督信息，取值为0或1<ul><li>1：表示Anchor为正样本</li><li>0：表示Anchor为负样本</li></ul></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>t</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">t^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>：表示回归分支的监督信息</li></ul><h2 id="效果"><a class="markdownIt-Anchor" href="#效果"></a> 效果</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220216233826.png" alt="" /></p><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;思维导图&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#思维导图&quot;&gt;&lt;/a&gt; 思维导图&lt;/h1&gt;
&lt;blockquote class=&quot;pullquote mindmap mindmap-md&quot;&gt;&lt;ul&gt;
&lt;li&gt;RCNN 系列
&lt;ul</summary>
      
    
    
    
    <category term="计算机视觉" scheme="https://zoruasama.gitee.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    
    <category term="计算机视觉" scheme="https://zoruasama.gitee.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    <category term="目标检测" scheme="https://zoruasama.gitee.io/tags/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>目标检测 | 目标检测综述</title>
    <link href="https://zoruasama.gitee.io/2022/02/15/CV_objectDetection_0/"/>
    <id>https://zoruasama.gitee.io/2022/02/15/CV_objectDetection_0/</id>
    <published>2022-02-15T15:20:00.000Z</published>
    <updated>2022-02-15T16:37:13.884Z</updated>
    
    <content type="html"><![CDATA[<h1 id="思维导图"><a class="markdownIt-Anchor" href="#思维导图"></a> 思维导图</h1><blockquote class="pullquote mindmap mindmap-md"><ul><li>目标检测综述<ul><li>定义</li><li>存在的挑战</li><li>目标检测发展历程</li><li>传统目标检测算法</li><li>深度学习的优势<ul><li>传统机器视觉的局限</li><li>深度学习算法的独特优势</li></ul></li><li>RCNN 系列<ul><li>RCNN</li><li>Fast-RCNN</li><li>Faster-RCNN</li></ul></li><li>Anchor 和 Anchor-Based 方法<ul><li>两阶段方法</li><li>一阶段方法</li><li>Anchor 缺点</li></ul></li><li>Anchor-Free 方法<ul><li>基于关键点的检测算法</li><li>基于中心的检测算法</li></ul></li><li>三种算法对比</li><li>基本术语<ul><li>BBox</li><li>Anchor</li><li>RoI</li><li>Region Proposal</li><li>RPN</li><li>IoU</li><li>mAP</li><li>NMS[<sup>3][</sup>4]</li></ul></li><li>常用开源数据集</li></ul></li></ul></blockquote><h1 id="学习资料"><a class="markdownIt-Anchor" href="#学习资料"></a> 学习资料</h1><ul><li><a href="https://www.paddlepaddle.org.cn">PaddlePaddle</a></li><li><a href="https://my.oschina.net/u/876354/blog/1787921">大话目标检测经典模型（RCNN、Fast RCNN、Faster RCNN）</a></li></ul><h1 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></h1><p>目标检测，也叫目标提取，是一种基于目标几何和统计特征的图像分割。它将目标的分割和识别合二为一，其准确性和实时性是整个系统的一项重要能力。<br />它将目标的分割和识别合二为一，其准确性和实时性是整个系统的一项重要能力。尤其是在复杂场景中，需要对多个目标进行实时处理时，目标自动提取和识别就显得特别重要。<br />随着计算机技术的发展和计算机视觉原理的广泛应用，利用计算机图像处理技术对目标进行实时跟踪研究越来越热门，对目标进行动态实时跟踪定位在智能化交通系统、智能监控系统、军事目标检测及医学导航手术中手术器械定位等方面具有广泛的应用价值。</p><h1 id="存在的挑战"><a class="markdownIt-Anchor" href="#存在的挑战"></a> 存在的挑战</h1><ul><li>环境影响</li><li>模糊</li><li>密集 crowded</li><li>遮挡 occluded</li><li>重叠 highly overlapped</li><li>多尺度<ul><li>小目标 extremely small</li><li>大目标 very large</li></ul></li><li>小样本</li><li>旋转框</li><li>体积、功耗、实时性</li><li>……</li></ul><h1 id="目标检测发展历程"><a class="markdownIt-Anchor" href="#目标检测发展历程"></a> 目标检测发展历程<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></h1><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220215204354.png" alt="" /></p><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220215205625.png" alt="" /></p><h1 id="传统目标检测算法"><a class="markdownIt-Anchor" href="#传统目标检测算法"></a> 传统目标检测算法</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">digraph G&#123;</span><br><span class="line">    node [shape=box width=3]</span><br><span class="line">    a [label=&quot;区域选择\n（滑动窗口）&quot; ]</span><br><span class="line">    b [label=&quot;提取特征\n（SIFT、HOG）&quot;]</span><br><span class="line">    c [label=&quot;分类\n（SVM、Adaboost）&quot;]</span><br><span class="line">    d [label=&quot;后处理\n（NMS：过滤框）&quot;]</span><br><span class="line"></span><br><span class="line">    a-&gt;b</span><br><span class="line">    b-&gt;c</span><br><span class="line">    c-&gt;d</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220215203641.png" alt="" /></p><h1 id="深度学习的优势"><a class="markdownIt-Anchor" href="#深度学习的优势"></a> 深度学习的优势</h1><h2 id="传统机器视觉的局限"><a class="markdownIt-Anchor" href="#传统机器视觉的局限"></a> 传统机器视觉的局限</h2><ul><li>模板匹配误报高<ul><li>因为待识别目标（缺陷）千变万化</li></ul></li><li>算法适应性差<ul><li>因为不同产线、产品、微细差别需重复开发</li></ul></li><li>解决问题有限<ul><li>因为复杂背景、纹理难处理</li></ul></li><li>开发、维护成本巨大<ul><li>因为新缺陷、新Trick意味着新补丁</li></ul></li></ul><h2 id="深度学习算法的独特优势"><a class="markdownIt-Anchor" href="#深度学习算法的独特优势"></a> 深度学习算法的独特优势</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220215204829.png" alt="" /></p><ul><li>算法适应性强</li><li>更好的平衡精度&amp;过检率</li><li>可迁移学习，经验复用</li></ul><h1 id="rcnn-系列"><a class="markdownIt-Anchor" href="#rcnn-系列"></a> RCNN 系列</h1><h2 id="rcnn"><a class="markdownIt-Anchor" href="#rcnn"></a> RCNN</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220215205055.png" alt="" /></p><h2 id="fast-rcnn"><a class="markdownIt-Anchor" href="#fast-rcnn"></a> Fast-RCNN</h2><ul><li>引入RoI Pooling操作，解决重复特征提取问题</li><li>将<strong>分类和回归</strong>损失统一在同一个框架中</li><li>通过Selective Search提取候选框，速度慢，不是端到端</li></ul><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220215235230.png" alt="" /></p><h2 id="faster-rcnn"><a class="markdownIt-Anchor" href="#faster-rcnn"></a> Faster-RCNN</h2><ul><li>通过RPN（Region Proposal Network）学习候选区域</li><li>提高了精度，速度快</li></ul><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220215235252.png" alt="" /></p><h1 id="anchor-和-anchor-based-方法"><a class="markdownIt-Anchor" href="#anchor-和-anchor-based-方法"></a> Anchor 和 Anchor-Based 方法</h1><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220215205245.png" alt="" /></p><h2 id="两阶段方法"><a class="markdownIt-Anchor" href="#两阶段方法"></a> 两阶段方法</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220215232651.png" alt="" /></p><ul><li>先使用Anchor回归候选目标框，划分<strong>前景和背景</strong>。</li><li>使用候选目标框进一步<strong>回归和分类</strong>，输出最终目标框和对应的类别</li><li>R-CNN系列<ul><li>RCNN、Fast-RCNN、FasterRCNN</li><li>FPN、CascadeRCNN、LibraRCNN……</li></ul></li></ul><h2 id="一阶段方法"><a class="markdownIt-Anchor" href="#一阶段方法"></a> 一阶段方法</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220215234845.png" alt="" /></p><ul><li>直接对Anchor回归和分类最终目标框和类别</li><li>算法：<ul><li>YOLOv2 YOLOv3</li><li>SSD、RetinaNet</li></ul></li></ul><h2 id="anchor-缺点"><a class="markdownIt-Anchor" href="#anchor-缺点"></a> Anchor 缺点</h2><ul><li>手工设计<ul><li>数量？大小？长宽比？</li></ul></li><li>数量多<ul><li>如何解决正负样本不均衡问题？</li></ul></li><li>超参数<ul><li>如何对不同数据设置？</li></ul></li></ul><h1 id="anchor-free-方法"><a class="markdownIt-Anchor" href="#anchor-free-方法"></a> Anchor-Free 方法</h1><p>不再使用预先设定的Anchor，通常通过预测目标的中心或者角点，对目标进行检测。</p><h2 id="基于关键点的检测算法"><a class="markdownIt-Anchor" href="#基于关键点的检测算法"></a> 基于关键点的检测算法</h2><p>先检测目标左上角和右下角点，再通过<strong>角点</strong>组合形成检测框。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220215233218.png" alt="" /></p><p>基于<strong>多关键点联合表达的方法</strong></p><ul><li>CornerNet/CornerNet-lite</li><li>CenterNet: Keypoint Triplets for Object Detection</li><li>RepPoints</li></ul><h2 id="基于中心的检测算法"><a class="markdownIt-Anchor" href="#基于中心的检测算法"></a> 基于中心的检测算法</h2><p>直接检测物体的<strong>中心区域</strong>和边界信息，将分类和回归解耦为两个子网络。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220215233301.png" alt="" /></p><p>基于<strong>中心区域</strong>预测方法：</p><ul><li>FCOS</li><li>CenterNet: Objects as Points</li></ul><h1 id="三种算法对比"><a class="markdownIt-Anchor" href="#三种算法对比"></a> 三种算法对比</h1><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">Anchor-Based单阶段</th><th style="text-align:center">Anchor-Based两阶段</th><th style="text-align:center">Anchor-Free</th></tr></thead><tbody><tr><td style="text-align:center">网络结构</td><td style="text-align:center">简单</td><td style="text-align:center">复杂</td><td style="text-align:center">简单</td></tr><tr><td style="text-align:center">精度</td><td style="text-align:center">优秀</td><td style="text-align:center">更优秀</td><td style="text-align:center">较优秀</td></tr><tr><td style="text-align:center">预测速度</td><td style="text-align:center">快</td><td style="text-align:center">稍慢</td><td style="text-align:center">快</td></tr><tr><td style="text-align:center">超参数</td><td style="text-align:center">较多</td><td style="text-align:center">多</td><td style="text-align:center">相对少</td></tr><tr><td style="text-align:center">扩展性</td><td style="text-align:center">一般</td><td style="text-align:center">右边</td><td style="text-align:center">较好</td></tr></tbody></table><h1 id="基本术语"><a class="markdownIt-Anchor" href="#基本术语"></a> 基本术语</h1><h2 id="bbox"><a class="markdownIt-Anchor" href="#bbox"></a> BBox</h2><p>Bounding Box，边界框。</p><ul><li>绿色为人工标注的ground-truth，红色为预测结果。</li><li>有两种表达形式：<ul><li>xyxy：左上+右下</li><li>xywh：左上+宽高</li></ul></li></ul><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220215210845.png" alt="" /></p><h2 id="anchor"><a class="markdownIt-Anchor" href="#anchor"></a> Anchor</h2><p>锚框。</p><ul><li>人为设定不同长宽比、面积的先验框。</li><li>在单阶段SSD检测算法中也被称为Prior Box。</li></ul><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220215210944.png" alt="特征图" /></p><h2 id="roi"><a class="markdownIt-Anchor" href="#roi"></a> RoI</h2><p>Region of Interest，特定的感兴趣的区域。</p><h2 id="region-proposal"><a class="markdownIt-Anchor" href="#region-proposal"></a> Region Proposal</h2><p>候选区域/框。</p><h2 id="rpn"><a class="markdownIt-Anchor" href="#rpn"></a> RPN</h2><p>Region Proposal Network，在Anchor-Based的两阶段提取候选框的网络。</p><h2 id="iou"><a class="markdownIt-Anchor" href="#iou"></a> IoU</h2><p>Intersaction over Union。交并比。<br />评价预测框的质量，IoU越大则预测框与标注越接近。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220215211200.png" alt="" /></p><h2 id="map"><a class="markdownIt-Anchor" href="#map"></a> mAP</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220215213620.png" alt="" /><br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220215213638.png" alt="" /></p><h2 id="nms"><a class="markdownIt-Anchor" href="#nms"></a> NMS<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup><sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></h2><p>Non-Maximum Suppression，非极大值抑制。<br />目标检测的过程中在同一目标的位置上会产生大量的候选框，这些候选框相互之间可能会有重叠，此时我们需要利用非极大值抑制找到最佳的目标边界框，消除冗余的边界框。<br />非极大值抑制的流程如下：</p><ul><li>根据置信度得分进行排序</li><li>选择置信度最高的比边界框添加到最终输出列表中，将其从边界框列表中删除</li><li>计算所有边界框的面积</li><li>计算置信度最高的边界框与其它候选框的IoU。</li><li>删除IoU大于阈值的边界框</li><li>重复上述过程，直至边界框列表为空。</li><li></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#_*_ coding: utf-8 _*_</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Non-max Suppression Algorithm</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    @param list  Object candidate bounding boxes</span></span><br><span class="line"><span class="string">    @param list  Confidence score of bounding boxes</span></span><br><span class="line"><span class="string">    @param float IoU threshold</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    @return Rest boxes after nms operation</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">nms</span>(<span class="params">bounding_boxes, confidence_score, threshold</span>):</span></span><br><span class="line">    <span class="comment"># If no bounding boxes, return empty list</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(bounding_boxes) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> [], []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Bounding boxes</span></span><br><span class="line">    boxes = np.array(bounding_boxes)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># coordinates of bounding boxes</span></span><br><span class="line">    start_x = boxes[:, <span class="number">0</span>]</span><br><span class="line">    start_y = boxes[:, <span class="number">1</span>]</span><br><span class="line">    end_x = boxes[:, <span class="number">2</span>]</span><br><span class="line">    end_y = boxes[:, <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Confidence scores of bounding boxes</span></span><br><span class="line">    score = np.array(confidence_score)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Picked bounding boxes</span></span><br><span class="line">    picked_boxes = []</span><br><span class="line">    picked_score = []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Compute areas of bounding boxes</span></span><br><span class="line">    areas = (end_x - start_x + <span class="number">1</span>) * (end_y - start_y + <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Sort by confidence score of bounding boxes</span></span><br><span class="line">    order = np.argsort(score)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Iterate bounding boxes</span></span><br><span class="line">    <span class="keyword">while</span> order.size &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="comment"># The index of largest confidence score</span></span><br><span class="line">        index = order[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Pick the bounding box with largest confidence score</span></span><br><span class="line">        picked_boxes.append(bounding_boxes[index])</span><br><span class="line">        picked_score.append(confidence_score[index])</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Compute ordinates of intersection-over-union(IOU)</span></span><br><span class="line">        x1 = np.maximum(start_x[index], start_x[order[:-<span class="number">1</span>]])</span><br><span class="line">        x2 = np.minimum(end_x[index], end_x[order[:-<span class="number">1</span>]])</span><br><span class="line">        y1 = np.maximum(start_y[index], start_y[order[:-<span class="number">1</span>]])</span><br><span class="line">        y2 = np.minimum(end_y[index], end_y[order[:-<span class="number">1</span>]])</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Compute areas of intersection-over-union</span></span><br><span class="line">        w = np.maximum(<span class="number">0.0</span>, x2 - x1 + <span class="number">1</span>)</span><br><span class="line">        h = np.maximum(<span class="number">0.0</span>, y2 - y1 + <span class="number">1</span>)</span><br><span class="line">        intersection = w * h</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Compute the ratio between intersection and union</span></span><br><span class="line">        ratio = intersection / (areas[index] + areas[order[:-<span class="number">1</span>]] - intersection)</span><br><span class="line"></span><br><span class="line">        left = np.where(ratio &lt; threshold)</span><br><span class="line">        order = order[left]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> picked_boxes, picked_score</span><br><span class="line"><span class="comment">#Image name</span></span><br><span class="line">image_name = <span class="string">&#x27;nms.jpg&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Bounding boxes</span></span><br><span class="line">bounding_boxes = [(<span class="number">187</span>, <span class="number">82</span>, <span class="number">337</span>, <span class="number">317</span>), (<span class="number">150</span>, <span class="number">67</span>, <span class="number">305</span>, <span class="number">282</span>), (<span class="number">246</span>, <span class="number">121</span>, <span class="number">368</span>, <span class="number">304</span>)]</span><br><span class="line">confidence_score = [<span class="number">0.9</span>, <span class="number">0.75</span>, <span class="number">0.8</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#Read image</span></span><br><span class="line">image = cv2.imread(image_name)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Copy image as original</span></span><br><span class="line">org = image.copy()</span><br><span class="line"></span><br><span class="line"><span class="comment">#Draw parameters</span></span><br><span class="line">font = cv2.FONT_HERSHEY_SIMPLEX</span><br><span class="line">font_scale = <span class="number">1</span></span><br><span class="line">thickness = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#IoU threshold</span></span><br><span class="line">threshold = <span class="number">0.4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Draw bounding boxes and confidence score</span></span><br><span class="line"><span class="keyword">for</span> (start_x, start_y, end_x, end_y), confidence <span class="keyword">in</span> <span class="built_in">zip</span>(bounding_boxes, confidence_score):</span><br><span class="line">    (w, h), baseline = cv2.getTextSize(<span class="built_in">str</span>(confidence), font, font_scale, thickness)</span><br><span class="line">    cv2.rectangle(org, (start_x, start_y - (<span class="number">2</span> * baseline + <span class="number">5</span>)), (start_x + w, start_y), (<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), -<span class="number">1</span>)</span><br><span class="line">    cv2.rectangle(org, (start_x, start_y), (end_x, end_y), (<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">2</span>)</span><br><span class="line">    cv2.putText(org, <span class="built_in">str</span>(confidence), (start_x, start_y), font, font_scale, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), thickness)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Run non-max suppression algorithm</span></span><br><span class="line">picked_boxes, picked_score = nms(bounding_boxes, confidence_score, threshold)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Draw bounding boxes and confidence score after non-maximum supression</span></span><br><span class="line"><span class="keyword">for</span> (start_x, start_y, end_x, end_y), confidence <span class="keyword">in</span> <span class="built_in">zip</span>(picked_boxes, picked_score):</span><br><span class="line">    (w, h), baseline = cv2.getTextSize(<span class="built_in">str</span>(confidence), font, font_scale, thickness)</span><br><span class="line">    cv2.rectangle(image, (start_x, start_y - (<span class="number">2</span> * baseline + <span class="number">5</span>)), (start_x + w, start_y), (<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), -<span class="number">1</span>)</span><br><span class="line">    cv2.rectangle(image, (start_x, start_y), (end_x, end_y), (<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">2</span>)</span><br><span class="line">    cv2.putText(image, <span class="built_in">str</span>(confidence), (start_x, start_y), font, font_scale, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), thickness)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Show image</span></span><br><span class="line">cv2.imshow(<span class="string">&#x27;Original&#x27;</span>, org)</span><br><span class="line">cv2.imshow(<span class="string">&#x27;NMS&#x27;</span>, image)</span><br><span class="line">cv2.waitKey(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220215213727.png" alt="" /></p><h1 id="常用开源数据集"><a class="markdownIt-Anchor" href="#常用开源数据集"></a> 常用开源数据集</h1><table><thead><tr><th style="text-align:left">数据集</th><th style="text-align:left">类别数</th><th style="text-align:left">train图片数，box数</th><th style="text-align:left">val图片数，box数</th><th style="text-align:left">boxes/Image</th></tr></thead><tbody><tr><td style="text-align:left">Pascal VOC-2012</td><td style="text-align:left">20</td><td style="text-align:left">5717,13k+</td><td style="text-align:left">5823,13k+</td><td style="text-align:left">2.4</td></tr><tr><td style="text-align:left">COCO</td><td style="text-align:left">80</td><td style="text-align:left">118287,40k+</td><td style="text-align:left">5000,36k+</td><td style="text-align:left">7.3</td></tr><tr><td style="text-align:left">Object365</td><td style="text-align:left">365</td><td style="text-align:left">600k,9623k</td><td style="text-align:left">38k,479k</td><td style="text-align:left">16</td></tr><tr><td style="text-align:left">OpenImages18</td><td style="text-align:left">500</td><td style="text-align:left">1643042,860k+</td><td style="text-align:left">100000,696k+</td><td style="text-align:left">7.0</td></tr></tbody></table><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>百度百科：<a href="https://baike.baidu.com/item/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/8688936?fr=aladdin">https://baike.baidu.com/item/目标检测/8688936?fr=aladdin</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>Zhengxia Zou, Zhenwei Shi, Yuhong Guo, Jieping Ye: “Object Detection in 20 Years: A Survey”, 2019; <a href="http://arxiv.org/abs/1905.05055">arXiv:1905.05055</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p>非极大值抑制(Non-Maximum Suppression), SnailTyan, <a href="https://www.jianshu.com/p/d452b5615850">https://www.jianshu.com/p/d452b5615850</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p></li><li id="fn4" class="footnote-item"><p>Code: <a href="https://github.com/SnailTyan/deep-learning-tools/blob/master/nms.py">https://github.com/SnailTyan/deep-learning-tools/blob/master/nms.py</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p></li></ol></section><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;思维导图&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#思维导图&quot;&gt;&lt;/a&gt; 思维导图&lt;/h1&gt;
&lt;blockquote class=&quot;pullquote mindmap mindmap-md&quot;&gt;&lt;ul&gt;
&lt;li&gt;目标检测综述
&lt;ul&gt;</summary>
      
    
    
    
    <category term="计算机视觉" scheme="https://zoruasama.gitee.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    
    <category term="计算机视觉" scheme="https://zoruasama.gitee.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    <category term="目标检测" scheme="https://zoruasama.gitee.io/tags/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>数字图像处理 | 一个简易提取圆形的工具</title>
    <link href="https://zoruasama.gitee.io/2022/01/04/imageProcessing_0/"/>
    <id>https://zoruasama.gitee.io/2022/01/04/imageProcessing_0/</id>
    <published>2022-01-04T09:00:00.000Z</published>
    <updated>2022-01-04T09:46:37.059Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h1><p>最近这段时间，我在我的博客的<strong>友情链接功能</strong>中完成了新的特性。就像下面这幅图一样，可以在卡片上显示院校校徽。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20211228154503.png" alt="" /></p><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20211228154626.png" alt="点击可以显示大图" /></p><p>不过这其中有一个问题是，这些院校的校徽素材网上并没有现成的，所以还得我自己来进行处理。<br />于是乎我打开了图像处理软件 Photoshop 来处理这些图片素材。</p><h1 id="photoshop-处理流程以厦门大学为例"><a class="markdownIt-Anchor" href="#photoshop-处理流程以厦门大学为例"></a> Photoshop 处理流程（以厦门大学为例）</h1><h2 id="新建图片"><a class="markdownIt-Anchor" href="#新建图片"></a> 新建图片</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20211228155203.png" alt="" /><br />新建一张大小为300x300的条件，这个大小是我根据自己的需要设定为标准的。</p><h2 id="网上收集校徽素材"><a class="markdownIt-Anchor" href="#网上收集校徽素材"></a> 网上收集校徽素材</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20211228155752.png" alt="" /><br />打开百度搜索合适的校徽素材，一般要求就是清晰，背景简单不复杂。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20211228155929.png" alt="" /><br />然后直接使用截图工具截图，这里为了后续<strong>自由变换</strong>比较方便，截图时直接截取正方形大小的区域。</p><h2 id="调整大小和位置"><a class="markdownIt-Anchor" href="#调整大小和位置"></a> 调整大小和位置</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20211228160107.png" alt="" /><br />粘贴至Photoshop中后，用<strong>自由变换</strong>调整大小，使得校徽刚好内切于这个正方形。就像下面这张图所呈现的一样。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20211228160256.png" alt="" /></p><h2 id="把背景变透明"><a class="markdownIt-Anchor" href="#把背景变透明"></a> 把背景变透明</h2><p>直接使用魔棒工具选中周围的白色区域，然后删除它们。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20211228160433.png" alt="" /></p><h2 id="最终效果"><a class="markdownIt-Anchor" href="#最终效果"></a> 最终效果</h2><p>最终效果如图所示。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20211228160535.png" alt="" /></p><hr /><p>虽然有PS的帮助，这项工作变得没有那么麻烦，可要处理数量如此繁多的图像，一张一张来还是有些麻烦。于是我开始思考，这个过程能不能用程序来辅助呢？遂进入这篇文章的正题：一个简单的图像处理程序。</p><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20211228160644.png" alt="" /></p><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>在做这个计划之前，我作了一个思考。我说要做一个处理这个流程的图像处理程序，其实Photoshop就是一个图像处理程序。但是前者是解决特定某个问题的，而后者是泛用型的（而且为了方便地泛用做了GUI界面）。<br />另一个问题是，学校里并没有教授图像处理相关的课程，调用库函数之类的活儿几乎也是人人都能干。那么科班生和非科班生的区别在哪里呢？<br />我想，图像处理的本质仍然是数字处理。虽然库函数里读入图像、写到图像就像一个黑盒一样，使用者不必关心其内部如何，但是我大概能摸索出它的内部实现或许是根据文件的编码格式来读取二进制数据放到内存的不同数据结构中（如下图是BMP图像的文件格式，详情可以查看<a href="https://blog.csdn.net/lijian2017/article/details/80783963">这篇文章</a>）；<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20211228163406.png" alt="" /></p><p>再例如<code>resize</code>函数，看似简单的调整大小，它的内部实现应该是原图像和新图像之间有某种函数映射，如果是放大图像，新图像像素数量比原图像像素数量多，所以新图像中部分像素肯定是需要通过原图像像素用某种算法来得出。这些思维是我学习学校课程得到的。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20211228162914.png" alt="" /></p><p>所以同样是放大5倍，画图工具和贴图工具产生的最终结果不一样。因为可以选择的插值算法有很多种。如下图所示是Photoshop中的插值算法。</p><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20211228162951.png" alt="" /></p><p>综上所述，即使学校没有直接教学怎么写图像处理的代码，也教会了我们“数据与计算”的思想，有了这个思想再去学习很多东西是很有助力的。</p><h1 id="任务规划"><a class="markdownIt-Anchor" href="#任务规划"></a> 任务规划</h1><p>通过之前使用Photoshop对图像进行处理，可以把这个任务归结为以下几个步骤：</p><div><div class="graphviz">digraph G{    node [shape=box width=4]    a [label="输入图片" ]    b [label="定位图形"]    c [label="把周围白色的变成透明的"]    d [label="裁切成内切，然后调整为300x300大小"]    e [label="输出图片"]<pre><code>a-&gt;bb-&gt;cc-&gt;dd-&gt;e</code></pre><p>}</div></div></p><h2 id="环境配置"><a class="markdownIt-Anchor" href="#环境配置"></a> 环境配置</h2><ul><li>使用Python 3.8.12</li><li>使用<code>matplotlib</code>、<code>skimage</code>和<code>numpy</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> skimage.transform</span><br><span class="line"><span class="keyword">import</span> skimage.draw</span><br><span class="line"><span class="keyword">import</span> skimage.io</span><br></pre></td></tr></table></figure><h2 id="输入图片示例"><a class="markdownIt-Anchor" href="#输入图片示例"></a> 输入图片示例</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220104160044.png" alt="" /><br />均为网络收集（好像混入了什么奇怪的东西）。<br />背景均为简单的白色，图片上没有其他复杂图形，只有一个圆形图形。<br />接下来这个工具只能处理圆形校徽，暂且不支持异形（如南京大学、华中科技大学等）。好在大部分高校的校徽都是圆形的。</p><h2 id="输出图片示例"><a class="markdownIt-Anchor" href="#输出图片示例"></a> 输出图片示例</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220104160055.png" alt="" /><br />文件名字是我后来自己修改的。</p><h1 id="实现"><a class="markdownIt-Anchor" href="#实现"></a> 实现</h1><h2 id="输入图片"><a class="markdownIt-Anchor" href="#输入图片"></a> 输入图片</h2><p>首先先设定三个基础的变量，然后用<code>matplotlib.pyplot</code>里的<code>imread</code>函数读入这个文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">input</span>=<span class="string">&quot;./inputs/&quot;</span></span><br><span class="line">output=<span class="string">&quot;./outputs/&quot;</span></span><br><span class="line">filename=<span class="string">&quot;1.png&quot;</span></span><br><span class="line">img = plt.imread(<span class="built_in">input</span> + imgname)</span><br></pre></td></tr></table></figure><h2 id="定位位置"><a class="markdownIt-Anchor" href="#定位位置"></a> 定位位置</h2><h3 id="基本方法"><a class="markdownIt-Anchor" href="#基本方法"></a> 基本方法</h3><p>如果想把图片裁切成内切，那么得想办法先定位圆的位置。这里我选择用一种简单粗暴的方法定位圆形，那就是逐行扫描。<br />由于输入图像的背景都是白色的，而校徽基本上都是非白色的，因此——</p><blockquote><ol><li>从头扫描第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>行，逐个判断像素点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>是否为白色，如果是，结束扫描，记录这个像素点的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">y_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，然后</li><li>从尾扫描第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>行，逐个判断像素点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>是否为白色，如果是，结束扫描，记录这个像素点的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">y_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，再扫描<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>行</li><li>扫描完所有行后，可以得到这过程中最大的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mn>2</mn></msub><mo>−</mo><msub><mi>y</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">y_2-y_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>值以及取得该值的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x_{max}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</li></ol><p>那么就获得了这个圆的圆心为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo separator="true">,</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><msub><mi>y</mi><mn>2</mn></msub><mo>+</mo><msub><mi>y</mi><mn>1</mn></msub></mrow><mn>2</mn></mfrac></mstyle><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_{max},\dfrac{y_2+y_1}{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.9463300000000001em;vertical-align:-0.686em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2603300000000002em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span>，半径为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><msub><mi>y</mi><mn>2</mn></msub><mo>−</mo><msub><mi>y</mi><mn>1</mn></msub></mrow><mn>2</mn></mfrac></mstyle><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\dfrac{y_2-y_1}{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.9463300000000001em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2603300000000002em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span>。有了圆心和半径，自然就可以确定这个圆的位置。</p></blockquote><p>用下面的方法输出处理的结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">plt.plot([ansl,ansr],[ansx,ansx],<span class="string">&quot;r--o&quot;</span>) <span class="comment">#画出直径</span></span><br><span class="line">ox=<span class="built_in">round</span>((ansr+ansl)/<span class="number">2</span>) <span class="comment">#计算圆心</span></span><br><span class="line">oy=ansx</span><br><span class="line">r=<span class="built_in">int</span>(ans/<span class="number">2</span>) <span class="comment">#计算半径</span></span><br><span class="line">plt.imshow(img)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220104162217.png" alt="" /><br />为了可视化上面那个过程，我把程序判断的白色像素点画成了黑色，而非白色像素点保持不变。<br />发现程序并没有很好地完成这个轮廓的识别。虽然在上图直径似乎是判断准确了，但是这是一个巧合：在轮廓判断不对的情况下，大部分输入图像的直径都是很难判断准确的。这是为什么呢？<br />这是因为周边那些像素点其实都不是真正的“白色”。如下图所示，这个点虽然看上去是白色，但不是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>255</mn><mo separator="true">,</mo><mn>255</mn><mo separator="true">,</mo><mn>255</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(255,255,255)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">5</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">5</span><span class="mclose">)</span></span></span></span>的白色，而程序在判断该像素点是否为白色像素点时，又是直接比对的RGB值。那么有什么好的解决方法吗？我选择引入颜色距离。（我不知道是否还有更好的方法，在这里我姑且这样做了）<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220104162847.png" alt="" /></p><h3 id="颜色距离"><a class="markdownIt-Anchor" href="#颜色距离"></a> 颜色距离</h3><p>首先我在不少课程里面都接触过向量距离这个概念，描述向量距离可以用欧氏距离、曼哈顿距离、切比雪夫距离、马氏距离、余弦距离等等。<br />而RGB值同样也可以视为是一个向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(r,g,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span>，在本次应用中，我选择简单的欧氏距离，代码实现如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">diff</span>(<span class="params">a,b</span>):</span></span><br><span class="line">    <span class="keyword">return</span> (a[<span class="number">0</span>]-b[<span class="number">0</span>])**<span class="number">2</span> + (a[<span class="number">1</span>]-b[<span class="number">1</span>])**<span class="number">2</span> + + (a[<span class="number">2</span>]-b[<span class="number">2</span>])**<span class="number">2</span></span><br></pre></td></tr></table></figure><p>那么<code>diff(rgb,[255,255,255])</code>结果反馈了某个颜色值与白色的相近程度。接下来就能用一个不等式来判断这个是否为“白色”。<br />即：<code>if diff(rgb,[255,255,255]) &lt; threshold</code><br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220104170149.png" alt="" /><br />如图所示，随着阈值<code>threshold</code>升高，轮廓获取得也就越来越准确。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220104170237.png" alt="" /><br />最后标注的直径也是准确的。</p><h3 id="又一个新问题"><a class="markdownIt-Anchor" href="#又一个新问题"></a> 又一个新问题</h3><p>然而，这在我测试下一张输入图片时，又发现了新的问题。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220104170322.png" alt="" /><br />可以看到这个直径标注得或许有点偏了。这又是为什么呢？<br />经过分析：<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220104170617.png" alt="" /><br />由于这些正切位置的像素在水平方向上变化较小，有些图像会处理成一条“直线”。（因为这是位图而非矢量图）<br />因此这个地方需要一些修正。我的修正方法是，将同样达到当前<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mn>2</mn></msub><mo>−</mo><msub><mi>y</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">y_2-y_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>最大值的位置加入到列表中。同时当产生新的最大值时，列表要清空。<br />最后在算法结束时，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x_{max}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>通过计算列表的平均值来获得。即<code>ansx=int(np.average(anslist))</code>。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/202112/20220104171018.png" alt="" /><br />可以看到，经过“取平均”方法修正后，可以取得正常的直径了。</p><p>至此，轮廓和直径都能正常的判断了，即圆心和半径都能正常判断了。得到了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>o</mi><mi>x</mi><mo separator="true">,</mo><mi>o</mi><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(r,ox,oy)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>。</p><h2 id="把周围白色的变成透明的"><a class="markdownIt-Anchor" href="#把周围白色的变成透明的"></a> 把周围白色的变成透明的</h2><p>把图像某个地方变成透明的，首先要解决的问题是，一个像素点仅有RGB值，是没有办法表达“透明“的信息的。<br />因此需要引入新的通道，即把RGB变成RGBA，才能表达“透明”的信息。A就是Alpha，不透明度。<br />我的输入图像为RGB 3通道图像，通过下面这个方法变为RGBA 4通道图像。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rgb2rgba</span>(<span class="params">img</span>):</span></span><br><span class="line">    new_img = np.zeros((img.shape[<span class="number">0</span>],img.shape[<span class="number">1</span>],img.shape[<span class="number">2</span>]+<span class="number">1</span>),dtype=<span class="string">&#x27;float&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,img.shape[<span class="number">0</span>]):</span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,img.shape[<span class="number">1</span>]):</span><br><span class="line">            new_img[x][y] = np.append(img[x][y],<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> new_img</span><br></pre></td></tr></table></figure><p>变为四通道后，只要让RGBA<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(r,g,b,a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span></span></span></span>的第四维<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>，变为0，就是完全透明了。<br />而我在上一小节已经把图像的白色背景识别出来了，而且把他们标记成了黑色，实际上只要把这个步骤修改，标记为透明，就能达成这一小节的目标。<br />用代码表示，则为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">img[x][y]=[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line"><span class="comment"># 前三个维度任何值都无所谓，最后一个维度要为0</span></span><br></pre></td></tr></table></figure><h2 id="裁切成内切然后调整为300x300大小"><a class="markdownIt-Anchor" href="#裁切成内切然后调整为300x300大小"></a> 裁切成内切，然后调整为300x300大小</h2><p>首先根据之前得到的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>o</mi><mi>x</mi><mo separator="true">,</mo><mi>o</mi><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(r,ox,oy)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>，可以简单地使用ROI裁切到目标区域。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">img = img[oy-r:oy+r,ox-r:ox+r]  <span class="comment">#ROI区域选择</span></span><br></pre></td></tr></table></figure><p>然后使用<code>skimage.transform.resize</code>方法（其他图像处理库的resize方法也可以）完成大小的调整。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">img = skimage.transform.resize(img,output_shape=(<span class="number">300</span>,<span class="number">300</span>))</span><br></pre></td></tr></table></figure><h2 id="输出图片"><a class="markdownIt-Anchor" href="#输出图片"></a> 输出图片</h2><p>最后用<code>skimage.io.imsave</code>输出图片即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">skimage.io.imsave(output+filename, img)</span><br><span class="line"><span class="comment"># 我原来是使用plt.imsave来存储的。但是在resize时，有些像素点的RGB值可能会是超过1的值（例如1.00003）从而存储失败</span></span><br><span class="line"><span class="comment"># 似乎是plt.imsave存储float 0..1的要求好像比较高</span></span><br><span class="line"><span class="comment"># 不知道我的理解对不对。欢迎读者提出勘误和高见。</span></span><br><span class="line"><span class="comment"># plt.imsave(output+filename,img)</span></span><br></pre></td></tr></table></figure><h1 id="结论"><a class="markdownIt-Anchor" href="#结论"></a> 结论</h1><p>虽然由于我的业务不精湛，制作这个程序花了不少时间，碰了不少壁，但是解决这个问题的过程中，也能学习到不少东西，能够熟练这些图像处理库的用法，为日后做更进一步的工作作一定的铺垫。</p><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;背景&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#背景&quot;&gt;&lt;/a&gt; 背景&lt;/h1&gt;
&lt;p&gt;最近这段时间，我在我的博客的&lt;strong&gt;友情链接功能&lt;/strong&gt;中完成了新的特性。就像下面这幅图一样，可以在卡片上显示院校校徽。&lt;br</summary>
      
    
    
    
    <category term="数字图像处理" scheme="https://zoruasama.gitee.io/categories/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
    <category term="数字图像处理" scheme="https://zoruasama.gitee.io/tags/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Unity | Unity 窗口介绍</title>
    <link href="https://zoruasama.gitee.io/2021/12/21/unity_0/"/>
    <id>https://zoruasama.gitee.io/2021/12/21/unity_0/</id>
    <published>2021-12-21T13:35:00.000Z</published>
    <updated>2021-12-21T13:37:23.378Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211221213345.png" alt="" /><br />这篇文章是对Unity软件的窗口进行一个简单的介绍。<br />在Unity调整到<code>2 by 3</code>布局下，可以更好地看见这几个窗口。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211221182323.png" alt="" /></p><h1 id="scene-场景编辑窗口"><a class="markdownIt-Anchor" href="#scene-场景编辑窗口"></a> Scene 场景编辑窗口</h1><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211221183912.png" alt="" /></p><p>左边的工具栏可以使用<code>Q``W``E``R``T``Y</code>的快捷键来快速切换。它们的功能分别是：</p><ul><li>在屏幕方向对画面进行平移。</li><li>调整物体的x, y, z坐标位置。</li><li>调整物体的旋转角度。</li><li>调整物体的缩放大小。</li><li>框选多个物体。</li><li>从图标上可以知道它是<code>W``E``R</code>的结合。</li></ul><p>按住右键，再操作<code>W``A``S``D``Q``E</code>可以在里面“体验”一下。</p><h1 id="game-游戏运行窗口"><a class="markdownIt-Anchor" href="#game-游戏运行窗口"></a> Game 游戏运行窗口</h1><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211221195353.png" alt="" /><br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211221195708.png" alt="" /><br />游戏的窗口，可以通过这些个按钮来操作。<br />上面工具栏：</p><ul><li>Game/Simulator：桌面端和移动端</li><li>Display 1：显示第几个Camera的视角（？）</li><li>Free Aspects：画面比例</li><li>Scale：放大倍数</li><li>Play Focused：里面有个maximized，是下次play时全屏播放</li><li>Mute Audio：静音</li><li>Stats：显示硬件数据</li><li>Gizmos：可视化辅助工具</li></ul><h1 id="hierarchy-场景物体列表窗口"><a class="markdownIt-Anchor" href="#hierarchy-场景物体列表窗口"></a> Hierarchy 场景物体列表窗口</h1><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211221200149.png" alt="" /><br />显示场景中已有的物体，双击物体，镜头会移动到物体处。</p><h1 id="project-项目资源列表窗口"><a class="markdownIt-Anchor" href="#project-项目资源列表窗口"></a> Project 项目资源列表窗口</h1><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211221212509.png" alt="" /></p><p>放置模型等素材资源。<br />要修改时最好在这个窗口直接修改，因为它会生成<code>*.meta</code>文件。在Windows资源管理器中修改时可能会报错。</p><h1 id="inspector-属性编辑列表窗口"><a class="markdownIt-Anchor" href="#inspector-属性编辑列表窗口"></a> Inspector 属性编辑列表窗口</h1><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211221213059.png" alt="" /><br />在Scene窗口中选中物体后，可以在这里修改它的属性。</p><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#前言&quot;&gt;&lt;/a&gt; 前言&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://gitee.com/zoruasama/Zorua-Pic/raw/master/2021122121334</summary>
      
    
    
    
    <category term="Unity" scheme="https://zoruasama.gitee.io/categories/Unity/"/>
    
    
    <category term="Unity" scheme="https://zoruasama.gitee.io/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>算法笔记 | KMP算法</title>
    <link href="https://zoruasama.gitee.io/2021/12/20/algorithm_4/"/>
    <id>https://zoruasama.gitee.io/2021/12/20/algorithm_4/</id>
    <published>2021-12-20T13:30:00.000Z</published>
    <updated>2021-12-20T13:32:11.804Z</updated>
    
    <content type="html"><![CDATA[<h1 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h1><p><strong>KMP算法</strong>是一种改进的字符串匹配算法，由D.E.Knuth，J.H.Morris和V.R.Pratt提出的，因此人们称它为克努特—莫里斯—普拉特操作（简称KMP算法）。KMP算法的核心是<strong>利用匹配失败后的信息，尽量减少模式串与主串的匹配次数以达到快速匹配的目的</strong>。具体实现就是通过一个<strong>next()函数</strong>实现，函数本身包含了模式串的局部匹配信息。KMP算法的时间复杂度O(m+n)<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>。</p><hr /><p>上面这个<code>next()</code>函数，有的地方也把它叫做<code>fail()</code>函数。</p><h2 id="背景问题"><a class="markdownIt-Anchor" href="#背景问题"></a> 背景问题</h2><p>例如对于下面一个文本串：</p><blockquote><p>ABCDABABCDEAB</p></blockquote><p>模式串为<code>ABCDE</code><br />直接可以想到的解法就是，用一个双重循环移位去一位一位地比较。就像下面这个代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">string a=<span class="string">&quot;ABCDABABCDEAB&quot;</span>,b=<span class="string">&quot;ABCDE&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> lena=a.<span class="built_in">length</span>(),lenb=b.<span class="built_in">length</span>();</span><br><span class="line"><span class="keyword">bool</span> flag;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;lena;++i)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=lenb;++j)&#123; <span class="comment">//循环到lenb用于判断是否完全匹配</span></span><br><span class="line">        <span class="keyword">if</span>(j==lenb) flag=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(a[i+j]!=b[j]) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Succeed at position: &quot;</span>&lt;&lt;i&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果匹配起点位置的变化能如下图所示，就可以减少很多次不必要的匹配。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211220161314.png" alt="" /></p><h1 id="具体实现"><a class="markdownIt-Anchor" href="#具体实现"></a> 具体实现</h1><h2 id="理论"><a class="markdownIt-Anchor" href="#理论"></a> 理论</h2><p>next数组其实就是当匹配失败时，起点位置应该从哪里开始。<strong>next数组是对模式串进行的预处理</strong></p><blockquote><p>next[i] 表示 P[0] ~ P[i] 这一个子串，使得 前k个字符恰等于后k个字符 的最大的k. 特别地，k不能取i+1（因为这个子串一共才 i+1 个字符，自己肯定与自己相等，就没有意义了）。</p></blockquote><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211220164531.jpg" alt="" /></p><p>上图给出了一个例子。P=“abcabd&quot;时，next[4]=2，这是因为P[0] ~ P[4] 这个子串是&quot;abcab”，前两个字符与后两个字符相等，因此next[4]取2. 而next[5]=0，是因为&quot;abcabd&quot;找不到前缀与后缀相同，因此只能取0.</p><p>如果把模式串视为一把标尺，在主串上移动，那么 Brute-Force 就是每次失配之后只右移一位；改进算法则是<strong>每次失配之后，移很多位</strong>，跳过那些不可能匹配成功的位置。但是该如何确定要移多少位呢？</p><p>失配之后，标尺移动之后，由于发生失配的位置前绝不可能匹配了，所以起始位置i不用变动，直接变动j就可以了。如果第一位就失配，那么i就要移动一位，所以在next数组里面next[0]标记为-1。</p><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211220201021.jpg" alt="" /></p><h2 id="next预处理"><a class="markdownIt-Anchor" href="#next预处理"></a> next预处理</h2><h3 id="普通方法"><a class="markdownIt-Anchor" href="#普通方法"></a> 普通方法</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据next数组的定义来形成 O(m^2)</span></span><br><span class="line"><span class="keyword">int</span> next[maxn];</span><br><span class="line">next[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line"><span class="number">012345</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;lenb;++i)&#123; <span class="comment">//前i个字符组成的子串</span></span><br><span class="line">    next[i]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> p=i<span class="number">-1</span>;p&gt;=<span class="number">1</span>;--p)&#123; <span class="comment">//前后缀长度为p</span></span><br><span class="line">        <span class="keyword">if</span>(b.<span class="built_in">substr</span>(<span class="number">0</span>,p) == b.<span class="built_in">substr</span>(i-p+<span class="number">1</span>,i))&#123;</span><br><span class="line">            next[i]=p;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="优化方法"><a class="markdownIt-Anchor" href="#优化方法"></a> 优化方法<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//复旦大学朱洪教授的优化预处理算法 O(m)</span></span><br><span class="line"><span class="keyword">int</span> next[maxn];</span><br><span class="line">next[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> k=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(j&lt;lenb<span class="number">-1</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">-1</span>||b[j]==b[k])&#123;   <span class="comment">//匹配下一个</span></span><br><span class="line">        ++j;</span><br><span class="line">        ++k;</span><br><span class="line">        next[j] = k;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        k = next[k];        <span class="comment">//回溯</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//k==-1 -&gt; next[1]=0;</span></span><br><span class="line"><span class="comment">//p[1]==p[0] ? next[2]=1 : k=next[0]=-1</span></span><br><span class="line"><span class="comment">//p[2]==p[1] ? next[3]=2 : k=next[1]=0</span></span><br><span class="line"><span class="comment">//...</span></span><br></pre></td></tr></table></figure><h2 id="比较字符串"><a class="markdownIt-Anchor" href="#比较字符串"></a> 比较字符串</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i&lt;lena)&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[i]==b[j])&#123;  <span class="comment">//两个字符相等，各进一步</span></span><br><span class="line">        i++;j++;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(j)&#123;</span><br><span class="line">        j=nexts[j<span class="number">-1</span>]; <span class="comment">//非第一位失配，按next数组右移标尺</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        i++;   <span class="comment">// 第一位失配，直接右移i</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j==lenb)&#123;</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">1</span>) cout&lt;&lt;<span class="string">&quot;Succeed at position: &quot;</span>&lt;&lt;i-j;</span><br><span class="line">        <span class="comment">// j=nexts[j-1] //再移动标尺 如果是完全寻找的话</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="方法比较"><a class="markdownIt-Anchor" href="#方法比较"></a> 方法比较</h1><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211220161010.png" alt="" /><br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211220211738.png" alt="" /></p><p>我用的这个字符串例子比较的差距看似还不算特别大，用一些比较长的字符串能更好地体现KMP的性能。<br />例如<code>string a=&quot;ABCDABABCDABABCDABABCDABABCDEAB&quot;,b=&quot;ABCDE&quot;;</code></p><h2 id="详细代码"><a class="markdownIt-Anchor" href="#详细代码"></a> 详细代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">string a=<span class="string">&quot;ABCDABABCDEAB&quot;</span>,b=<span class="string">&quot;ABCDE&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> lena=a.<span class="built_in">length</span>(),lenb=b.<span class="built_in">length</span>();</span><br><span class="line"><span class="keyword">bool</span> flag;</span><br><span class="line"><span class="keyword">int</span> t=<span class="number">10000000</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        flag=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;lena;++i)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=lenb;++j)&#123;</span><br><span class="line">               <span class="keyword">if</span>(j==lenb) flag=<span class="literal">true</span>;</span><br><span class="line">               <span class="keyword">if</span>(a[i+j]!=b[j]) <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">                <span class="keyword">if</span>(t==<span class="number">1</span>) cout&lt;&lt;<span class="string">&quot;Succeed at positions: &quot;</span>&lt;&lt;i&lt;&lt;endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//864ms 692kb (10000000 times)</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">string a=<span class="string">&quot;ABCDABABCDEAB&quot;</span>,b=<span class="string">&quot;ABCDE&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> lena=a.<span class="built_in">length</span>(),lenb=b.<span class="built_in">length</span>();</span><br><span class="line"><span class="keyword">bool</span> flag;</span><br><span class="line"><span class="keyword">int</span> t=<span class="number">10000000</span>;</span><br><span class="line"><span class="keyword">int</span> nexts[<span class="number">1000</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getNext</span><span class="params">()</span></span>&#123;</span><br><span class="line">    nexts[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(j&lt;lenb<span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(k==<span class="number">-1</span>||b[j]==b[k])&#123;   <span class="comment">//匹配下一个</span></span><br><span class="line">            ++j;</span><br><span class="line">            ++k;</span><br><span class="line">            nexts[j] = k;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            k = nexts[k];        <span class="comment">//回溯</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">getNext</span>();</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;lena)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]==b[j])&#123;  <span class="comment">//两个字符相等，各进一步</span></span><br><span class="line">                i++;j++;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(j)&#123;</span><br><span class="line">                j=nexts[j<span class="number">-1</span>]; <span class="comment">//非第一位失配，按next数组右移标尺</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                i++;   <span class="comment">// 第一位失配，直接右移i</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(j==lenb)&#123;</span><br><span class="line">                <span class="keyword">if</span>(t==<span class="number">1</span>) cout&lt;&lt;<span class="string">&quot;Succeed at position: &quot;</span>&lt;&lt;i-j;</span><br><span class="line">                <span class="comment">// j=nexts[j-1] //再移动标尺 如果是完全寻找的话</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//605ms 808kb (10000000 times)</span></span><br></pre></td></tr></table></figure><h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1><p>[1] <a href="https://www.cnblogs.com/yjiyjige/p/3263858.html">https://www.cnblogs.com/yjiyjige/p/3263858.html</a><br />[2] <a href="https://www.zhihu.com/question/21923021">https://www.zhihu.com/question/21923021</a><br />[3] 阮行止, <a href="https://www.ruanx.net/kmp/">https://www.ruanx.net/kmp/</a></p><hr class="footnotes-sep" /><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>抄自百度百科：<a href="https://baike.baidu.com/item/kmp%E7%AE%97%E6%B3%95/10951804">https://baike.baidu.com/item/kmp算法/10951804</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>刘任任主编,算法设计与分析,武汉理工大学出版社,2003.12,第97页 <a href="#fnref2" class="footnote-backref">↩︎</a></p></li></ol></section><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;定义&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#定义&quot;&gt;&lt;/a&gt; 定义&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;KMP算法&lt;/strong&gt;是一种改进的字符串匹配算法，由D.E.Knuth，J.H.Morris和V.R.Pratt提出的，因</summary>
      
    
    
    
    <category term="算法" scheme="https://zoruasama.gitee.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://zoruasama.gitee.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="字符串" scheme="https://zoruasama.gitee.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
    <category term="KMP算法" scheme="https://zoruasama.gitee.io/tags/KMP%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Works | 如果穿越到异世界，你的身份是 _____</title>
    <link href="https://zoruasama.gitee.io/2021/11/24/CrossSpace/"/>
    <id>https://zoruasama.gitee.io/2021/11/24/CrossSpace/</id>
    <published>2021-11-24T11:30:00.000Z</published>
    <updated>2022-02-17T05:04:16.787Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景故事"><a class="markdownIt-Anchor" href="#背景故事"></a> 背景故事</h1><p>早上偶然看到QQ空间在刷一个<strong>你的名字的意义</strong>的小程序。和室友们一边看一边笑。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211124122725.png" alt="" /><br />我是一个无聊的人。<br />于是我<s>花了上午约莫一个小时的时间，下午约莫三个多小时的时间</s>完成了这个小程序的开发。<s>原理是基于姓名编码作了哈希散列。</s><br /><strong>“如果穿越到异世界，你的身份是 _____！！！”</strong></p><style type="text/css">            @import url(https://fonts.googleapis.com/css?family=Open+Sans:400,600,700);[type=button]:not(:disabled), [type=reset]:not(:disabled), [type=submit]:not(:disabled), button:not(:disabled) {    cursor: pointer;}.btn-outline-dark {    color: #343a40;    border-color: #343a40;}.btn {    display: inline-block;    color: #212529;    text-align: center;    vertical-align: middle;    cursor: pointer;    user-select: none;    background-color: transparent;    border: 1px solid transparent;    padding: .375rem .75rem;    line-height: 1.5;    border-radius: .25rem;    transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;}[type=button], [type=reset], [type=submit], button {    -webkit-appearance: button;}.btn-outline-dark {    color: #343a40;    border-color: #343a40;}button {    -webkit-appearance: button;    -webkit-writing-mode: horizontal-tb !important;    text-rendering: auto;    color: buttontext;    letter-spacing: normal;    word-spacing: normal;    text-transform: none;    text-indent: 0px;    text-shadow: none;    display: inline-block;    text-align: center;    align-items: flex-start;    cursor: default;    background-color: buttonface;    box-sizing: border-box;    margin: 0em;    font: 400 13.3333px Arial;    padding: 1px 6px;    border-width: 2px;    border-style: outset;    border-color: buttonface;    border-image: initial;}button {    margin: 0;    font-family: inherit;    font-size:28px;    line-height: inherit;}.btn-outline-dark:hover {    color: #fff;    background-color: #343a40;    border-color: #343a40;}.btn-group-sm>.btn, .btn-sm {    padding: .25rem .5rem;    line-height: 1.5;    border-radius: .2rem;}.innerListItems{    list-style-type:none;}input {border: 1px solid #ccc;                                                                width: 100%;padding: 5px 0px;border-radius: 3px;padding-left: 5px;font-size:40px;-webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);-webkit-transition: border-color ease-in-out .15s, -webkit-box-shadow ease-in-out .15s;-o-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s}input:focus {border-color: #66afe9;outline: 0;-webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 8px rgba(102, 175, 233, .6);box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 8px rgba(102, 175, 233, .6)}#reshead{    font-size: 1.7rem;    position: absolute;    top: 5%;    left: 12%;    line-height: 1.1em;    text-align: left;    color: #FFFFFF;}#res{    font-size: 3em;    position: absolute;    top: 20%;    left: 17%;    line-height: 1.2em;    text-align: right;    color: #FFFFFF;}        </style><hr /><p>如果你也想玩的话，在<strong>这篇文章</strong>就可以玩了喔。往下滑，往下滑~~~<br />欢迎把结果以文字或截图的形式分享到评论区或者邀请你的朋友一起来看看喔。<strong>建议在手机上看</strong>。</p><h1 id="如果穿越到异世界你的身份是-_____"><a class="markdownIt-Anchor" href="#如果穿越到异世界你的身份是-_____"></a> 如果穿越到异世界，你的身份是 _____</h1><p>在下方输入姓名，点击按钮进行穿越！</p><script src="/js/crossspace-min.js"></script><script src="https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js"></script><input type="text" name="fname" id="input"/><button type="button" class="btn btn-outline-dark btn-sm">穿越到异世界！</button><p><br><br></p><div id="box" style="position: relative;"><canvas id="myCanvas"></canvas></div><script>$('button').on('click',function(){        // $('#reshead').html('如果穿越到异世界，<br><u>' + $('#input').val() + '</u>的身份是');        // $('#res').html(crossspace($('#input').val()));        // $('#respic')[0].src=imgurl($('#input').val());//<div id="reshead"></div>//<div id="res"></div>//<img id="respic" src="">var canvas=document.getElementById('myCanvas');var ctx=canvas.getContext('2d');var myImage = new Image();myImage.src = imgurl($('#input').val());myImage.crossOrigin = 'Anonymous';myImage.onload=function(){     canvas.width = 720;     canvas.height = 1280;     ctx.drawImage(myImage , 0, 0 , canvas.width , canvas.height,0,0,canvas.width , canvas.height);     ctx.font = '60px SimHei';     ctx.textAlign = 'left';     ctx.textBaseline = 'top';     var left = 100;     var top = 100;     ctx.fillStyle = '#fff';     ctx.fillText('如果穿越到异世界，', left, top);     ctx.fillText($('#input').val() + '的身份是', left, top+65);     ctx.textAlign = 'right';     ctx.font = '75px SimHei';     txtarr = crossspace($('#input').val()).split('的');     ctx.fillText(txtarr[0]+'的', 660, top+65*3);     ctx.font = '90px SimHei';     ctx.fillText(txtarr[1]+'的', 660, top+65*3+90);     ctx.font = '120px SimHei';     ctx.fillText(txtarr[2], 660, top+65*3+90*2);}})</script><h1 id="打赏"><a class="markdownIt-Anchor" href="#打赏"></a> 打赏</h1><p>如果您对这个小程序满意的话，您可以通过下面两种方式给予任意金额的打赏鼓励嗷~~。非常感谢您请我的一杯咖啡~。<br />感谢少侠打赏，来杯咖啡提提神，大战到天亮。</p><h1 id="更新日志"><a class="markdownIt-Anchor" href="#更新日志"></a> 更新日志</h1><ul><li>2021.11.25 重写了<code>特殊能力</code>的生成算法。</li></ul><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211026152954.png" alt="" /></p><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;背景故事&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#背景故事&quot;&gt;&lt;/a&gt; 背景故事&lt;/h1&gt;
&lt;p&gt;早上偶然看到QQ空间在刷一个&lt;strong&gt;你的名字的意义&lt;/strong&gt;的小程序。和室友们一边看一边笑。&lt;br /&gt;
&lt;img </summary>
      
    
    
    
    <category term="Works" scheme="https://zoruasama.gitee.io/categories/Works/"/>
    
    
    <category term="Works" scheme="https://zoruasama.gitee.io/tags/Works/"/>
    
  </entry>
  
  <entry>
    <title>算法笔记 | 树状数组</title>
    <link href="https://zoruasama.gitee.io/2021/11/23/algorithm_3/"/>
    <id>https://zoruasama.gitee.io/2021/11/23/algorithm_3/</id>
    <published>2021-11-23T11:05:00.000Z</published>
    <updated>2021-12-24T16:28:52.483Z</updated>
    
    <content type="html"><![CDATA[<h1 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h1><p>树状数组是一个查询和修改复杂度都为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>log</mi><mo>⁡</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">\log{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span></span></span>的数据结构。主要用于数组的<strong>单点修改</strong>和<strong>区间求和</strong>。广义上来说，能够动态维护<strong>前缀和</strong>。基本上树状数组能做的事情，线段树都能做，反之就不一定了。所以线段树更加强大。但是<s>线段树代码太难写了</s>。</p><h2 id="和线段树的区别"><a class="markdownIt-Anchor" href="#和线段树的区别"></a> 和线段树的区别</h2><ol><li>两者在复杂度上同级, 但是树状数组的常数明显优于线段树, 其编程复杂度也远小于线段树。</li><li>树状数组的作用被线段树完全涵盖, 凡是可以使用树状数组解决的问题, 使用线段树一定可以解决, 但是线段树能够解决的问题树状数组未必能够解决。</li><li>树状数组的突出特点是其编程的极端简洁性, 使用<code>lowbit</code>技术可以在很短的几步操作中完成树状数组的核心操作，其代码效率远高于线段树。</li></ol><p>上面出现了一个新名词: <code>lowbit</code>.其实<code>lowbit(x)</code>就是求x最低位的1。</p><h2 id="具体做法"><a class="markdownIt-Anchor" href="#具体做法"></a> 具体做法</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211123200518.png" alt="" /><br />其实树状数组是用一个连续的数组来存储树的结构，<code>t[x]</code>保存以<code>x</code>为根的子树中叶节点值的和。上图中的<code>a[n]</code>是原数组。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211123200656.png" alt="" /><br />而且每一个节点覆盖的长度就是<code>lowbit(x)</code>。<br /><code>t[x]</code>节点的父节点为<code>t[x+lowbit(x)]</code>。<br />而且整棵树的深度为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>log</mi><mo>⁡</mo><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\log{n}+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">n</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。</p><h3 id="lowbit"><a class="markdownIt-Anchor" href="#lowbit"></a> lowbit</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="单点修改"><a class="markdownIt-Anchor" href="#单点修改"></a> 单点修改</h3><p>以<code>add(x,k)</code>操作为例。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x;i&lt;=n;i+=<span class="built_in">lowbit</span>(i))&#123;</span><br><span class="line">        t[i]+=k;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="区间求和"><a class="markdownIt-Anchor" href="#区间求和"></a> 区间求和</h3><p>以<code>ask(x)</code>操作为例。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ask</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x;i&gt;<span class="number">0</span>;i-=<span class="built_in">lowbit</span>(i))&#123;</span><br><span class="line">        res+=t[i]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要求区间<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[x,y]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">]</span></span></span></span>的和时，可以使用前缀和<code>ask(y)-ask(x-1)</code>来求出它。</p><hr /><p>下面的这些扩展函数<code>add</code> <code>ask</code>函数内部操作还是一样的。就是外部有差别。</p><h2 id="区间修改-单点查询"><a class="markdownIt-Anchor" href="#区间修改-单点查询"></a> 区间修改、单点查询</h2><p>引入差分数组<code>b[n]</code>，作为原数组<code>a[n]</code>的增量数组（不用对这个树状数组预处理）。用树状数组来维护这个数组。<br />而后区间修改的操作和差分数组一样，使用<code>add(l,d)</code>和<code>add(r+1,-d)</code>来完成。<br />查询原数组<code>a[x]</code>的值时，因为差分数组的前缀和等于原数组，所以可以用<code>a[x]+ask(x)</code>来完成。（有了<code>a[x]</code>不用对树状数组预处理了）<br />这个地方的操作和差分数组是一样的。只是单点查询时，复杂度会低一些。</p><h2 id="区间修改-区间查询"><a class="markdownIt-Anchor" href="#区间修改-区间查询"></a> 区间修改、区间查询</h2><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>u</mi><msub><mi>m</mi><mi>x</mi></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>x</mi></msubsup><msub><mi>a</mi><mi>x</mi></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>x</mi></msubsup><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>i</mi></msubsup><msub><mi>d</mi><mi>i</mi></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>x</mi></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>×</mo><msub><mi>d</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">sum_x=\sum_{i=1}^{x}a_x=\sum_{i=1}^{x}\sum_{j=1}^{i}d_i=\sum_{i=1}^{x}(x-i+1)\times d_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.104002em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.400382em;vertical-align:-0.43581800000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.964564em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.104002em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br />由之前的<strong>差分数组</strong>帖子可知上式。如果要进行<strong>区间修改</strong>，维护差分数组<code>b[x]</code>就可以了，但是这样只能更新到单点<code>a[x]</code>，再想<strong>区间查询</strong>，最好对a[x]再做一个前缀和。显然这里会用到两个树状数组。但是去求区间查询很麻烦，可以用下面这个式子转换着去求。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211123202657.png" alt="" /><br />设树状数组<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">t_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>维护<code>b[i]</code>前缀和，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">t_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>维护<code>i*b[i]</code>前缀和。<br />这里的<code>b[i]</code>依旧是<strong>增量数组</strong>。</p><p>那么区间修改<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><mi>l</mi><mo separator="true">,</mo><mi>r</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[l,r]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">]</span></span></span></span>加上<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span>：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">add1</span>(l,d)</span><br><span class="line"><span class="built_in">add1</span>(r+<span class="number">1</span>,-d)</span><br><span class="line"><span class="comment">//维护数组b[i]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">add2</span>(l,l*d)</span><br><span class="line"><span class="built_in">add2</span>(r+<span class="number">1</span>,-(r+<span class="number">1</span>)*d)</span><br><span class="line"><span class="comment">//维护数组i*b[i]</span></span><br></pre></td></tr></table></figure><p>区间查询<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><mi>l</mi><mo separator="true">,</mo><mi>r</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[l,r]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">]</span></span></span></span>的和：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ans=sum[r]-sum[l<span class="number">-1</span>]+((r+<span class="number">1</span>)*<span class="built_in">ask1</span>(r)-<span class="built_in">ask2</span>(r))-(l*<span class="built_in">ask1</span>(l<span class="number">-1</span>)-<span class="built_in">ask2</span>(l<span class="number">-1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// (x+1)sum(b,x) = (x+1)ask1(x)</span></span><br><span class="line"><span class="comment">// sum(i*b,x) = ask2(x)</span></span><br></pre></td></tr></table></figure><h1 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h1><p>对于一个数组，可以用树状数组前缀区间维护<strong>和、异或和、最大值、最小值</strong>等等。</p><h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1><p>[1] <a href="https://blog.csdn.net/bestsort/article/details/80796531">https://blog.csdn.net/bestsort/article/details/80796531</a><br />[2] <a href="https://blog.csdn.net/qq_41021816/article/details/81167388">https://blog.csdn.net/qq_41021816/article/details/81167388</a><br />[3] <a href="https://www.bilibili.com/video/BV1pE41197Qj">https://www.bilibili.com/video/BV1pE41197Qj</a></p><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;定义&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#定义&quot;&gt;&lt;/a&gt; 定义&lt;/h1&gt;
&lt;p&gt;树状数组是一个查询和修改复杂度都为&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;s</summary>
      
    
    
    
    <category term="算法" scheme="https://zoruasama.gitee.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://zoruasama.gitee.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="树状数组" scheme="https://zoruasama.gitee.io/tags/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>算法笔记 | 快速幂</title>
    <link href="https://zoruasama.gitee.io/2021/11/17/algorithm_2/"/>
    <id>https://zoruasama.gitee.io/2021/11/17/algorithm_2/</id>
    <published>2021-11-17T11:05:00.000Z</published>
    <updated>2021-11-17T11:03:37.052Z</updated>
    
    <content type="html"><![CDATA[<h1 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h1><p><strong>快速幂</strong>（<strong>Exponentiation by squaring</strong>，平方求幂）是一种简单而有效的小算法，它可以以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>的时间复杂度计算乘方。快速幂不仅本身非常常见，而且后续很多算法也都会用到快速幂。</p><h2 id="背景问题"><a class="markdownIt-Anchor" href="#背景问题"></a> 背景问题</h2><p>例如计算一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>7</mn><mn>10</mn></msup></mrow><annotation encoding="application/x-tex">7^{10}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">7</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span>，有以下几种方法。</p><ul><li>最朴素的想法，7*7=49，49*7=343，… 一步一步算，共进行了<strong>9次</strong>乘法。<ul><li>这样算无疑太慢了，尤其对计算机的CPU而言，每次运算只乘上一个个位数，无疑太屈才了。这时我们想到，也许可以拆分问题。</li></ul></li><li>先算7的5次方，即7*7*7*7*7，再算它的平方，共进行了<strong>5次</strong>乘法。<ul><li>但这并不是最优解，因为对于“7的5次方”，我们仍然可以拆分问题。</li></ul></li><li>先算7*7得49，则7的5次方为49*49*7，再算它的平方，共进行了<strong>4次</strong>乘法。</li></ul><p>模仿这样的过程，我们得到一个在 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> 时间内计算出幂的算法，也就是快速幂。</p><h1 id="具体实现"><a class="markdownIt-Anchor" href="#具体实现"></a> 具体实现</h1><h2 id="递归快速幂"><a class="markdownIt-Anchor" href="#递归快速幂"></a> 递归快速幂</h2><p>用上面的背景问题可以得到下面这个递归公式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>a</mi><mi>n</mi></msup><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>×</mo><mi>a</mi><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><mtext> </mtext><mi>i</mi><mi>s</mi><mtext> </mtext><mi>o</mi><mi>d</mi><mi>d</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi>a</mi><mfrac><mi>n</mi><mn>2</mn></mfrac></msup><mo>×</mo><msup><mi>a</mi><mfrac><mi>n</mi><mn>2</mn></mfrac></msup><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><mtext> </mtext><mi>i</mi><mi>s</mi><mtext> </mtext><mi>e</mi><mi>v</mi><mi>e</mi><mi>n</mi><mtext> </mtext><mi>b</mi><mi>u</mi><mi>t</mi><mtext> </mtext><mi>n</mi><mi>o</mi><mi>t</mi><mtext> </mtext><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">a^n = \begin{cases}a^{n-1}\times a, &amp; n\  is\  odd \\a^{\frac{n}{2}}\times a^{\frac{n}{2}}, &amp; n\  is\  even \  but \  not \  0 \\1,&amp;n=0\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.9099999999999997em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">a</span><span class="mpunct">,</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.84708em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915428571428572em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.84708em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915428571428572em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mspace"> </span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mspace"> </span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mspace"> </span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mspace"> </span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mspace"> </span><span class="mord mathdefault">b</span><span class="mord mathdefault">u</span><span class="mord mathdefault">t</span><span class="mspace"> </span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span><span class="mspace"> </span><span class="mord">0</span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>依据这个递归公式，可以写出递归版本的快速幂。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(n%<span class="number">2</span> == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">qpow</span>(a,n<span class="number">-1</span>)*a; <span class="comment">//n是奇数</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">int</span> temp=<span class="built_in">qpow</span>(a,n/<span class="number">2</span>); <span class="comment">//n是偶数</span></span><br><span class="line">        <span class="keyword">return</span> temp*temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码中有一个temp变量，暂存<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>a</mi><mfrac><mi>n</mi><mn>2</mn></mfrac></msup></mrow><annotation encoding="application/x-tex">a^{\frac{n}{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84708em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.84708em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915428571428572em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span>的值，这样就能避免计算两次。</p><h2 id="非递归快速幂"><a class="markdownIt-Anchor" href="#非递归快速幂"></a> 非递归快速幂</h2><p>虽然递归版本很容易写，但是会产生额外的空间开销。因此可以把递归版本的改写为循环版本的。<br />将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>7</mn><mn>10</mn></msup></mrow><annotation encoding="application/x-tex">7^{10}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">7</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span>转化为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>y</mi><mn>2</mn></msup><mo>×</mo><msup><mn>7</mn><mn>8</mn></msup></mrow><annotation encoding="application/x-tex">y^2 \times 7^8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">7</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span>。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211117172806.jpg" alt="" /></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>)&#123;       <span class="comment">//如果n的当前末位为1</span></span><br><span class="line">            ans *= a;  <span class="comment">//ans乘上当前的a</span></span><br><span class="line">        &#125;</span><br><span class="line">        a *= a;        <span class="comment">//a自乘</span></span><br><span class="line">        n &gt;&gt;= <span class="number">1</span>;       <span class="comment">//n往右移一位</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果加上取模过程：<br />有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo>∗</mo><mi>b</mi><mo stretchy="false">)</mo><mi mathvariant="normal">%</mi><mi>c</mi><mo>=</mo><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>a</mi><mi mathvariant="normal">%</mi><mi>c</mi><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>b</mi><mi mathvariant="normal">%</mi><mi>c</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mi mathvariant="normal">%</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">(a*b)\%c = ((a\%c)*(b\%c))\%c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mord">%</span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mord">%</span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">b</span><span class="mord">%</span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mclose">)</span><span class="mord">%</span><span class="mord mathdefault">c</span></span></span></span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>)&#123;       <span class="comment">//如果n的当前末位为1</span></span><br><span class="line">            ans *= a;  <span class="comment">//ans乘上当前的a</span></span><br><span class="line">            ans %= mod;</span><br><span class="line">        &#125;</span><br><span class="line">        a *= a%mod;        <span class="comment">//a自乘</span></span><br><span class="line">        a %= mod;</span><br><span class="line">        n &gt;&gt;= <span class="number">1</span>;       <span class="comment">//n往右移一位</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>感觉有点类似计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mo>∗</mo><mn>10</mn></mrow><annotation encoding="application/x-tex">2*10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span></span></span></span>时转换为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mo>∗</mo><mn>8</mn><mo>+</mo><mn>2</mn><mo>∗</mo><mn>2</mn><mo>=</mo><mo>=</mo><mo stretchy="false">(</mo><mn>2</mn><mo>&lt;</mo><mo>&lt;</mo><mn>3</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>2</mn><mo>&lt;</mo><mo>&lt;</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">2*8+2*2==(2&lt;&lt;3)+(2&lt;&lt;1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>10</mn><mi>D</mi><mo>=</mo><mo>=</mo><mn>1010</mn><mi>B</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(10D==1010B)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">0</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span></p></blockquote><h1 id="矩阵快速幂"><a class="markdownIt-Anchor" href="#矩阵快速幂"></a> 矩阵快速幂</h1><p>其实，在算 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>a</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">a^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> 时，只要a的数据类型支持<strong>乘法</strong>且<strong>满足结合律</strong>，快速幂的算法都是有效的。矩阵、高精度整数，都可以照搬这个思路。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//泛型的非递归快速幂</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function">T <span class="title">qpow</span><span class="params">(T a, ll n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T ans = <span class="number">1</span>; <span class="comment">// 赋值为乘法单位元，可能要根据构造函数修改</span></span><br><span class="line">    <span class="keyword">while</span> (n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (n &amp; <span class="number">1</span>)</span><br><span class="line">            ans = ans * a; <span class="comment">// 这里就最好别用自乘了，不然重载完*还要重载*=，有点麻烦。</span></span><br><span class="line">        n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        a = a * a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>矩阵快速幂的一个经典应用是求斐波那契数列：<a href="https://www.luogu.com.cn/problem/P1962">P1962 斐波那契数列</a><br />设矩阵</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">A=\begin{bmatrix}0&amp;1\\1&amp;1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p><p>我们有：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>F</mi><mi>n</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>F</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>F</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>F</mi><mi>n</mi></msub><mo>+</mo><msub><mi>F</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>F</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>F</mi><mrow><mi>n</mi><mo>+</mo><mn>2</mn></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">A\begin{bmatrix}F_n\\F_{n+1}\end{bmatrix}=\begin{bmatrix}F_{n+1}\\F_n+F_{n+1}\end{bmatrix}=\begin{bmatrix}F_{n+1}\\F_{n+2}\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p><p>于是 :</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>F</mi><mi>n</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>F</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mi>A</mi><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>F</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>F</mi><mi>n</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><msup><mi>A</mi><mn>2</mn></msup><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>F</mi><mrow><mi>n</mi><mo>−</mo><mn>2</mn></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>F</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mo>⋯</mo><mo>=</mo><msup><mi>A</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>F</mi><mn>1</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>F</mi><mn>2</mn></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><msup><mi>A</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{bmatrix}F_n\\F_{n+1}\end{bmatrix}=A\begin{bmatrix}F_{n-1}\\F_{n}\end{bmatrix}=A^2\begin{bmatrix}F_{n-2}\\F_{n-1}\end{bmatrix}=\cdots=A^{n-1}\begin{bmatrix}F_1\\F_{2}\end{bmatrix}=A^{n-1}\begin{bmatrix}1\\1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p><p>这样，我们把原来较为复杂的问题转化成了<strong>求某个矩阵的幂</strong>的问题，这就可以应用快速幂求解了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD 1000000007</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">matrix</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ll a1, a2, b1, b2;</span><br><span class="line">    <span class="built_in">matrix</span>(ll a1, ll a2, ll b1, ll b2) : <span class="built_in">a1</span>(a1), <span class="built_in">a2</span>(a2), <span class="built_in">b1</span>(b1), <span class="built_in">b2</span>(b2) &#123;&#125;</span><br><span class="line">    matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;y)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">matrix <span class="title">ans</span><span class="params">((a1 * y.a1 + a2 * y.b1) % MOD,</span></span></span><br><span class="line"><span class="params"><span class="function">                   (a1 * y.a2 + a2 * y.b2) % MOD,</span></span></span><br><span class="line"><span class="params"><span class="function">                   (b1 * y.a1 + b2 * y.b1) % MOD,</span></span></span><br><span class="line"><span class="params"><span class="function">                   (b1 * y.a2 + b2 * y.b2) % MOD)</span></span>;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">matrix <span class="title">qpow</span><span class="params">(matrix a, ll n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">matrix <span class="title">ans</span><span class="params">(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>)</span></span>; <span class="comment">//单位矩阵</span></span><br><span class="line">    <span class="keyword">while</span> (n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (n &amp; <span class="number">1</span>)&#123;</span><br><span class="line">            ans = ans * a;</span><br><span class="line">        &#125;</span><br><span class="line">        a = a * a;</span><br><span class="line">        n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll x;</span><br><span class="line">    <span class="function">matrix <span class="title">M</span><span class="params">(<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;x);</span><br><span class="line">    matrix ans = <span class="built_in">qpow</span>(M, x - <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans.a1 % MOD);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1><p>[1] <a href="https://zhuanlan.zhihu.com/p/95902286">https://zhuanlan.zhihu.com/p/95902286</a><br />[2] <a href="https://blog.csdn.net/qq_40061421/article/details/82625338">https://blog.csdn.net/qq_40061421/article/details/82625338</a></p><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;定义&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#定义&quot;&gt;&lt;/a&gt; 定义&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;快速幂&lt;/strong&gt;（&lt;strong&gt;Exponentiation by squaring&lt;/strong&gt;，平方求幂）是一</summary>
      
    
    
    
    <category term="算法" scheme="https://zoruasama.gitee.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://zoruasama.gitee.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="快速幂" scheme="https://zoruasama.gitee.io/tags/%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    
  </entry>
  
  <entry>
    <title>算法笔记 | 差分数组</title>
    <link href="https://zoruasama.gitee.io/2021/11/14/algorithm_1/"/>
    <id>https://zoruasama.gitee.io/2021/11/14/algorithm_1/</id>
    <published>2021-11-14T11:05:00.000Z</published>
    <updated>2021-11-14T10:21:12.942Z</updated>
    
    <content type="html"><![CDATA[<h1 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h1><p>对于一个数组<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">a[n]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">[</span><span class="mord mathdefault">n</span><span class="mclose">]</span></span></span></span>，如果对它有着频繁的区间操作（例如第5个到第60个数增加2，或第6个到第40个数减去2）。这个时候，暴力的做法时，直接用循环去操作，但是这样做的时间复杂度很大。所以对于这样的问题，可以使用<strong>差分数组</strong>。</p><h1 id="具体做法"><a class="markdownIt-Anchor" href="#具体做法"></a> 具体做法</h1><p><code>差分</code>其实就是数据之间的差，什么数据的差呢？就是上面所给的原始数组<code>a[n]</code>的相邻元素之间的差值，我们令<code>d[i]=a[i+1]-a[i]</code>，一遍for循环即可将差分数组求出来。例如下面这个数组。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211114164848.PNG" alt="" /><br />据此，可以发现两条差分数组的性质：</p><ul><li><code>a[i]</code>等于<code>d[i]</code>的前缀和</li><li><code>a[i]</code>的前缀和可以通过如下公式来求得：<ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>u</mi><msub><mi>m</mi><mi>x</mi></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>x</mi></msubsup><msub><mi>a</mi><mi>x</mi></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>x</mi></msubsup><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>i</mi></msubsup><msub><mi>d</mi><mi>i</mi></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>x</mi></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>×</mo><msub><mi>d</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">sum_x=\sum_{i=1}^{x}a_x=\sum_{i=1}^{x}\sum_{j=1}^{i}d_i=\sum_{i=1}^{x}(x-i+1)\times d_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.104002em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.400382em;vertical-align:-0.43581800000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.964564em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.104002em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ul></li></ul><h1 id="用途"><a class="markdownIt-Anchor" href="#用途"></a> 用途</h1><p>差分数组主要支持两种操作：<strong>1、区间修改；2、单点查询</strong><br />根据性质一，可以得到若对某个区间<code>[L, R]</code> 增加一个数 <code>x</code>，只需要使 <code>d[L] += x; d[R + 1] -= x;</code> 即可实现对区间的批量修改，而查询时只需要<strong>求前缀和查询单个元素</strong>，或者通过上述性质二的公式查询<strong>前缀和/区间和</strong>即可</p><h2 id="区间修改"><a class="markdownIt-Anchor" href="#区间修改"></a> 区间修改</h2><p>对上面那个表的数组作下面两个操作：</p><ul><li>将区间 [1,4] 的数值全部加上3</li><li>将区间 [3,5] 的数值全部减去5<br />其实<strong>当你将原始数组中元素同时加上或者减掉某个数，那么他们的差分数组其实是不会变化的。</strong><br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211114170247.PNG" alt="" /><br />只有 d[1]和d[5]发生了变化，而d[2],d[3],d[4]却保持着原样。</li></ul><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211114170311.PNG" alt="" /></p><blockquote><p>当对一个区间进行增减某个值的时候，它的差分数组对应的区间左端点的值会同步变化，而它的右端点的后一个值则会相反地变化，其实这个很好理解</p></blockquote><h2 id="更新原数组"><a class="markdownIt-Anchor" href="#更新原数组"></a> 更新原数组</h2><p>因为我们的差分数组是由原始数组的相邻两项作差求出来的，即 d[i]=a[i]-a[i-1]；那么我们能不能反过来，求得一下修改过后的a[i]呢？</p><p><strong>直接反过来即得  a[i]=a[i-1]+d[i]</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    a[i]=a[i<span class="number">-1</span>]+d[i];</span><br></pre></td></tr></table></figure><h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1><p>[1] <a href="https://blog.csdn.net/qq_31601743/article/details/105352885">https://blog.csdn.net/qq_31601743/article/details/105352885</a><br />[2] <a href="https://blog.csdn.net/qq_44786250/article/details/100056975">https://blog.csdn.net/qq_44786250/article/details/100056975</a><br />[3] <a href="https://www.jianshu.com/p/2a4e861b44ae">https://www.jianshu.com/p/2a4e861b44ae</a><br />[4] <a href="https://www.cnblogs.com/COLIN-LIGHTNING/p/8436624.html">https://www.cnblogs.com/COLIN-LIGHTNING/p/8436624.html</a></p><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;定义&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#定义&quot;&gt;&lt;/a&gt; 定义&lt;/h1&gt;
&lt;p&gt;对于一个数组&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;m</summary>
      
    
    
    
    <category term="算法" scheme="https://zoruasama.gitee.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://zoruasama.gitee.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="差分数组" scheme="https://zoruasama.gitee.io/tags/%E5%B7%AE%E5%88%86%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>算法笔记 | 前缀和</title>
    <link href="https://zoruasama.gitee.io/2021/11/11/algorithm_0/"/>
    <id>https://zoruasama.gitee.io/2021/11/11/algorithm_0/</id>
    <published>2021-11-11T11:05:00.000Z</published>
    <updated>2021-11-11T11:15:04.955Z</updated>
    
    <content type="html"><![CDATA[<h1 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h1><p>给定某个数组 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">a[n]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">[</span><span class="mord mathdefault">n</span><span class="mclose">]</span></span></span></span>，给定区间<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><mi>l</mi><mo separator="true">,</mo><mi>r</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[l,r]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">]</span></span></span></span>，计算这个数组，从下标<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span>到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>的加和。如果直接加和，需要作<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>r</mi><mo>−</mo><mi>l</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(r-l+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>次加法。如果有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>次询问，复杂度就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nm)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span>。引入<strong>前缀和数组</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">s[n]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mopen">[</span><span class="mord mathdefault">n</span><span class="mclose">]</span></span></span></span>，可以将复杂度降到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>m</mi><mo>+</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(m+n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>。</p><h1 id="具体做法"><a class="markdownIt-Anchor" href="#具体做法"></a> 具体做法</h1><h2 id="预处理"><a class="markdownIt-Anchor" href="#预处理"></a> 预处理</h2><p>定义一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">s[n]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mopen">[</span><span class="mord mathdefault">n</span><span class="mclose">]</span></span></span></span>数组，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">s[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span></span></span></span>表示<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">a[n]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">[</span><span class="mord mathdefault">n</span><span class="mclose">]</span></span></span></span>数组中前<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>项之和。</p><blockquote><p>就和数组<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><msub><mi>a</mi><mi>n</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{a_n\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>的前<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>项和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">S_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>一样。</p></blockquote><p>先用一次<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mi>o</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">for</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>循环，对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">s[n]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mopen">[</span><span class="mord mathdefault">n</span><span class="mclose">]</span></span></span></span>进行预处理。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">  s[i]=s[i<span class="number">-1</span>]+a[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此过程复杂度为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>。</p><h2 id="查询"><a class="markdownIt-Anchor" href="#查询"></a> 查询</h2><p>对于每次查询，只需执行<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo stretchy="false">[</mo><mi>r</mi><mo stretchy="false">]</mo><mo>−</mo><mi>s</mi><mo stretchy="false">[</mo><mi>l</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">s[r]-s[l-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>，时间复杂度为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p><blockquote><p><strong>原理</strong><br />s[r] =a[1]+a[2]+a[3]+a[l-1]+a[l]+a[l+1]…a[r];<br />s[l-1]=a[1]+a[2]+a[3]+a[l-1];<br />s[r]-s[l-1]=a[l]+a[l+1]+…+a[r];</p></blockquote><p>此过程复杂度为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span>。</p><h1 id="二维前缀和"><a class="markdownIt-Anchor" href="#二维前缀和"></a> 二维前缀和</h1><p>输入一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>×</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">n\times m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>的整数矩阵，再输入<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span>个询问，每个询问包含四个整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mn>1</mn><mo separator="true">,</mo><mi>x</mi><mn>2</mn><mo separator="true">,</mo><mi>y</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">x1, y1, x2, y2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">2</span></span></span></span>，表示一个子矩阵的左上角坐标和右下角坐标。对于每个询问输出子矩阵中所有数的和。</p><p>同一维前缀和一样，先定义一个二维数组<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">s[n][m]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mopen">[</span><span class="mord mathdefault">n</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault">m</span><span class="mclose">]</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">s[i][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>，表示二维数组中，左上角<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(1,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>到右下角<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">( i,j )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>所包围的矩阵元素的和。<br />接下来推导二维前缀和的公式。</p><h2 id="预处理-2"><a class="markdownIt-Anchor" href="#预处理-2"></a> 预处理</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211111165631.png" alt="" /></p><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211111165825.png" alt="" /><br />注：最后一项是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">a[i][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>，和一维前缀和一样。<br />由上图可知，二维前缀和的预处理公式为：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s[i][j] = s[i<span class="number">-1</span>][j] + s[i][j<span class="number">-1</span>] + a[i][j] - s[i<span class="number">-1</span>][j<span class="number">-1</span>];</span><br></pre></td></tr></table></figure><hr /><p>也可以一维、一维来求进行预处理。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">        a[i][j] += a[i - <span class="number">1</span>][j];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">        a[i][j] += a[i][j - <span class="number">1</span>];</span><br></pre></td></tr></table></figure><h2 id="查询-2"><a class="markdownIt-Anchor" href="#查询-2"></a> 查询</h2><p>接下来如何去求以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x1,y1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>为左上角和以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mn>2</mn><mo separator="true">,</mo><mi>y</mi><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x2,y2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">2</span><span class="mclose">)</span></span></span></span>为右下角的矩阵的元素的和呢？<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211111170341.png" alt="" /><br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211111170439.png" alt="" /><br />即<code>s[x2][y2]-s[x1-1][y2]-s[x2][y1-1] + s[x1-1][y1-1]</code></p><h1 id="高维前缀和"><a class="markdownIt-Anchor" href="#高维前缀和"></a> 高维前缀和</h1><p>暂时还看不懂这玩意儿……。先mark一下。<br /><a href="https://www.cnblogs.com/heyuhhh/p/11585358.html">https://www.cnblogs.com/heyuhhh/p/11585358.html</a></p><h1 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h1><p>[1] <a href="https://blog.csdn.net/weixin_45629285/article/details/111146240">https://blog.csdn.net/weixin_45629285/article/details/111146240</a></p><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;定义&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#定义&quot;&gt;&lt;/a&gt; 定义&lt;/h1&gt;
&lt;p&gt;给定某个数组 &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;</summary>
      
    
    
    
    <category term="算法" scheme="https://zoruasama.gitee.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://zoruasama.gitee.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="前缀和" scheme="https://zoruasama.gitee.io/tags/%E5%89%8D%E7%BC%80%E5%92%8C/"/>
    
  </entry>
  
  <entry>
    <title>Works | 标签夹 Tab Clamp</title>
    <link href="https://zoruasama.gitee.io/2021/10/26/TabClamp/"/>
    <id>https://zoruasama.gitee.io/2021/10/26/TabClamp/</id>
    <published>2021-10-26T11:30:00.000Z</published>
    <updated>2022-02-17T05:04:00.258Z</updated>
    
    <content type="html"><![CDATA[<h1 id="标签夹-tabclamp-是什么"><a class="markdownIt-Anchor" href="#标签夹-tabclamp-是什么"></a> 标签夹 TabClamp 是什么</h1><p>试想您是否有这样的一个需求？</p><blockquote><p>有时候进行某项工作/学习时打开了若干个网页，但是后来中断去做别的事情了，在下一次进行这项工作/学习时又要回到历史记录里一个个点开。这样非常麻烦。</p></blockquote><p>「标签夹 TabClamp」就是为了解决这样的需求而被开发的。它是一款用于<strong>任一基于Chromium开源项目webkit内核的浏览器</strong>插件，这款插件可以帮助您一次性打开多个网页，以方便您随时恢复之前的工作环境。</p><p>如果您不知道您的浏览器是否是<strong>基于Chromium开源项目webkit内核</strong>的，您可以参考下面这个列表：</p><ul><li>Google Chrome</li><li>Microsoft Edge</li><li>360安全浏览器</li><li>360极速浏览器</li><li>搜狗高速浏览器</li><li>QQ浏览器</li><li>猎豹安全浏览器</li><li>傲游浏览器</li><li>……</li></ul><h1 id="安装教程"><a class="markdownIt-Anchor" href="#安装教程"></a> 安装教程</h1><p>由于上架应用商店需要审核且比较麻烦。现在只上架了 <strong>360安全浏览器</strong> 和 <strong>360极速浏览器</strong>。<br />如您需要在其他webkit浏览器上使用，欢迎致信 <a href="mailto:zoruasama@qq.com">zoruasama@qq.com</a>。</p><h2 id="360安全浏览器"><a class="markdownIt-Anchor" href="#360安全浏览器"></a> 360安全浏览器</h2><p>使用360安全浏览器的用户可以<a href="https://ext.se.360.cn/webstore/search/%E6%A0%87%E7%AD%BE%E5%A4%B9">点击这里</a>进行下载安装。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211125122939.png" alt="" /></p><h2 id="360极速浏览器"><a class="markdownIt-Anchor" href="#360极速浏览器"></a> 360极速浏览器</h2><p>使用360极速浏览器的用户可以<a href="https://ext.chrome.360.cn/webstore/search/%E6%A0%87%E7%AD%BE%E5%A4%B9">点击这里</a>进行下载安装。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211125123051.png" alt="" /></p><h1 id="使用说明"><a class="markdownIt-Anchor" href="#使用说明"></a> 使用说明</h1><h2 id="名词术语解释"><a class="markdownIt-Anchor" href="#名词术语解释"></a> 名词术语解释</h2><ul><li><strong>标签 Tabs</strong>，准确称法是“标签页”，也称作“选项卡”，简称为“标签”。通常标签页栏所处的是浏览器窗体的上方，您可以通过点击标签来切换当前要浏览的网页。</li><li><strong>窗体 Windows</strong>，您运行浏览器时打开的整个浏览器程序界面被称作窗体，您可以打开多个窗体，也可以在每个窗体上打开多个标签。</li><li><strong>标签夹 Tab Clamp</strong>，即本插件的名称，亦是本插件中引入的概念。顾名思义地，标签夹是将复数数量的标签打包在一起后的物体。</li></ul><h2 id="界面功能解释"><a class="markdownIt-Anchor" href="#界面功能解释"></a> 界面功能解释</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211026142613.png" alt="" /></p><h3 id="保存当前所有标签页到标签夹"><a class="markdownIt-Anchor" href="#保存当前所有标签页到标签夹"></a> 保存当前所有标签页到标签夹</h3><ol><li>输入标签夹名字，注意不要和已有的标签夹名字重复，否则会直接覆盖内容。虽然没有对标签夹名字长度进行限制，但是仍然不建议使用过长的标签夹名字。</li><li>点击“保存当前所有标签页到标签夹”按钮，将会保存<strong>当前浏览器上打开的所有标签</strong>到指定标签夹中。由于后续的“打开”功能是一次性全部打开并加载网页，出于对您的机器性能负担考虑，一个标签夹内最好不要放过多的标签。</li></ol><h3 id="打开该标签夹内所有的标签"><a class="markdownIt-Anchor" href="#打开该标签夹内所有的标签"></a> 打开该标签夹内所有的标签</h3><ol><li>输入标签夹名字，注意应该输入已有的标签夹。</li><li>点击“打开该标签夹内所有的标签”按钮，将会在<strong>当前浏览器窗口上</strong>打开该标签夹内的所有网页。</li></ol><h3 id="删除该标签夹"><a class="markdownIt-Anchor" href="#删除该标签夹"></a> 删除该标签夹</h3><ol><li>输入标签夹名字，注意应该输入已有的标签夹。</li><li>点击“删除该标签夹”按钮，将会<strong>永久删除</strong>该标签夹和该标签夹下所有的标签。</li></ol><h3 id="点击标签夹"><a class="markdownIt-Anchor" href="#点击标签夹"></a> 点击标签夹</h3><ol><li>当您已经拥有标签夹时，界面上将会显示其按钮。按钮文本为标签夹名字，括号内部数字表示标签夹内的标签数量。</li><li>单击这些标签夹按钮，将会在下方显示该标签夹内的标签，您可以点击这些标签，就能打开指定的单个标签页。</li><li>单击标签夹按钮后，标签夹名字会自动输入到输入框中，而不需要自己手动输入，方便您的后续操作（例如保存、打开、删除）。</li></ol><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211026144533.png" alt="" /></p><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211026144549.png" alt="" /></p><h1 id="环境要求"><a class="markdownIt-Anchor" href="#环境要求"></a> 环境要求</h1><p>本插件使用了localStorage特性作为存储，</p><h1 id="版本更新日志"><a class="markdownIt-Anchor" href="#版本更新日志"></a> 版本更新日志</h1><h2 id="10020211026"><a class="markdownIt-Anchor" href="#10020211026"></a> 1.0.0(2021/10/26)</h2><ul><li>产品上线</li></ul><h1 id="打赏"><a class="markdownIt-Anchor" href="#打赏"></a> 打赏</h1><p>如果您对这个小插件满意的话，您可以通过下面两种方式给予任意金额的打赏鼓励嗷~~。非常感谢您请我的一杯咖啡~。<br />感谢少侠打赏，来杯咖啡提提神，大战到天亮。</p><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211026152954.png" alt="" /></p><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;标签夹-tabclamp-是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#标签夹-tabclamp-是什么&quot;&gt;&lt;/a&gt; 标签夹 TabClamp 是什么&lt;/h1&gt;
&lt;p&gt;试想您是否有这样的一个需求？&lt;/p&gt;
&lt;blockquote</summary>
      
    
    
    
    <category term="Works" scheme="https://zoruasama.gitee.io/categories/Works/"/>
    
    
    <category term="Works" scheme="https://zoruasama.gitee.io/tags/Works/"/>
    
    <category term="效率" scheme="https://zoruasama.gitee.io/tags/%E6%95%88%E7%8E%87/"/>
    
    <category term="浏览器" scheme="https://zoruasama.gitee.io/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>书读 | 初读东野圭吾《白夜行》</title>
    <link href="https://zoruasama.gitee.io/2021/06/14/reading_0/"/>
    <id>https://zoruasama.gitee.io/2021/06/14/reading_0/</id>
    <published>2021-06-14T12:19:00.000Z</published>
    <updated>2021-10-26T08:47:47.164Z</updated>
    
    <content type="html"><![CDATA[<div class="snote bug"><p>本文可能含一定程度的剧透，提前浏览可能会影响阅读体验。</p></div><p>熟悉东野圭吾的朋友必定知道作为其代表作之一的《白夜行》，一直以来我都很喜爱阅读东野圭吾的作品，但是大学期间好像很容易浮躁，很难沉下心去阅读。终于在百无聊赖（忙里偷闲）的时候，捧起兼有阅读功能的Kindle牌泡面盖，开始阅读起来。</p><p>在读《白夜行》前，在高中有读过其姊妹篇《幻夜》。到底说是姊妹篇，作者写作风格和角色人设隐隐约约间总有些相似。<br />整篇小说叙事的不同人物视角的分镜手法，黑色系、老到辛辣的语言，含蓄深刻的内容。</p><p>雪穗和美冬很像，亮司也和雅也很像。</p><p>不过阅读《幻夜》的时候到今天已经有两三个年头了，不少故事里的情节我都几乎忘得一干二净，所以应该不会在这篇随笔里提到什么了。</p><p>阅读这本书，总共花了四天时间（2021/06/10~2021/06/13）。读得很快，囫囵吞枣，有一些地方可能说得不对，请书友海涵。此外，故事想表达的内容的确有些晦涩难懂，看完书的我五味杂陈，有很多话想说，但凭我拙劣的语言，恐怕难以说清其中一二。</p><p>先简要介绍书中故事吧，当然毕竟这不是在写小说，我会用全知视角来说明这个故事内容。不想看剧透的，可以直接往下找到另一条剧透分割线。</p><p>首先有两个家庭，桐原亮司和西本雪穗。</p><p>桐原亮司家里是开当铺的，父母似乎都没有尽其教育责任。母亲和当铺店员有染。</p><p>西本雪穗家庭贫苦，父亲早逝，母亲独自抚养其长大，但在当时的历史背景，其生活并不乐观。</p><p>他们打小起，就很要好的样子。会一起去图书馆看书（比如：《飘》）、剪纸（是桐原亮司的强项）。</p><p>似乎是，生活所迫之下，西本雪穗的母亲将西本雪穗卖给了有恋童癖的桐原亮司的父亲。</p><p>桐原亮司偶然之下看到了正在对西本雪穗实施猥亵行为的父亲，在愤怒和绝望之下，11岁的他用剪刀杀死了父亲。</p><p>这个案子由于各种原因，没有被立马查明。作为故事的线索一直延续了20年。</p><p>后来，西本雪穗伪造了其母亲自杀的情形，同样地，这个案子也成了悬案。在生母离世后，她被她的表亲唐泽礼子收养，唐泽礼子教会了她茶道和插花等等非常修身养性的知识，使得旁人眼中的西本雪穗有如一个优雅的名门大小姐。</p><p>接下来的亮司和雪穗，像是两个没有交点的平行线，一个就读大学，一个辍学干着各种勾当。但在背地里，他们在互相帮助。</p><p>例如，雪穗嫉妒另一个长相漂亮的女同学，而且女同学在散播雪穗过去的事情。于是，亮司帮助雪穗制造了该女同学被强暴了的假象，令其一丝不挂地昏在路边，然后雪穗按预先的安排假装发现并救助了她。雪穗对她说，会帮她保守这个秘密的，以此来收买这个女同学的心。</p><p>另一方面，亮司在做盗版游戏、软件时，雪穗通过她的社会关系偷到了不少知名人士的程序传给了亮司。</p><p>雪穗注意到有私家侦探在追查她，亮司帮她杀害了那个侦探。</p><p>这样的犯罪数不胜数。</p><p>亮司帮着雪穗除掉了一个又一个她成功路上的障碍，她如愿以偿地娶到了第一任丈夫，攀上了豪门。利用更高的社会关系，不断地积累财富。</p><p>开了一家奢侈的衣服精品店：R&amp;Y。</p><p>后来又故意与第一任丈夫吵架离婚，加上亮司的暗中协助，攀上第二任名门贵族丈夫。</p><p>R&amp;Y开了一家又一家分店。</p><p>雪穗在旁人的眼里就是年轻有为、长相漂亮端庄、做生意强势果断的女强人形象。</p><p>但是二十年前的刑警一直在追查那个案件，即使那个案件已经快过了时效期。他始终认为这个女人可没有表面上那么简单，眼神中隐藏着难以察觉的险恶和卑劣。</p><p>在R&amp;Y第三家分店的开张仪式上，刑警敏锐地判断亮司一定会出现。</p><p>亮司果然出现了，并且奋力逃避追捕，但终究是无力回天。</p><p>为了自己不被抓捕而暴露雪穗，他选择从楼上跃下然后用那把剪刀自尽。</p><p>刑警问雪穗：你认识这个人吗？</p><p>雪穗说：我不认识。然后头也不回地离开了。</p><p>正义不仅迟到了，而且没有发挥出它的力量。两人犯下这么多的罪行，因为亮司的牺牲式自尽，并没有大白于天下。他们的邪恶仍然在世间嚣张，在精品店的招牌上闪烁。</p><p>雪穗成功地获得了人生的幸福。从灰姑娘变成了大有可为的女青年。</p><p>======== 剧透线 ========<br />看完这本书，我心情沉重又复杂，非常矛盾。</p><p>既觉得亮司和雪穗之间是有爱情的，又觉得雪穗是个无情的女性，对亮司也是像对其他男人利用罢了。</p><p>既替他们的爱情悲剧感到惋惜，又觉得他们犯下了太多罪行活该。</p><p>他们俩之间有爱情吗？好像是没有的，整篇作品里，长大后的雪穗和亮司几乎没在小说里直接见过面，唯一一次见面就是最后一章的生死永隔，而且雪穗望着亮司的尸体，说着不认识便永远回了头。</p><p>他们俩之间有爱情吗？又好像是有的，雪穗累积财富后，开了一家店，名字叫R&amp;Y，是亮司和雪穗两个人名字的缩写。为了能过上幸福的生活，他们相辅相成，如果警方再迟一些，案件有效期就过了，他们俩就能永远走在白天下了。虽然亮司和雪穗有着各自的恋人，但是与他们似乎是有性无爱。</p><p>雪穗说：我的天空里没有太阳，总是黑夜，但并不黑暗，因为有东西代替了太阳。虽然没有太阳那么明亮，但对我来说已经足够。凭借着这份光，我便能把黑夜当成白天。你明白吗？我从来就没有太阳，所以不怕失去。</p><p>她的太阳就是桐原亮司。亮司的愿望是在白天（一起）走路（书的封面是亮司的剪纸作品之一，小男孩和小女孩一起牵着手走路）。</p><p>年仅十一岁的亮司从一出场就走上了一条永远黑暗的不归之路，只能永远期期指望“等到有一天，能够和她手牵手去阳光下散步”；为了这个希望，他一路为恶，直到长大成人，大开杀戒……</p><p>说到底，他们的恶终究或许来源于家庭的不幸。</p><p>东野圭吾太鲨了，在我心里留下了难以抹去的压抑和阴影……</p><p>甚至都有些恐恋了。现实生活中也总会有像这样，容貌出众、透露着聪慧、气质优雅、全身上下散发出温柔的光芒，但藏着不少难以察觉的险恶卑劣的人吧。</p><p>当遇上现实生活中的雪穗，我到底会是自我牺牲也要帮助她的亮司、盲目地被她的表象所吸引的康晴还是察觉到她的险恶的一成呢……？</p><p>那我当然不希望遇上雪穗。</p><p>因为她的背影犹如白色的幽灵。</p><h2 id="想到什么再补充什么吧"><a class="markdownIt-Anchor" href="#想到什么再补充什么吧"></a> 想到什么再补充什么吧。</h2><p>原来这句话出自这里呀。<br />曾经拥有的东西被夺走，并不代表就会回到原来没有那种东西的时候。——东野圭吾《白夜行》<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20211026163516.jpg" alt="" /></p><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;snote bug&quot;&gt;&lt;p&gt;本文可能含一定程度的剧透，提前浏览可能会影响阅读体验。&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;熟悉东野圭吾的朋友必定知道作为其代表作之一的《白夜行》，一直以来我都很喜爱阅读东野圭吾的作品，但是大学期间好像很容易浮躁，很难沉下心去阅读。终于在</summary>
      
    
    
    
    <category term="书读" scheme="https://zoruasama.gitee.io/categories/%E4%B9%A6%E8%AF%BB/"/>
    
    
    <category term="书读" scheme="https://zoruasama.gitee.io/tags/%E4%B9%A6%E8%AF%BB/"/>
    
    <category term="读后感" scheme="https://zoruasama.gitee.io/tags/%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>题解心得 | P3379 【模板】最近公共祖先（LCA）</title>
    <link href="https://zoruasama.gitee.io/2021/01/21/P3379/"/>
    <id>https://zoruasama.gitee.io/2021/01/21/P3379/</id>
    <published>2021-01-21T11:30:00.000Z</published>
    <updated>2021-01-21T11:38:24.116Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题面原文"><a class="markdownIt-Anchor" href="#题面原文"></a> 题面原文</h1><p><a href="https://www.luogu.com.cn/problem/P3379">原题链接</a></p><h2 id="题目描述"><a class="markdownIt-Anchor" href="#题目描述"></a> 题目描述</h2><p>如题，给定一棵有根多叉树，请求出指定两个点直接最近的公共祖先。</p><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>第一行包含三个正整数 N,M，分别表示树的结点个数、询问的个数和树根结点的序号。<br />接下来 N-1 行每行包含两个正整数 x, y，表示 x 结点和 y 结点之间有一条直接连接的边（数据保证可以构成树）。<br />接下来 M行每行包含两个正整数 a, b表示询问 a 结点和 b 结点的最近公共祖先。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>输出包含 M 行，每行包含一个正整数，依次为每一个询问的结果。</p><h1 id="ac-record"><a class="markdownIt-Anchor" href="#ac-record"></a> Ac Record</h1><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20201205213926.png" alt="" /></p><h1 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h1><details cyan open><summary> <p>show me the code.</p> </summary>              <div class='content'>              <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">500001</span>;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; node[maxn];</span><br><span class="line"><span class="keyword">int</span> dep[maxn];</span><br><span class="line"><span class="keyword">int</span> f[maxn][<span class="number">22</span>]; <span class="comment">//2^20</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">log2</span>(x&amp;(-x));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line">    dep[u]=d;</span><br><span class="line">    f[u][<span class="number">0</span>]=fa;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;node[u].<span class="built_in">size</span>();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(node[u][i]==fa) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(node[u][i],u,d+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lca</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(dep[x]&lt;dep[y]) <span class="built_in">swap</span>(x,y);</span><br><span class="line">    <span class="keyword">while</span>(dep[x]&gt;dep[y])&#123;</span><br><span class="line">        x=f[x][<span class="built_in">lowbit</span>(dep[x]-dep[y])];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x==y) <span class="keyword">return</span> x;<span class="comment">// or return y.</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="built_in">log2</span>(dep[x]);i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(f[x][i]!=f[y][i])&#123;</span><br><span class="line">            x=f[x][i];</span><br><span class="line">            y=f[y][i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c=(<span class="keyword">char</span>)<span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,fs=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))&#123;<span class="keyword">if</span>(c==<span class="string">&#x27;-&#x27;</span>)fs=<span class="number">-1</span>;c=(<span class="keyword">char</span>)<span class="built_in">getchar</span>();&#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=(x&lt;&lt;<span class="number">3</span>)+(x&lt;&lt;<span class="number">1</span>)+(c^<span class="number">48</span>),c=(<span class="keyword">char</span>)<span class="built_in">getchar</span>(); <span class="comment">//NOLINT</span></span><br><span class="line">    <span class="keyword">return</span> x*fs;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a&lt;<span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">&#x27;-&#x27;</span>),a=-a;</span><br><span class="line">    <span class="keyword">if</span>(a&gt;=<span class="number">10</span>)<span class="built_in">write</span>(a/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(a%<span class="number">10</span>+<span class="number">48</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,s;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;s;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        x=<span class="built_in">read</span>();</span><br><span class="line">        y=<span class="built_in">read</span>();</span><br><span class="line">        node[x].<span class="built_in">push_back</span>(y);</span><br><span class="line">        node[y].<span class="built_in">push_back</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(s,s,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">22</span>;++i)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">1</span>;u&lt;=n;u++)&#123;</span><br><span class="line">            f[u][i]=f[f[u][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">        x=<span class="built_in">read</span>();</span><br><span class="line">        y=<span class="built_in">read</span>();</span><br><span class="line">        cout&lt;&lt;<span class="built_in">lca</span>(x,y)&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><h1 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h1><p>这就是一道LCA模板题。</p><ul><li>简单地用vector存图。</li><li>先用DFS把整个树遍历一遍，标记上每个节点的<strong>深度</strong>。这个深度的作用会在后面的算法体现到。</li><li><code>f[u][i]=f[f[u][i-1]][i-1];</code>这是<strong>倍增</strong>的递推式。<ul><li><code>f[u][i]</code>指的是，节点<code>u</code>的前<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>i</mi></msup></mrow><annotation encoding="application/x-tex">2^i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span></span></span>个父节点。</li><li>例如<code>f[u][0]</code>指的是就是节点<code>u</code>的父节点。<code>f[u][1]</code>指的是就是节点<code>u</code>的父节点的父节点。<code>f[u][2]</code>指的是就是节点<code>u</code>的父节点的父节点的父节点的父节点。</li><li>在这个题目中的节点数最多是500000，所以最坏情况下是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>19</mn></msup></mrow><annotation encoding="application/x-tex">2^{19}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span></span>，所以数组开到20就差不多够用了。（为保险可以多开一点）</li></ul></li><li>用LCA函数求解答案。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lca</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(dep[x]&lt;dep[y]) <span class="built_in">swap</span>(x,y);</span><br><span class="line">    <span class="keyword">while</span>(dep[x]&gt;dep[y])&#123;</span><br><span class="line">        x=f[x][<span class="built_in">lowbit</span>(dep[x]-dep[y])];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x==y) <span class="keyword">return</span> x;<span class="comment">// or return y.</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="built_in">log2</span>(dep[x]);i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(f[x][i]!=f[y][i])&#123;</span><br><span class="line">            x=f[x][i];</span><br><span class="line">            y=f[y][i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>先将两个节点移动至同一深度。<ul><li>这个操作可以通过不断使更深的节点变为它的父节点就行了。</li><li>为了快速移动，通过<strong>倍增</strong>来实现。</li></ul></li><li>如果移动至同一深度，两个节点变成同一节点了，那么就可以返回了。</li><li>如果不是同一节点，那么就再<strong>同时移动两个节点</strong>（变为它们的父节点），直至最后一个节点的下一层节点。</li><li>这个时候返回这层节点的父节点即为答案。</li></ul><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题面原文&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#题面原文&quot;&gt;&lt;/a&gt; 题面原文&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P3379&quot;&gt;原题链接&lt;/a&gt;&lt;/p&gt;
&lt;h2 </summary>
      
    
    
    
    <category term="算法" scheme="https://zoruasama.gitee.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://zoruasama.gitee.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="LCA" scheme="https://zoruasama.gitee.io/tags/LCA/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式 | 初入茅庐[0-9]+</title>
    <link href="https://zoruasama.gitee.io/2020/09/26/regexp_0/"/>
    <id>https://zoruasama.gitee.io/2020/09/26/regexp_0/</id>
    <published>2020-09-26T03:51:02.000Z</published>
    <updated>2020-09-26T15:34:25.701Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.13/css/all.css"><h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>正则表达式描述了一种字符串匹配的模式是怎么回事呢？正则表达式相信大家都很熟悉，但是正则表达式描述了一种字符串匹配的模式是怎么回事呢，下面就让小编带大家一起了解吧。</p><p>正则表达式描述了一种字符串匹配的模式，其实就是正则表达式可以用来匹配字符串，大家可能会很惊讶正则表达式怎么会描述了一种字符串匹配的模式呢？但事实就是这样，小编也感到非常惊讶。</p><p>这就是关于正则表达式描述了一种字符串匹配的模式的事情了，大家有什么想法呢，欢迎在评论区告诉小编一起讨论哦！【大雾】</p><h1 id="是什么"><a class="markdownIt-Anchor" href="#是什么"></a> 是什么</h1><p>在阐述我自己的理解前，先搬出<a href="https://baike.baidu.com/item/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/1700215?fr=aladdin">百度百科</a>的内容撑撑场面。</p><div class="snote quote"><p class="p subtitle">度娘百科</p><p><b>正则表达式</b>，又称规则表达式。（英语：Regular Expression，在代码中常简写为regex、regexp或RE），计算机科学的一个概念。正则表达式通常被用来检索、替换那些符合某个模式(规则)的文本。</p></div><blockquote><p>正则表达式是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。</p></blockquote><blockquote><p>正则表达式是对字符串（包括普通字符（例如，a 到 z 之间的字母）和特殊字符（称为“元字符”））操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。正则表达式是一种文本模式，该模式描述在搜索文本时要匹配的一个或多个字符串。</p></blockquote><blockquote><p>给定一个正则表达式和另一个字符串，我们可以达到如下的目的：</p><ol><li>给定的字符串是否符合正则表达式的过滤逻辑（称作“匹配”）</li><li>可以通过正则表达式，从字符串中获取我们想要的特定部分。</li></ol></blockquote><p>从上面三段内容可以看到，关键词<strong>检索、过滤、匹配</strong>。而这些工作让我想到了 <code>?</code> <code>*</code>。<br />我相信大多数人对 <code>?</code> <code>*</code>的作用应该不陌生。在Word文档中，<code>?</code>用于匹配单一字符，<code>*</code>用于匹配多个字符。</p><p>例如下面这个例子。我在编辑这篇文章时，发现我居然蠢到把每一个<strong>正则表达式</strong>都打错了。只有<strong>第一个字</strong>和<strong>最后一个字</strong>是正确的。</p><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200423223525.png" alt="" /></p><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200423223654.png" alt="" /></p><p>于是我果断地按下了 <code>Ctrl</code> <code>H</code>，勾选了使用通配符。由于<strong>第一个字</strong>和<strong>最后一个字</strong>是正确的，因此查找的内容只需为<code>正*式</code>即可检索到所有错误的<strong>正则表达式</strong>文本。然后点击<strong>全部替换</strong>。便轻松愉快地全部修正了。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200423223902.png" alt="" /></p><p>或许这时候你要问了。就这？就这？就这？<s>怎么可能会有sabi犯这种错误啊</s>这玩意儿有什么用？<br />嗐。您可别着急。如果说<strong>正则表达式</strong>并不是这种简单的<code>?</code>和<code>*</code>呢？</p><hr /><h1 id="快速上手"><a class="markdownIt-Anchor" href="#快速上手"></a> 快速上手</h1><h2 id="最简单的匹配情况"><a class="markdownIt-Anchor" href="#最简单的匹配情况"></a> 最简单的匹配情况</h2><p>最简单的匹配情况相当容易想到，即表达式本身等同于要匹配的表达式。例如使用<code>China</code>匹配下面的文本。就会匹配到下面两个<code>China</code>子字符串。</p><p>I love <span class="inline-tag red">China</span>. Long live <span class="inline-tag red">China</span>!</p><h2 id="简单的几个符号"><a class="markdownIt-Anchor" href="#简单的几个符号"></a> 简单的几个符号</h2><p>再来介绍几个简单的符号，引用我本学期的「编译原理」课程PPT中的一张图片。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200923230150.png" alt="" /></p><h3 id="选项-choice-among-alternatives"><a class="markdownIt-Anchor" href="#选项-choice-among-alternatives"></a> 选项 Choice among alternatives</h3><p>令<code>r</code>和<code>s</code>是两个正则表达式，那么<code>r|s</code>既可以匹配<code>r</code>能匹配的字符串，也能匹配<code>s</code>能匹配的字符串。<br />例如使用正则表达式<code>China|Long</code>就能匹配到三个子字符串了。</p><p>I love <span class="inline-tag red">China</span>. <span class="inline-tag red">Long</span> live <span class="inline-tag red">China</span>!<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200926211645.png" alt="" /></p><h3 id="连接-concatenation"><a class="markdownIt-Anchor" href="#连接-concatenation"></a> 连接 Concatenation</h3><p>连接<strong>没有符号</strong>，直接把一个正则表达式与另一个正则表达式相连即可。<br />例如之前举过的例子<code>China</code>能够匹配字符串中的<code>China</code>子串。这里是五个字符直接相连的正则表达式。<br />又例如，<code>(a|b)c</code>，能够匹配字符串 <code>ac</code>或<code>bc</code>。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200926211619.png" alt="" /></p><h3 id="重复-repetition"><a class="markdownIt-Anchor" href="#重复-repetition"></a> 重复 Repetition</h3><p>重复也被称作是<strong>闭包(closure)</strong>，用符号<code>*</code>表示，其内涵是<strong>可以把<code>*</code>所作用的表达式重复0次或多次</strong>。<br />注意，作用的表达式是<code>*</code>前的字符串，如果没有打括号的话，就只有一个字符。<br />例如<code>a*</code>能够匹配<strong>空字符串</strong>、<code>a</code>、<code>aa</code>、<code>aaa</code>等等。<br />再例如对于正则表达式<code>(a|bb)*</code>，能够匹配<strong>空字符串</strong>，<code>a</code>，<code>bb</code>，<code>aa</code>，<code>abb</code>，<code>bba</code>，<code>bbbb</code>，<code>aaa</code>，<code>aabbbba</code>，<code>abbabbabbbba</code>等等。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200926211425.png" alt="" /></p><h2 id="更多符号"><a class="markdownIt-Anchor" href="#更多符号"></a> 更多符号</h2><h3 id="熟悉的老朋友通配符"><a class="markdownIt-Anchor" href="#熟悉的老朋友通配符"></a> 熟悉的老朋友通配符 .</h3><p>这里的<code>.</code>的作用等同于我在<strong>是什么</strong>那一节中举例的Word软件中的<code>?</code>。<br />它可以匹配一个除了换行符以外的字符。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200926211912.png" alt="" /></p><h3 id="加号"><a class="markdownIt-Anchor" href="#加号"></a> 加号 +</h3><p>和重复<code>*</code>类似，不过加号是匹配子表达式<strong>一次或多次</strong>。<br /><code>zo(rua)+</code>能够匹配<code>zorua</code>，<code>zoruarua</code>，<code>zoruaruarua</code>等等。但是不能匹配<code>zo</code>。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200926211347.png" alt="" /></p><h3 id="问号"><a class="markdownIt-Anchor" href="#问号"></a> 问号 ?</h3><p>还是和重复<code>*</code>类似，不过问号是匹配子表达式<strong>0次或一次</strong>。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200926212040.png" alt="" /></p><h3 id="字符集合"><a class="markdownIt-Anchor" href="#字符集合"></a> 字符集合 [  ]</h3><p>匹配所包含的任意一个字符。例如，<code>[abc]</code> 可以匹配<code>plain</code>中的<code>a</code>。<code>[a-z]</code>表示一个范围，可以匹配二十六个字母。<br /><code>[a-cf-l]</code>表示字母的<code>a</code>到<code>c</code>，然后<code>f</code>到<code>l</code>。也可以使用数字<code>[0-9]</code><br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200926231016.png" alt="" /></p><h4 id="否定符号"><a class="markdownIt-Anchor" href="#否定符号"></a> 否定符号 ^</h4><p><code>[^xyz]</code>是对<code>[xyz]</code>的否定，即匹配除去<code>xyz</code>三个字母后的其他字符。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200926231300.png" alt="" /></p><h3 id="匹配次数大括号"><a class="markdownIt-Anchor" href="#匹配次数大括号"></a> 匹配次数大括号 {  }</h3><p>大括号内填写一个非负整数。<br />代表前面的表达式应该被匹配的次数。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200926231822.png" alt="" /></p><h4 id="限制下限"><a class="markdownIt-Anchor" href="#限制下限"></a> 限制下限</h4><p>如果填写为<code>&#123;n,&#125;</code>的形式，则可以匹配<code>n</code>次以上。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200926231914.png" alt="" /></p><h4 id="限制下限上限"><a class="markdownIt-Anchor" href="#限制下限上限"></a> 限制下限上限</h4><p>如果填写为<code>&#123;n,m&#125;</code>的形式，则可以匹配<code>n</code>次以上，最多<code>m</code>次。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200926232001.png" alt="" /></p><h2 id="转义符号"><a class="markdownIt-Anchor" href="#转义符号"></a> 转义符号</h2><p><code>\</code>将下一个字符标记为一个<strong>特殊字符</strong>、或一个<strong>原义字符</strong>、或一个 <strong>向后引用</strong>、或一个<strong>八进制转义符</strong>。例如，‘n’ 匹配字符 “n”。’\n’ 匹配一个换行符。序列 <code>\\</code> 匹配 <code>\</code> 而 <code>\(</code> 则匹配 <code>(</code>。</p><p>转义符号的设计使得一些难以输入的字符可以被匹配，或已被使用的字符(例如问号<code>?</code>被在正则表达式里被认为是0,1次匹配。)<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200926231557.png" alt="" /></p><h1 id="在线测试正则表达式"><a class="markdownIt-Anchor" href="#在线测试正则表达式"></a> 在线测试正则表达式</h1><p>除了可以在程序内调试正则表达式外，也可以使用在线的一些工具测试正则表达式。例如下面的几个网站。</p><ul><li><a href="https://c.runoob.com/front-end/854">菜鸟工具 - 正则表达式在线测试</a></li><li><a href="http://tool.chinaz.com/regex/">站长工具 - 正则表达式在线测试</a></li><li><a href="https://www.w3cschool.cn/tools/index?name=reg">w3school 在线正则表达式测试</a></li></ul><h1 id="写在最后"><a class="markdownIt-Anchor" href="#写在最后"></a> 写在最后</h1><p>关于正则表达式的内容还有很多，一篇文章难以详尽。日后如果有时间，我会再次学习。<br />在本篇文章中，多处参考了我的朋友Kooer的博文，在此表示对他衷心感谢。<br />您可以在<a href="https://dooerlly.github.io/2020/09/22/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/">这个链接</a>看到他的博文。</p><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://use.fontawesome.com/releases/v5.0.13/css/all.css&quot;&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#前言&quot;&gt;</summary>
      
    
    
    
    <category term="其他" scheme="https://zoruasama.gitee.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="正则表达式" scheme="https://zoruasama.gitee.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>数据库原理 | 一些填空题的摘录</title>
    <link href="https://zoruasama.gitee.io/2020/09/11/database_x/"/>
    <id>https://zoruasama.gitee.io/2020/09/11/database_x/</id>
    <published>2020-09-11T03:51:02.000Z</published>
    <updated>2021-11-24T05:16:47.531Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.13/css/all.css"><h1 id="关于"><a class="markdownIt-Anchor" href="#关于"></a> 关于</h1><p>本文档由Zorua自行整理，如果有错误请在评论区反馈，或投递邮件至zoruasama@qq.com。<br />文档采用<code>CC BY-NC-ND 4.0许可协议</code>。转载本文档请保留本文档地址。<br />(?)如果您对此留有任何疑问，可以访问<a href="https://zh.wikipedia.org/wiki/%E5%89%B5%E4%BD%9C%E5%85%B1%E7%94%A8%E6%8E%88%E6%AC%8A%E6%A2%9D%E6%AC%BE">知识共享许可协议</a>以获取帮助。</p><h1 id="正文"><a class="markdownIt-Anchor" href="#正文"></a> 正文</h1><ol><li>数据管理技术经历了<strong>人工管理、文件系统、数据库管理</strong>三个阶段。</li><li>数据库系统中常用的三种模型有<strong>层次模型、网状模型、关系模型</strong>。</li><li>数据模型的三要素包括<strong>数据结构、数据操纵或操作、数据的完整性约束</strong>。</li><li>实体之间的联系可抽象为三类，它们是<strong>一对一、一对多、多对多</strong>。</li><li>在数据库设计中，<strong>数据字典</strong>是系统中各类数据描述的集合，是进行详细的数据收集和数据分析所获得的主要成果。</li><li>数据库系统一般由<strong>数据库、数据库应用系统、数据库管理系统、数据库管理员</strong>和用户构成。</li><li>数据库系统在运行过程中，可能会发生故障。故障主要有<strong>事务故障、系统故障、介质故障和计算机病毒</strong>四类。</li><li>并发控制的主要方法是采用<strong>封锁</strong>机制，其类型有<strong>共享锁</strong>和<strong>排它锁</strong>两种。</li><li>数据库的完整性是指数据的<strong>正确性</strong>和<strong>相容性</strong>。</li><li>在SQL语言中，为了数据库的安全性，设置了对数据的存取进行控制的语句，对用户授权使用<strong>GRANT</strong>语句，收回所授的权限使用<strong>REVOKE</strong>语句。</li><li><strong>数据库</strong>是长期存储在计算机内的、有组织、可共享的数据集合。</li><li>数据库系统的三级模式结构是指数据库系统是由<strong>模式</strong>、<strong>外模式</strong>、<strong>内模式</strong>三级构成的。</li><li>E-R图一般在数据库设计的<strong>概念结构设计</strong>阶段使用。</li><li><strong>事务</strong>是用户定义的一个数据库操作序列，是一个不可分割的工作单位，它具有<strong>原子性</strong>、<strong>一致性</strong>、<strong>隔离性</strong>、<strong>持续性</strong>四个特性。</li><li>数据库系统中，系统故障通常称为<strong>软故障</strong>，介质故障称为<strong>硬故障</strong>。</li><li>关系操作的特点是<strong>集合</strong>操作。</li><li>若事务T对数据对象A加了S锁，则其他事务只能对数据A再加<strong>S</strong>锁，不能加<strong>X</strong>锁，直到事务T释放A上的锁。</li><li>现实世界进行第一层抽象的模型，称为<strong>概念</strong>模型；对现实世界进行第二层抽象的模型，称为<strong>数据</strong>模型。</li><li>在数据库技术中，编写应用程序的语言仍然是C—类高级语言，这些语言被称为<strong>宿主语言或主语言</strong>。</li><li>层次、网状的DML属于<strong>过程性</strong>语言，而关系型DML属于<strong>非过程性</strong>语言。</li><li>关系模式的操作异常问题往往是由<strong>数据冗余</strong>引起的。</li><li>恢复的基本原则是<strong>冗余</strong>。要使数据库具有可恢复性，在平时要做好两件事：<strong>转储</strong>备份和<strong>记“日志”</strong>。</li><li>如果对数据库的并发操作不加以控制，则会带来的问题：<strong>丢失更新</strong>、<strong>读“脏数据”<strong>和</strong>不可重复读</strong>。</li><li>事务的执行次序称为<strong>调度</strong>。</li><li>判断一个并发调度是否正确，可以用<strong>可串行化</strong>概念来解决。</li><li>封锁能避免错误的发生，但会引起<strong>活锁和死锁</strong>问题。</li><li>S封锁增加了并发度，但缺点是<strong>容易发生死锁</strong>。</li><li>两段式封锁是可串行化的<strong>充分</strong>条件。</li><li>SQL中的安全性机制，主要有两个：<strong>视图</strong>和<strong>授权</strong>。</li><li>数据库的基本特点是<strong>数据可以共享</strong>或<strong>数据结构化、数据独立性、数据冗余度小，易扩充、统一管理和控制</strong>。</li><li>数据库技术中采取分级方法将数据库的结构划分成多个层次，是为了提高数据库的<strong>逻辑独立性</strong>和<strong>物理独立性</strong>。</li><li>数据库是长期存储在计算机内，有<strong>组织</strong>的，可<strong>共享</strong>的数据集合</li><li>现实世界的事物反映到人的头脑中经过思维加工是数据，这一过程要经历三个领域，依次是<strong>现实世界</strong>，<strong>信息世界</strong>和<strong>计算机世界</strong>。</li><li>关系数据库规范化是为解决关系数据库中<strong>插入、删除和数据冗余</strong>问题而引入的。</li><li>关系规范中的删除操作异常是指<strong>不该删除的数据被删除</strong>，插入操作异常是指<strong>应该插入的数据未被插入</strong>。</li><li>设计性能较优的关系模式称为规范化，规范化主要的理论依据是<strong>关系规范化理论</strong>。</li><li>规范化理论是关系数据库进行逻辑设计的理论依据。根据这个理论，关系数据库中的关系必须满足：其每一属性都是<strong>不可分解的</strong>。</li><li>关系模型是把实体之间的联系用<strong>二维表格</strong>表示。</li><li>在关系数据库中，当关系的类型改变时，用户程序也可以不变，这是<strong>数据的逻辑独立性</strong>。</li><li>当数据库的存储结构改变时，可相应修改<strong>模式/内模式映像</strong>，从而保持模式不变。</li><li>在数据库系统的三级模式体系结构中，描述数据在数据库中的物理结构或存储方式的是<strong>内模式</strong>。</li><li>在数据库系统的三级组织结构中，DBA视图是<strong>概念模式</strong>，系统程序员视图是<strong>内模式</strong>，用户视图是<strong>外模式</strong>。</li><li>在数据库的三级模式体系结构中，模式与内模式之间的映象<strong>模式/内模式</strong>，实现了数据库的<strong>物理</strong>独立性。</li><li>描述概念模型常用的方法是<strong>实体–联系方法</strong>。</li><li>在数据库设计中，将E-R图转换成关系数据模型的过程属于<strong>逻辑设计阶段</strong>。</li><li>在数据库设计的4个阶段中，每个阶段都有自己的设计内容。“在哪些表、在哪些属性上、建什么样的索引”，这一内容应该属于<strong>物理</strong>设计阶段。</li><li>在登录日志文件时，应该先<strong>登录日志文件</strong>，后<strong>更新数据库</strong>。</li><li>对数据对象施加封锁，可能会引起活锁和死锁问题。预防死锁通常有<strong>一次封锁法</strong>和<strong>顺序封锁法</strong>两种方法。</li><li>数据库管理系统通常提供授权功能来控制不同用户访问数据的权限，这主要是为了实现数据库的<strong>安全性</strong>。</li></ol><h1 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h1><p><button>隐藏答案</button></p><script src="https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js"></script><script>$('button').on('click',function(){        console.log("By Zorua");         $('strong').css('color',"white");     })</script><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://use.fontawesome.com/releases/v5.0.13/css/all.css&quot;&gt;
&lt;h1 id=&quot;关于&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#关于&quot;&gt;</summary>
      
    
    
    
    <category term="数据库原理" scheme="https://zoruasama.gitee.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="数据库原理" scheme="https://zoruasama.gitee.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86/"/>
    
    <category term="数据库" scheme="https://zoruasama.gitee.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>数据库原理 | 7. 关系数据理论</title>
    <link href="https://zoruasama.gitee.io/2020/09/07/database_6/"/>
    <id>https://zoruasama.gitee.io/2020/09/07/database_6/</id>
    <published>2020-09-07T03:51:02.000Z</published>
    <updated>2020-09-07T08:13:30.598Z</updated>
    
    <content type="html"><![CDATA[<h1 id="思维导图"><a class="markdownIt-Anchor" href="#思维导图"></a> 思维导图</h1><blockquote class="pullquote mindmap mindmap-md"><ul><li>关系数据理论<ul><li>问题的提出</li><li>函数依赖<ul><li>函数依赖</li><li>平凡函数依赖与非平凡函数依赖</li><li>完全函数依赖与部分函数依赖</li><li>传递函数依赖</li></ul></li><li>码</li><li>范式<ul><li>1NF</li><li>2NF<ul><li>SLC不是一个好的关系模式</li><li>原因及解决办法</li><li>2NF的定义</li></ul></li><li>3NF<ul><li>解决方法</li><li>3NF的定义</li></ul></li><li>BC 范式<ul><li>解决方法</li><li>3NF与BCNF的关系</li><li>BCNF的关系模式所具有的性质</li></ul></li><li>规范化<ul><li>关系模式规范化的基本步骤</li><li>规范化的基本思想</li></ul></li></ul></li><li>数据依赖的公理系统<ul><li>Armstrong公理系统</li><li>导出规则</li><li>函数依赖闭包<ul><li>关于闭包的引理</li></ul></li><li>函数依赖集等价<ul><li>最小依赖集</li><li>极小化过程</li></ul></li></ul></li></ul></li></ul></blockquote><h1 id="问题的提出"><a class="markdownIt-Anchor" href="#问题的提出"></a> 问题的提出</h1><ul><li>关系数据库逻辑设计<ul><li>针对具体问题，如何构造一个适合于它的数据模式</li><li>数据库逻辑设计的工具──关系数据库的规范化理论</li></ul></li></ul><h1 id="函数依赖"><a class="markdownIt-Anchor" href="#函数依赖"></a> 函数依赖</h1><h2 id="函数依赖-2"><a class="markdownIt-Anchor" href="#函数依赖-2"></a> 函数依赖</h2><p>设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R(U)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mclose">)</span></span></span></span>是一个属性集<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span>上的关系模式，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span>的子集。<br />若对于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R(U)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mclose">)</span></span></span></span>的任意一个可能的关系<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>中不可能存在两个元组在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>上的属性值相等， 而在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>上的属性值不等， 则称 <strong>X函数确定Y</strong> 或<strong>Y函数依赖于X</strong>，记作<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>。<br />X称为这个函数依赖的<strong>决定属性集</strong>(Determinant)。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Y=f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></p><ol><li>函数依赖不是指关系模式R的某个或某些关系实例满足的约束条件，而是指R的<strong>所有关系实例</strong>均要满足的约束条件。</li><li>函数依赖是<strong>语义范畴</strong>的概念。只能根据数据的语义来确定函数依赖。<br />例如“姓名→年龄”这个函数依赖只有在不允许有同名人的条件下成立</li><li>数据库设计者可以对现实世界作强制的规定。例如规定不允许同名人出现，函数依赖“姓名→年龄”成立。所插入的元组必须满足规定的函数依赖，若发现有同名人存在， 则拒绝装入该元组。</li></ol><blockquote><p><strong>例</strong><br />Student(Sno, Sname, Ssex, Sage, Sdept)<br />假设不允许重名，则有:<br /><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>n</mi><mi>o</mi><mo>→</mo><mi>S</mi><mi>s</mi><mi>e</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">Sno \rightarrow Ssex</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span></span></span></span>， <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>n</mi><mi>o</mi><mo>→</mo><mi>S</mi><mi>a</mi><mi>g</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">Sno \rightarrow Sage</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">e</span></span></span></span> , <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>n</mi><mi>o</mi><mo>→</mo><mi>S</mi><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">Sno \rightarrow Sdept</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">t</span></span></span></span>，<br /><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>n</mi><mi>o</mi><mo>←</mo><mo>→</mo><mi>S</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo separator="true">,</mo><mi>S</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo>→</mo><mi>S</mi><mi>s</mi><mi>e</mi><mi>x</mi><mo separator="true">,</mo><mi>S</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo>→</mo><mi>S</mi><mi>a</mi><mi>g</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">Sno \leftarrow \rightarrow Sname, Sname \rightarrow Ssex, Sname \rightarrow Sage</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">a</span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">a</span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">a</span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">e</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo>→</mo><mi>S</mi><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">Sname \rightarrow Sdept</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">a</span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">t</span></span></span></span><br />但<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>s</mi><mi>e</mi><mi>x</mi><mo>→</mo><mi>S</mi><mi>a</mi><mi>g</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">Ssex \rightarrow Sage</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">e</span></span></span></span><br />若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>，并且<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mo>→</mo><mi>X</mi></mrow><annotation encoding="application/x-tex">Y\rightarrow X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>,  则记为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>←</mo><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\leftarrow \rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>。<br />若Y不函数依赖于X,   则记为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>↛</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\not\rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>。</p></blockquote><h2 id="平凡函数依赖与非平凡函数依赖"><a class="markdownIt-Anchor" href="#平凡函数依赖与非平凡函数依赖"></a> 平凡函数依赖与非平凡函数依赖</h2><p>在关系模式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R(U)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mclose">)</span></span></span></span>中，对于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span>的子集<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>，<br />如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>，但<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mo>⊈</mo><mi>X</mi></mrow><annotation encoding="application/x-tex">Y\not\subseteq X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>，则称X→Y是<strong>非平凡的函数依赖</strong><br />若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>，但<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mo>⊆</mo><mi>X</mi></mrow><annotation encoding="application/x-tex">Y\subseteq X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>,   则称<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>是<strong>平凡的函数依赖</strong></p><blockquote><p><strong>例</strong><br />在关系<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>C</mi><mo stretchy="false">(</mo><mi>S</mi><mi>n</mi><mi>o</mi><mo separator="true">,</mo><mi>C</mi><mi>n</mi><mi>o</mi><mo separator="true">,</mo><mi>G</mi><mi>r</mi><mi>a</mi><mi>d</mi><mi>e</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">SC(Sno, Cno, Grade)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mclose">)</span></span></span></span>中，</p><ol><li>非平凡函数依赖： <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>S</mi><mi>n</mi><mi>o</mi><mo separator="true">,</mo><mi>C</mi><mi>n</mi><mi>o</mi><mo stretchy="false">)</mo><mo>→</mo><mi>G</mi><mi>r</mi><mi>a</mi><mi>d</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">(Sno, Cno) \rightarrow Grade</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span></span></span></span></li><li>平凡函数依赖：     <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>S</mi><mi>n</mi><mi>o</mi><mo separator="true">,</mo><mi>C</mi><mi>n</mi><mi>o</mi><mo stretchy="false">)</mo><mo>→</mo><mi>S</mi><mi>n</mi><mi>o</mi></mrow><annotation encoding="application/x-tex">(Sno, Cno) \rightarrow Sno</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>S</mi><mi>n</mi><mi>o</mi><mo separator="true">,</mo><mi>C</mi><mi>n</mi><mi>o</mi><mo stretchy="false">)</mo><mo>→</mo><mi>C</mi><mi>n</mi><mi>o</mi></mrow><annotation encoding="application/x-tex">(Sno, Cno) \rightarrow Cno</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span></span></span></span></li></ol></blockquote><p>任一关系模式，平凡函数依赖都是必然成立的，它不反映新的语义，因此若不特别声明， 我们总是讨论非平凡函数依赖。</p><h2 id="完全函数依赖与部分函数依赖"><a class="markdownIt-Anchor" href="#完全函数依赖与部分函数依赖"></a> 完全函数依赖与部分函数依赖</h2><p>在关系模式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R(U)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mclose">)</span></span></span></span>中，如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>，并且对于X的任何一个真子集<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>X</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">X&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>，都有</p><ul><li>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>X</mi><mo mathvariant="normal">′</mo></msup><mo>↛</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X&#x27;\not\rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>, 则称<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>完全函数依赖于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>，记作<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mover><mo><mo>→</mo></mo><mi>f</mi></mover><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\mathop{\rightarrow}\limits^{f} Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.200086em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.200086em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">→</span></span></span><span style="top:-3.613978em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>。</li><li>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>，但Y不完全函数依赖于X，则称Y部分函数依赖于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>，记作<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mover><mo><mo>→</mo></mo><mi>P</mi></mover><mi>Y</mi></mrow><annotation encoding="application/x-tex">X \mathop{\rightarrow}\limits^{P}   Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1452010000000001em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.1452010000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">→</span></span></span><span style="top:-3.5668699999999998em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>。</li></ul><h2 id="传递函数依赖"><a class="markdownIt-Anchor" href="#传递函数依赖"></a> 传递函数依赖</h2><p>在关系模式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R(U)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mclose">)</span></span></span></span>中，如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">Y\rightarrow Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span></span></span></span>，且<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mo>⊈</mo><mi>X</mi></mrow><annotation encoding="application/x-tex">Y\not\subseteq X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mo>→</mo><mi>X</mi></mrow><annotation encoding="application/x-tex">Y\rightarrow X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>，则称<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span></span></span></span><strong>传递函数依赖于</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>。<br />注: 如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mo>→</mo><mi>X</mi></mrow><annotation encoding="application/x-tex">Y\rightarrow X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>， 即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>←</mo><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\leftarrow \rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span></span></span></span><strong>直接依赖</strong>于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>。</p><blockquote><p><strong>例</strong><br />在关系<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>t</mi><mi>d</mi><mo stretchy="false">(</mo><mi>S</mi><mi>n</mi><mi>o</mi><mo separator="true">,</mo><mi>S</mi><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi><mo separator="true">,</mo><mi>S</mi><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Std(Sno, Sdept, Sloc)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">t</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span>中，有：<br /><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>n</mi><mi>o</mi><mo>→</mo><mi>S</mi><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">Sno \rightarrow Sdept</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">t</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi><mo>→</mo><mi>S</mi><mi>l</mi><mi>o</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Sdept \rightarrow Sloc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>l</mi><mi>o</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Sloc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span></span></span></span>传递函数依赖于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>n</mi><mi>o</mi></mrow><annotation encoding="application/x-tex">Sno</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span></span></span></span></p></blockquote><h1 id="码"><a class="markdownIt-Anchor" href="#码"></a> 码</h1><p>设K为关系模式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>&lt;</mo><mi>U</mi><mo separator="true">,</mo><mi>F</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">R&lt;U,F&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>中的属性或属性组合。若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi><mover><mo><mo>→</mo></mo><mi>f</mi></mover><mi>U</mi></mrow><annotation encoding="application/x-tex">K \mathop{\rightarrow}\limits^{f} U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.200086em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.200086em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">→</span></span></span><span style="top:-3.613978em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span>，则K称为R的一个候选码（Candidate Key）。若关系模式R有多个候选码，则选定其中的一个做为主码（Primary key）。</p><h1 id="范式"><a class="markdownIt-Anchor" href="#范式"></a> 范式</h1><ul><li>范式是符合某一种级别的关系模式的集合。</li><li>关系数据库中的关系必须满足一定的要求。满足不同程度要求的为不同范式。</li><li>范式的种类：<ul><li>第一范式(1NF)</li><li>第二范式(2NF)</li><li>第三范式(3NF)</li><li>BC范式(BCNF)</li><li>第四范式(4NF)</li><li>第五范式(5NF)</li></ul></li><li>各种范式之间存在联系：<ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mrow><mi mathvariant="normal">N</mi><mi mathvariant="normal">F</mi></mrow><mo>⊃</mo><mn>2</mn><mrow><mi mathvariant="normal">N</mi><mi mathvariant="normal">F</mi></mrow><mo>⊃</mo><mn>3</mn><mrow><mi mathvariant="normal">N</mi><mi mathvariant="normal">F</mi></mrow><mo>⊃</mo><mrow><mi mathvariant="normal">B</mi><mi mathvariant="normal">C</mi><mi mathvariant="normal">N</mi><mi mathvariant="normal">F</mi></mrow><mo>⊃</mo><mn>4</mn><mrow><mi mathvariant="normal">N</mi><mi mathvariant="normal">F</mi></mrow><mo>⊃</mo><mn>5</mn><mrow><mi mathvariant="normal">N</mi><mi mathvariant="normal">F</mi></mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">1\mathrm{NF} \supset 2\mathrm{NF} \supset 3\mathrm{NF} \supset \mathrm{BCNF} \supset 4\mathrm{NF} \supset 5\mathrm{NF}F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mord"><span class="mord mathrm">N</span><span class="mord mathrm">F</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊃</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathrm">N</span><span class="mord mathrm">F</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊃</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord">3</span><span class="mord"><span class="mord mathrm">N</span><span class="mord mathrm">F</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊃</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathrm">B</span><span class="mord mathrm">C</span><span class="mord mathrm">N</span><span class="mord mathrm">F</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊃</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord">4</span><span class="mord"><span class="mord mathrm">N</span><span class="mord mathrm">F</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊃</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord"><span class="mord mathrm">N</span><span class="mord mathrm">F</span></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span></li></ul></li><li>某一关系模式R为第n范式，可简记为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>∈</mo><mi>n</mi><mrow><mi mathvariant="normal">N</mi><mi mathvariant="normal">F</mi></mrow></mrow><annotation encoding="application/x-tex">R\in n\mathrm{NF}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathrm">N</span><span class="mord mathrm">F</span></span></span></span></span>。</li></ul><h2 id="1nf"><a class="markdownIt-Anchor" href="#1nf"></a> 1NF</h2><ul><li>1NF的定义<ul><li>如果<strong>一个关系模式R的所有属性</strong>都是不可分的基本数据项，则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>∈</mo><mn>1</mn><mrow><mi mathvariant="normal">N</mi><mi mathvariant="normal">F</mi></mrow></mrow><annotation encoding="application/x-tex">R\in 1\mathrm{NF}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord mathrm">N</span><span class="mord mathrm">F</span></span></span></span></span>。</li><li>第一范式是对关系模式的最起码的要求。不满足第一范式的数据库模式不能称为关系数据库。</li><li>但是满足第一范式的关系模式并不一定是一个好的关系模式。</li></ul></li></ul><h2 id="2nf"><a class="markdownIt-Anchor" href="#2nf"></a> 2NF</h2><ul><li><p>例: 关系模式   SLC(Sno, Sdept, Sloc, Cno, Grade)</p></li><li><pre><code>Sloc为学生住处，假设每个系的学生住在同一个地方。</code></pre></li><li><p>函数依赖包括：</p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>S</mi><mi>n</mi><mi>o</mi><mo separator="true">,</mo><mi>C</mi><mi>n</mi><mi>o</mi><mo stretchy="false">)</mo><mover><mo><mo>→</mo></mo><mi>f</mi></mover><mi>G</mi><mi>r</mi><mi>a</mi><mi>d</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">(Sno, Cno) \mathop{\rightarrow}\limits^f     Grade</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.450086em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.200086em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">→</span></span></span><span style="top:-3.613978em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>n</mi><mi>o</mi><mo><mo>→</mo></mo><mi>S</mi><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">Sno \mathop{\rightarrow} Sdept</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">→</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">t</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>S</mi><mi>n</mi><mi>o</mi><mo separator="true">,</mo><mi>C</mi><mi>n</mi><mi>o</mi><mo stretchy="false">)</mo><mover><mo><mo>→</mo></mo><mi>P</mi></mover><mi>S</mi><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">(Sno, Cno) \mathop{\rightarrow}\limits^P     Sdept</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3952010000000001em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.1452010000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">→</span></span></span><span style="top:-3.5668699999999998em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">t</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>n</mi><mi>o</mi><mo><mo>→</mo></mo><mi>S</mi><mi>l</mi><mi>o</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Sno \mathop{\rightarrow} Sloc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">→</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>S</mi><mi>n</mi><mi>o</mi><mo separator="true">,</mo><mi>C</mi><mi>n</mi><mi>o</mi><mo stretchy="false">)</mo><mover><mo><mo>→</mo></mo><mi>P</mi></mover><mi>S</mi><mi>l</mi><mi>o</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">(Sno, Cno) \mathop{\rightarrow}\limits^P     Sloc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3952010000000001em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.1452010000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">→</span></span></span><span style="top:-3.5668699999999998em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi><mo><mo>→</mo></mo><mi>S</mi><mi>l</mi><mi>o</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Sdept \mathop{\rightarrow} Sloc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">→</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span></span></span></span></li></ul></li></ul><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200519200344.png" alt="" /></p><ul><li>SLC的码为(Sno, Cno)</li><li>SLC满足第一范式。</li><li>非主属性Sdept和Sloc部分函数依赖于码(Sno, Cno)</li></ul><h3 id="slc不是一个好的关系模式"><a class="markdownIt-Anchor" href="#slc不是一个好的关系模式"></a> SLC不是一个好的关系模式</h3><ol><li>插入异常<br />假设Sno＝95102，Sdept＝IS，Sloc＝N的学生还未选课，因课程号是主属性，因此该学生的信息无法插入SLC。</li><li>删除异常<br />假定某个学生本来只选修了3号课程这一门课。现在因身体不适，他连3号课程也不选修了。因课程号是主属性，此操作将导致该学生信息的整个元组都要删除。</li><li>数据冗余度大<br />如果一个学生选修了10门课程，那么他的Sdept和Sloc值就要重复存储了10次。</li><li>修改复杂<br />例如学生转系，在修改此学生元组的Sdept值的同时，还可能需要修改住处（Sloc）。如果这个学生选修了K门课，则必须无遗漏地修改K个元组中全部Sdept、Sloc信息。</li></ol><h3 id="原因及解决办法"><a class="markdownIt-Anchor" href="#原因及解决办法"></a> 原因及解决办法</h3><ul><li>Sdept、 Sloc部分函数依赖于码。</li><li>SLC分解为两个关系模式，以消除这些部分函数依赖<ul><li>SC（Sno， Cno， Grade）</li><li>SL（Sno， Sdept， Sloc）<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200519202552.png" alt="" /></li></ul></li></ul><h3 id="2nf的定义"><a class="markdownIt-Anchor" href="#2nf的定义"></a> 2NF的定义</h3><ul><li><p>若关系模式R∈1NF，并且每一个非主属性都完全函数依赖于R的码，则R∈2NF。</p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>L</mi><mi>C</mi><mo stretchy="false">(</mo><mi>S</mi><mi>n</mi><mi>o</mi><mo separator="true">,</mo><mi>S</mi><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi><mo separator="true">,</mo><mi>S</mi><mi>l</mi><mi>o</mi><mi>c</mi><mo separator="true">,</mo><mi>C</mi><mi>n</mi><mi>o</mi><mo separator="true">,</mo><mi>G</mi><mi>r</mi><mi>a</mi><mi>d</mi><mi>e</mi><mo stretchy="false">)</mo><mo>∈</mo><mn>1</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">SLC(Sno, Sdept, Sloc, Cno, Grade) \in 1NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>L</mi><mi>C</mi><mo stretchy="false">(</mo><mi>S</mi><mi>n</mi><mi>o</mi><mo separator="true">,</mo><mi>S</mi><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi><mo separator="true">,</mo><mi>S</mi><mi>l</mi><mi>o</mi><mi>c</mi><mo separator="true">,</mo><mi>C</mi><mi>n</mi><mi>o</mi><mo separator="true">,</mo><mi>G</mi><mi>r</mi><mi>a</mi><mi>d</mi><mi>e</mi><mo stretchy="false">)</mo><mo>∈</mo><mn>2</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">SLC(Sno, Sdept, Sloc, Cno, Grade) \in 2NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>C</mi><mo stretchy="false">(</mo><mi>S</mi><mi>n</mi><mi>o</mi><mo separator="true">,</mo><mi>C</mi><mi>n</mi><mi>o</mi><mo separator="true">,</mo><mi>G</mi><mi>r</mi><mi>a</mi><mi>d</mi><mi>e</mi><mo stretchy="false">)</mo><mo>∈</mo><mn>2</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">SC(Sno, Cno, Grade) \in 2NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>L</mi><mo stretchy="false">(</mo><mi>S</mi><mi>n</mi><mi>o</mi><mo separator="true">,</mo><mi>S</mi><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi><mo separator="true">,</mo><mi>S</mi><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">)</mo><mo>∈</mo><mn>2</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">SL(Sno, Sdept, Sloc) \in 2NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span></li></ul></li><li><p>采用投影分解法将一个1NF的关系分解为多个2NF的关系，可以在一定程度上减轻原1NF关系中存在的插入异常、删除异常、数据冗余度大、修改复杂等问题。</p></li><li><p>将一个1NF关系分解为多个2NF的关系，并不能完全消除关系模式中的各种异常情况和数据冗余。</p></li></ul><h2 id="3nf"><a class="markdownIt-Anchor" href="#3nf"></a> 3NF</h2><ul><li><p>例：2NF关系模式SL(Sno, Sdept, Sloc)中<br />函数依赖：</p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>n</mi><mi>o</mi><mo>→</mo><mi>S</mi><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">Sno\rightarrow Sdept</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">t</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi><mo>→</mo><mi>S</mi><mi>l</mi><mi>o</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Sdept\rightarrow Sloc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>n</mi><mi>o</mi><mo>→</mo><mi>S</mi><mi>l</mi><mi>o</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Sno\rightarrow Sloc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span></span></span></span><br />Sloc传递函数依赖于Sno，即SL中存在非主属性对码的传递函数依赖。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200520211845.png" alt="" /></p></li></ul><h3 id="解决方法"><a class="markdownIt-Anchor" href="#解决方法"></a> 解决方法</h3><p>采用投影分解法，把SL分解为两个关系模式，以消除传递函数依赖：</p><ul><li>SD（Sno, Sdept）</li><li>DL（Sdept, Sloc）<br />SD的码为Sno， DL的码为Sdept。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200520225001.png" alt="" /></li></ul><h3 id="3nf的定义"><a class="markdownIt-Anchor" href="#3nf的定义"></a> 3NF的定义</h3><p>关系模式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>&lt;</mo><mi>U</mi><mo separator="true">,</mo><mi>F</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">R&lt;U,F&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>中若不存在这样的码X、属性组Y及非主属性Z（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Z</mi><mo>⊈</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">Z\not\subseteq Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>）, 使得<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi><mo separator="true">,</mo><mi>Y</mi><mo>→</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y,Y\rightarrow X,Y\rightarrow Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span></span></span></span>，成立，则称<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>&lt;</mo><mi>U</mi><mo separator="true">,</mo><mi>F</mi><mo>&gt;</mo><mo>∈</mo><mn>3</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">R&lt;U,F&gt;\in 3NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>。</p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>L</mi><mo stretchy="false">(</mo><mi>S</mi><mi>n</mi><mi>o</mi><mo separator="true">,</mo><mi>S</mi><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi><mo separator="true">,</mo><mi>S</mi><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">)</mo><mo>∈</mo><mn>2</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">SL(Sno, Sdept, Sloc) \in 2NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>L</mi><mo stretchy="false">(</mo><mi>S</mi><mi>n</mi><mi>o</mi><mo separator="true">,</mo><mi>S</mi><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi><mo separator="true">,</mo><mi>S</mi><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">)</mo><mo>∈</mo><mn>3</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">SL(Sno, Sdept, Sloc) \in 3NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>D</mi><mo stretchy="false">(</mo><mi>S</mi><mi>n</mi><mi>o</mi><mo separator="true">,</mo><mi>S</mi><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><mn>3</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">SD(Sno, Sdept) \in 3NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>L</mi><mo stretchy="false">(</mo><mi>S</mi><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi><mo separator="true">,</mo><mi>S</mi><mi>l</mi><mi>o</mi><mi>c</mi><mo stretchy="false">)</mo><mo>∈</mo><mn>3</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">DL(Sdept, Sloc)\in 3NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span></li></ul><hr /><ul><li>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>∈</mo><mn>3</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">R\in 3NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>，则R的每一个非主属性既不部分函数依赖于候选码也不传递函数依赖于候选码。</li><li>如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>∈</mo><mn>3</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">R\in 3NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>，则R也是2NF。</li><li>采用投影分解法将一个2NF的关系分解为多个3NF的关系，可以在一定程度上解决原2NF关系中存在的插入异常、删除异常、数据冗余度大、修改复杂等问题。</li><li>将一个2NF关系分解为多个3NF的关系后，并不能完全消除关系模式中的各种异常情况和数据冗余。</li></ul><h2 id="bc-范式"><a class="markdownIt-Anchor" href="#bc-范式"></a> BC 范式</h2><ul><li>设关系模式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>&lt;</mo><mi>U</mi><mo separator="true">,</mo><mi>F</mi><mo>&gt;</mo><mo>∈</mo><mn>1</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">R&lt;U,F&gt;\in 1NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>，如果对于R的每个函数依赖<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>，若Y不属于X，则X必含有候选码，那么<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>∈</mo><mi>B</mi><mi>C</mi><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">R\in BCNF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>。</li><li>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>∈</mo><mi>B</mi><mi>C</mi><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">R\in BCNF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span><ul><li>每一个决定属性集（因素）都包含（候选）码</li><li>R中的所有属性（主，非主属性）都完全函数依赖于码</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>∈</mo><mn>3</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">R\in 3NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>（证明）</li><li>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>∈</mo><mn>3</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">R\in 3NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>    则  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span>不一定<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo><mi>B</mi><mi>C</mi><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">\in BCNF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span><br />例：在关系模式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>T</mi><mi>J</mi><mo stretchy="false">(</mo><mi>S</mi><mo separator="true">,</mo><mi>T</mi><mo separator="true">,</mo><mi>J</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">STJ(S,T,J)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mclose">)</span></span></span></span>中，S表示学生，T表示教师，J表示课程。<br />每一教师只教一门课。每门课由若干教师教，某一学生选定某门课，就确定了一个固定的教师。某个学生选修某个教师的课就确定了所选课的名称 ：                <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>S</mi><mo separator="true">,</mo><mi>J</mi><mo stretchy="false">)</mo><mo>→</mo><mi>T</mi><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>S</mi><mo separator="true">,</mo><mi>T</mi><mo stretchy="false">)</mo><mo>→</mo><mi>J</mi><mo separator="true">,</mo><mi>T</mi><mo>→</mo><mi>J</mi></mrow><annotation encoding="application/x-tex">(S,J)\rightarrow T,(S,T)\rightarrow J,T\rightarrow J</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span></span></span></span><br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200520230033.png" alt="" /></li></ul></li></ul><h3 id="解决方法-2"><a class="markdownIt-Anchor" href="#解决方法-2"></a> 解决方法</h3><ul><li>将STJ分解为二个关系模式：</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>J</mi><mo stretchy="false">(</mo><mi>S</mi><mo separator="true">,</mo><mi>J</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>B</mi><mi>C</mi><mi>N</mi><mi>F</mi><mi mathvariant="normal">，</mi><mi>T</mi><mi>J</mi><mo stretchy="false">(</mo><mi>T</mi><mo separator="true">,</mo><mi>J</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>B</mi><mi>C</mi><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">SJ(S,J) \in BCNF， TJ(T,J)\in BCNF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span></li><li>没有<strong>任何属性</strong>对码的部分函数依赖和传递函数依赖</li></ul><h3 id="3nf与bcnf的关系"><a class="markdownIt-Anchor" href="#3nf与bcnf的关系"></a> 3NF与BCNF的关系</h3><ul><li>如果关系模式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>∈</mo><mi>B</mi><mi>C</mi><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">R\in BCNF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>，必定有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>∈</mo><mn>3</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">R\in 3NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span></li><li>如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>∈</mo><mn>3</mn><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">R\in 3NF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>，且R只有一个候选码，则必定<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>∈</mo><mi>B</mi><mi>C</mi><mi>N</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">R\in BCNF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>。</li></ul><h3 id="bcnf的关系模式所具有的性质"><a class="markdownIt-Anchor" href="#bcnf的关系模式所具有的性质"></a> BCNF的关系模式所具有的性质</h3><ol><li>所有<strong>非主属性</strong>都完全函数依赖于每个候选码</li><li>所有<strong>主属性</strong>都完全函数依赖于每个不包含它的候选码</li><li>没有任何属性完全函数依赖于<strong>非码</strong>的任何一组属性</li></ol><h2 id="规范化"><a class="markdownIt-Anchor" href="#规范化"></a> 规范化</h2><ul><li>关系数据库的规范化理论是数据库逻辑设计的工具。</li><li>一个关系只要其分量都是不可分的数据项，它就是规范化的关系，但这只是最基本的规范化。</li><li>规范化程度可以有多个不同的级别</li><li>规范化程度过低的关系不一定能够很好地描述现实世界，可能会存在插入异常、删除异常、修改复杂、数据冗余等问题</li><li>一个低一级范式的关系模式，通过模式分解可以转换为若干个高一级范式的关系模式集合，这种过程就叫<strong>关系模式的规范化</strong></li></ul><h3 id="关系模式规范化的基本步骤"><a class="markdownIt-Anchor" href="#关系模式规范化的基本步骤"></a> 关系模式规范化的基本步骤</h3><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200520230604.png" alt="" /></p><h3 id="规范化的基本思想"><a class="markdownIt-Anchor" href="#规范化的基本思想"></a> 规范化的基本思想</h3><ul><li>消除不合适的数据依赖</li><li>使模式中的各关系模式达到某种程度的“分离”</li><li>采用“一事一地”的模式设计原则<ul><li>让一个关系描述一个概念、一个实体或者实体间的一种联系。若多于一个概念就把它“分离”出去</li></ul></li><li>所谓规范化实质上是<strong>概念的单一化</strong></li><li>不能说规范化程度越高的关系模式就越好</li><li>在设计数据库模式结构时，必须对现实世界的实际情况和用户应用需求作进一步分析，确定一个合适的、能够反映现实世界的模式</li><li>上面的规范化步骤可以在其中任何一步终止</li></ul><h1 id="数据依赖的公理系统"><a class="markdownIt-Anchor" href="#数据依赖的公理系统"></a> 数据依赖的公理系统</h1><p>对于满足一组<strong>函数依赖</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>的关系模式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>&lt;</mo><mi>U</mi><mo separator="true">,</mo><mi>F</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">R&lt;U,F&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>，其任何一个关系<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>，若函数依赖<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>都成立, 则称F<strong>逻辑蕴含</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>。</p><h2 id="armstrong公理系统"><a class="markdownIt-Anchor" href="#armstrong公理系统"></a> Armstrong公理系统</h2><ul><li>一套推理规则，是模式分解算法的理论基础</li><li>用途<ul><li>求给定关系模式的码</li><li>从一组函数依赖求得蕴含的函数依赖</li></ul></li></ul><hr /><p>关系模式R &lt;U，F &gt;来说有以下的推理规则：</p><ul><li>自反律（Reflexivity）：若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mo>⊆</mo><mi>X</mi><mo>⊆</mo><mi>U</mi></mrow><annotation encoding="application/x-tex">Y \subseteq X \subseteq U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>所蕴含。</li><li>增广律（Augmentation）：若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>为F所蕴含，且<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Z</mi><mo>⊆</mo><mi>U</mi></mrow><annotation encoding="application/x-tex">Z \subseteq U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mi>Z</mi><mo>→</mo><mi>Y</mi><mi>Z</mi></mrow><annotation encoding="application/x-tex">XZ\rightarrow YZ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span></span></span></span>为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>所蕴含。</li><li>传递律（Transitivity）：若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>及<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">Y\rightarrow Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span></span></span></span>为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>所蕴含，则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span></span></span></span>为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>所蕴含。</li></ul><p>注意：由自反律所得到的函数依赖均是平凡的函数依赖，自反律的使用并不依赖于F</p><h2 id="导出规则"><a class="markdownIt-Anchor" href="#导出规则"></a> 导出规则</h2><p>根据A1，A2，A3这三条推理规则可以得到下面三条推理规则：</p><ul><li>合并规则：由<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi><mo separator="true">,</mo><mi>X</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y, X\rightarrow Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span></span></span></span>，有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi><mi>Z</mi></mrow><annotation encoding="application/x-tex">X\rightarrow YZ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span></span></span></span>。</li><li>伪传递规则：由<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi><mo separator="true">,</mo><mi>W</mi><mi>Y</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y, WY\rightarrow Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span></span></span></span>，有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mi>W</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">XW\rightarrow Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span></span></span></span>。</li><li>分解规则：由<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>及 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Z</mi><mo>⊆</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">Z\subseteq Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>，有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span></span></span></span>。</li></ul><hr /><ul><li>引理：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo>⋯</mo><msub><mi>A</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">X→A_1,A_2\cdots A_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>成立的充分必要条件是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X\rightarrow A_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>成立<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo>=</mo><mi>l</mi><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i=l,2,\cdots,k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span>。</li></ul><h2 id="函数依赖闭包"><a class="markdownIt-Anchor" href="#函数依赖闭包"></a> 函数依赖闭包</h2><ul><li>在关系模式R&lt;U，F&gt;中为F所逻辑蕴含的函数依赖的全体叫作<strong>F的闭包</strong>，记为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>F</mi><mo>+</mo></msup></mrow><annotation encoding="application/x-tex">F^+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span></span></span></span>。</li><li>设F为属性集U上的一组函数依赖，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>⊆</mo><mi>U</mi></mrow><annotation encoding="application/x-tex">X\subseteq U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span>， <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>X</mi><mi>F</mi><mo>+</mo></msubsup></mrow><annotation encoding="application/x-tex">X_F^+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104993em;vertical-align:-0.293531em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.811462em;"><span style="top:-2.4064690000000004em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.293531em;"><span></span></span></span></span></span></span></span></span></span> ={A|X→A能由F根据Armstrong公理导出}，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>X</mi><mi>F</mi><mo>+</mo></msubsup></mrow><annotation encoding="application/x-tex">X_F^+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104993em;vertical-align:-0.293531em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.811462em;"><span style="top:-2.4064690000000004em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.293531em;"><span></span></span></span></span></span></span></span></span></span>称为<strong>属性集X关于函数依赖集F的闭包</strong>。</li></ul><h3 id="关于闭包的引理"><a class="markdownIt-Anchor" href="#关于闭包的引理"></a> 关于闭包的引理</h3><ul><li><strong>内容</strong>：设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>为属性集<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span>上的一组函数依赖，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo>⊆</mo><mi>U</mi></mrow><annotation encoding="application/x-tex">X,Y \subseteq U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>能由F 根据Armstrong公理导出的充分必要条件是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mo>⊆</mo><msubsup><mi>X</mi><mi>F</mi><mo>+</mo></msubsup></mrow><annotation encoding="application/x-tex">Y\subseteq X_F^+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.104993em;vertical-align:-0.293531em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.811462em;"><span style="top:-2.4064690000000004em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.293531em;"><span></span></span></span></span></span></span></span></span></span></li><li><strong>用途</strong>：将判定<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\rightarrow Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>是否能由<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>根据Armstrong公理导出的问题，就转化为求出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>X</mi><mi>F</mi><mo>+</mo></msubsup></mrow><annotation encoding="application/x-tex">X_F^+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104993em;vertical-align:-0.293531em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.811462em;"><span style="top:-2.4064690000000004em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.293531em;"><span></span></span></span></span></span></span></span></span></span> ，判定<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>是否为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>X</mi><mi>F</mi><mo>+</mo></msubsup></mrow><annotation encoding="application/x-tex">X_F^+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104993em;vertical-align:-0.293531em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.811462em;"><span style="top:-2.4064690000000004em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.293531em;"><span></span></span></span></span></span></span></span></span></span>的子集的问题。</li></ul><h2 id="函数依赖集等价"><a class="markdownIt-Anchor" href="#函数依赖集等价"></a> 函数依赖集等价</h2><p>如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>G</mi><mo>+</mo></msup><mo>=</mo><msup><mi>F</mi><mo>+</mo></msup></mrow><annotation encoding="application/x-tex">G^+=F^+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span></span></span></span>，就说函数依赖集F<strong>覆盖</strong>G（F是G的覆盖，或G是F的覆盖），或F与G<strong>等价</strong>。</p><h3 id="最小依赖集"><a class="markdownIt-Anchor" href="#最小依赖集"></a> 最小依赖集</h3><p>如果函数依赖集<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>满足下列条件，则称F为一个<strong>极小函数依赖集</strong>。亦称为<strong>最小依赖集</strong>或<strong>最小覆盖</strong>。</p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>中任一函数依赖的右部仅含有一个属性。</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>中不存在这样的函数依赖<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>A</mi></mrow><annotation encoding="application/x-tex">X\rightarrow A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>，使得<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo>−</mo><mrow><mi>X</mi><mo>→</mo><mi>A</mi></mrow></mrow><annotation encoding="application/x-tex">F-{X\rightarrow A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">A</span></span></span></span></span>等价。</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>中不存在这样的函数依赖<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>→</mo><mi>A</mi></mrow><annotation encoding="application/x-tex">X\rightarrow A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>， X有真子集<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span></span></span></span>使得<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo>−</mo><mrow><mi>X</mi><mo>→</mo><mi>A</mi></mrow><mo>∪</mo><mrow><mi>Z</mi><mo>→</mo><mi>A</mi></mrow></mrow><annotation encoding="application/x-tex">F-{X\rightarrow A}\cup{Z\rightarrow A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">A</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">A</span></span></span></span></span>与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>等价。</li></ul><h3 id="极小化过程"><a class="markdownIt-Anchor" href="#极小化过程"></a> 极小化过程</h3><p>每一个函数依赖集<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>均等价于一个极小函数依赖集<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">F_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。此<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">F_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>称为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>的最小依赖集。</p><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;思维导图&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#思维导图&quot;&gt;&lt;/a&gt; 思维导图&lt;/h1&gt;
&lt;blockquote class=&quot;pullquote mindmap mindmap-md&quot;&gt;&lt;ul&gt;
&lt;li&gt;关系数据理论
&lt;ul&gt;</summary>
      
    
    
    
    <category term="数据库原理" scheme="https://zoruasama.gitee.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="数据库原理" scheme="https://zoruasama.gitee.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86/"/>
    
    <category term="数据库" scheme="https://zoruasama.gitee.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Linux入门 | 3. 常用命令</title>
    <link href="https://zoruasama.gitee.io/2020/08/27/Linux_2/"/>
    <id>https://zoruasama.gitee.io/2020/08/27/Linux_2/</id>
    <published>2020-08-27T13:00:00.000Z</published>
    <updated>2022-02-17T05:07:24.264Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.13/css/all.css"><h1 id="基础命令"><a class="markdownIt-Anchor" href="#基础命令"></a> 基础命令</h1><p>在<a href="/2020/04/14/Linux_1/#%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4">上一篇文章</a>中，我写到了在<code>Linux</code>系统中常用了8个命令，在这篇文章中，将会对这8个命令作较为详细的解析。<br />如果各位读者对本文有所不清晰或认为有错误的地方，欢迎来评论区指出。我会及时确认并修正。</p><table><thead><tr><th>序号</th><th>命令</th><th>对应英语</th><th>作用</th></tr></thead><tbody><tr><td>01</td><td>ls</td><td>list</td><td>列出指定文件夹下的内容</td></tr><tr><td>02</td><td>pwd</td><td>print work directory</td><td>显示当前工作路径</td></tr><tr><td>03</td><td>cd</td><td>change directory</td><td>改变当前工作路径</td></tr><tr><td>04</td><td>touch</td><td>touch</td><td>新建一个空白文件</td></tr><tr><td>05</td><td>mkdir</td><td>make directory</td><td>创建一个新的目录</td></tr><tr><td>06</td><td>rm</td><td>remove</td><td>删除指定文件</td></tr><tr><td>07</td><td>clear</td><td>clear</td><td>清除当前屏幕上的信息（新建一屏）</td></tr><tr><td>08</td><td>reset</td><td>reset</td><td>重置终端</td></tr></tbody></table><h1 id="命令格式"><a class="markdownIt-Anchor" href="#命令格式"></a> 命令格式</h1><p>在终端中，命令通常是按照如下格式进行的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> [-options] [parameter]</span><br></pre></td></tr></table></figure><ul><li><code>command</code>：命令名称，</li><li><code>[-options]</code>：选项，可用来对命令进行控制，实现不同的效果。这一项可以省略。</li><li><code>parameter</code>：传给命令的参数，可以是 <strong>零个</strong>、<strong>一个</strong> 或者 <strong>多个</strong></li></ul><h1 id="ls-命令说明"><a class="markdownIt-Anchor" href="#ls-命令说明"></a> ls 命令说明</h1><ul><li><code>ls</code> 是<strong>list</strong> 的缩写，功能是列出指定文件夹下的内容，可以类比于 <strong>DOS</strong> 下的 <code>dir</code> 命令。</li><li><code>ls path</code>显示path路径的目录下的内容。</li><li>如果直接使用<code>ls</code>，等价于<code>ls .</code>（下文有解释<code>.</code>）。</li></ul><h2 id="ls-常用选项"><a class="markdownIt-Anchor" href="#ls-常用选项"></a> ls 常用选项</h2><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-a</td><td>显示指定目录下所有子目录与文件，包括<strong>隐藏文件</strong></td></tr><tr><td>-l</td><td>以<strong>列表方式</strong>显示文件的详细信息</td></tr><tr><td>-h</td><td>配合 -l 以人性化的方式显示文件大小</td></tr></tbody></table><h2 id="linux-系统的文件和目录的特点"><a class="markdownIt-Anchor" href="#linux-系统的文件和目录的特点"></a> Linux 系统的文件和目录的特点</h2><ul><li><strong>文件</strong> 或者 <strong>目录</strong> 名称最长可以有 <code>256</code> 个字符</li><li>以 <code>.</code> 开头的文件为隐藏文件，需要用 -a 参数才能显示</li><li><strong>.</strong> 代表当前目录，也可以叫做工作目录（或者工作路径）</li><li><strong>…</strong> 代表上一级目录</li><li>上面这两个目录严格来说也是<code>.</code>开头的，所以也是在 -a 参数下才能显示。</li></ul><h3 id="绝对路径与相对路径"><a class="markdownIt-Anchor" href="#绝对路径与相对路径"></a> 绝对路径与相对路径</h3><p>在Linux中，以path作为参数时，可分为绝对路径和相对路径。</p><ul><li><p><strong>绝对路径</strong><br />从<strong>根目录</strong><code>/</code>开始，依次将各级子目录的名字组合起来，形成的路径就称为某个文件的绝对路径。例如，根目录（/）下有目录usr，usr目录下有子目录bin，bin目录下有文件chsh，则chsh文件的绝对路径就是：/usr/bin/chsh。</p></li><li><p><strong>相对路径</strong><br />相对当前所在路径的位置，例如当前所在的位置为/usr，也就是在根目录的usr子目录下，则chsh文件相对当前位置的路径为：bin/chsh。</p></li></ul><div class="snote guide"><p>相对路径就是相对于当前工作目录的路径。例如我想显示当前工作目录的上一级目录下的文件：ls ..</p></div><h2 id="ls-通配符的使用"><a class="markdownIt-Anchor" href="#ls-通配符的使用"></a> ls 通配符的使用</h2><p>在<code>ls</code>命令的参数中，可以使用通配符。</p><table><thead><tr><th>通配符</th><th>含义</th></tr></thead><tbody><tr><td>*</td><td>代表任意个数个字符</td></tr><tr><td>?</td><td>代表任意一个字符，至少 1 个</td></tr><tr><td>[]</td><td>表示可以匹配字符组中的任一一个</td></tr><tr><td>[abc]</td><td>匹配 a、b、c 中的任意一个</td></tr><tr><td>[a-f]</td><td>匹配从 a 到 f 范围内的的任意一个字符</td></tr></tbody></table><h2 id="演示"><a class="markdownIt-Anchor" href="#演示"></a> 演示</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200827191622.gif" alt="" /></p><h1 id="pwd-命令说明"><a class="markdownIt-Anchor" href="#pwd-命令说明"></a> pwd 命令说明</h1><ul><li><code>pwd</code> 命令相对比较简单，就是显示当前工作目录。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200827192734.png" alt="" /><br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200827192945.png" alt="" /></li></ul><h2 id="演示-2"><a class="markdownIt-Anchor" href="#演示-2"></a> 演示</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200827191855.gif" alt="" /></p><h1 id="cd-命令说明"><a class="markdownIt-Anchor" href="#cd-命令说明"></a> cd 命令说明</h1><h2 id="使用cd命令"><a class="markdownIt-Anchor" href="#使用cd命令"></a> 使用cd命令</h2><ul><li>如果单纯地使用<code>cd</code>命令，等价于<code>cd ~</code>或<code>cd /home/username</code><ul><li>即切换到家目录</li></ul></li><li><code>cd</code>后面可以接<strong>绝对路径</strong>或<strong>相对路径</strong>作为参数。</li><li><code>cd -</code>可以来回切换目录，即<strong>访问上一次访问的目录</strong>。</li></ul><h2 id="演示-3"><a class="markdownIt-Anchor" href="#演示-3"></a> 演示</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200827192449.gif" alt="" /></p><h1 id="touch-命令说明"><a class="markdownIt-Anchor" href="#touch-命令说明"></a> touch 命令说明</h1><p><code>touch</code>用于修改文件或者目录的时间属性，包括存取时间和更改时间。若文件不存在，<strong>系统会建立一个新的文件</strong>。<br />作为入门级教程，我们只需要知道<code>touch</code>命令可以创建一个空白文件就行了。<br />语法：<code>touch filename</code></p><h2 id="演示-4"><a class="markdownIt-Anchor" href="#演示-4"></a> 演示</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200827200707.gif" alt="" /></p><h1 id="mkdir-命令说明"><a class="markdownIt-Anchor" href="#mkdir-命令说明"></a> mkdir 命令说明</h1><ul><li><code>mkdir path</code>会创建一个path目录。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200827203633.gif" alt="" /></li></ul><hr /><p>如果path是一个较长的路径，例如<code>aaa/bbb/ccc/ddd</code>这个例子，需要确保<code>aaa``bbb``ccc</code>文件夹都已经存在。<br />如果加一个<code>-p</code>选项（递归创建目录），则不需要确保这些文件夹都已经存在。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200827204408.gif" alt="" /></p><h1 id="rm-命令说明"><a class="markdownIt-Anchor" href="#rm-命令说明"></a> rm 命令说明</h1><p>使用<code>rm</code>时请<strong>万分小心</strong>，<code>rm</code>是删除文件或目录，是<strong>不可逆操作</strong>。<br /><code>rm</code>后接文件名就可以了。<br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200827204738.gif" alt="" /></p><h2 id="选项"><a class="markdownIt-Anchor" href="#选项"></a> 选项</h2><p>如果想用<code>rm</code>删除目录，则应该加一个<code>-r</code>选项，代表递归删除。<br />如果想用<code>rm</code>删除前进行提示，则应该加一个<code>-i</code>选项。<br />如果想用<code>rm</code>强制删除，则应该加一个<code>-f</code>选项。<br />下面是这些选项的演示：</p><h3 id="递归删除"><a class="markdownIt-Anchor" href="#递归删除"></a> 递归删除</h3><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200827205022.gif" alt="" /></p><h3 id="删除前提示"><a class="markdownIt-Anchor" href="#删除前提示"></a> 删除前提示</h3><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/20200827205304.gif" alt="" /></p><h1 id="查阅命令帮助信息"><a class="markdownIt-Anchor" href="#查阅命令帮助信息"></a> 查阅命令帮助信息</h1><blockquote><p>提示</p><ul><li>现阶段只需要 <strong>知道</strong> 通过以下两种方式可以查询命令的帮助信息</li><li>先学习<strong>常用命令</strong>及<strong>常用选项</strong>的使用即可，工作中如果遇到问题可以借助 <strong>网络搜索</strong></li></ul></blockquote><h2 id="-help"><a class="markdownIt-Anchor" href="#-help"></a> <code>--help</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> --<span class="built_in">help</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>显示 <code>command</code> 命令的帮助信息</li><li>示例：<code>pwd --help</code></li></ul><h2 id="man"><a class="markdownIt-Anchor" href="#man"></a> man</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">man <span class="built_in">command</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>查阅 <code>command</code> 命令的使用手册</li><li>示例：<code>man pwd</code></li></ul><blockquote><p><code>man</code> 是 <strong>manual</strong> 的缩写，是 Linux 提供的一个 <strong>手册</strong>，包含了绝大部分的命令、函数的详细使用说明</p></blockquote><p>使用 <code>man</code> 时的操作键：</p><table><thead><tr><th>操作键</th><th>功能</th></tr></thead><tbody><tr><td>空格键</td><td>显示手册页的下一屏</td></tr><tr><td>Enter 键</td><td>一次滚动手册页的一行</td></tr><tr><td>b</td><td>回滚一屏</td></tr><tr><td>f</td><td>前滚一屏</td></tr><tr><td>q</td><td>退出</td></tr><tr><td>/word</td><td>搜索 <strong>word</strong> 字符串</td></tr></tbody></table><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://use.fontawesome.com/releases/v5.0.13/css/all.css&quot;&gt;
&lt;h1 id=&quot;基础命令&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#基础</summary>
      
    
    
    
    <category term="Linux" scheme="https://zoruasama.gitee.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://zoruasama.gitee.io/tags/Linux/"/>
    
    <category term="操作系统" scheme="https://zoruasama.gitee.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>实训日记 | Day 20. 答辩的终稿</title>
    <link href="https://zoruasama.gitee.io/2020/08/20/training_20/"/>
    <id>https://zoruasama.gitee.io/2020/08/20/training_20/</id>
    <published>2020-08-20T11:30:00.000Z</published>
    <updated>2020-09-07T08:24:29.277Z</updated>
    
    <content type="html"><![CDATA[<h1 id="总述"><a class="markdownIt-Anchor" href="#总述"></a> 总述</h1><p>今天是8月14日，实训的第20天。实训的最后一天。<br />今天我如预期一样地完成了答辩，两位老师似乎对我的项目及答辩都还很满意。<br />看着自己完整的项目和老师的认可，我感到非常有成就感。<br />我能在这取得一个小小的进步，离不开孟老师的耐心教导，同学们友爱的帮助。<br />由于我今天中午又加了一些新的内容，所以也在这里再对昨天的内容进行补充。</p><h1 id="事先准备"><a class="markdownIt-Anchor" href="#事先准备"></a> 事先准备</h1><ul><li>另一块屏幕用来播放本文档</li><li>已经开启服务的项目（原项目，处于登录状态，数据仅有一页）</li><li>ZOL手机报价网站</li><li>360安全浏览器</li></ul><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><ul><li>名称：指上云霄手机信息查阅系统</li><li>功能：提供爬虫和数据可视化两部分功能。<ul><li>爬虫：可以在页面上调用后台接口，爬取ZOL手机报价网站上的数据并存储到数据库中。</li><li>数据可视化：可以在页面上显示手机的相关数据信息。</li></ul></li></ul><h1 id="介绍数据爬取来源"><a class="markdownIt-Anchor" href="#介绍数据爬取来源"></a> 介绍数据爬取来源</h1><ul><li>手机报价首页</li><li>手机配置参数页</li><li>手机评价页面</li><li>bilibili搜索</li></ul><p>难点：ZOL手机报价的页面很多都不一样。对于一些没有评价或未上市的手机数据不予爬取。</p><h1 id="应用页面"><a class="markdownIt-Anchor" href="#应用页面"></a> 应用页面</h1><p>应用的页面有<strong>登录注册页面</strong>、<strong>数据可视化首页</strong>、<strong>爬虫页面</strong>、<strong>数据柱状图页面</strong>、<strong>关于页面</strong>五个页面。</p><h2 id="登录注册页面"><a class="markdownIt-Anchor" href="#登录注册页面"></a> 登录注册页面</h2><ul><li>在图1中点击注册按钮可切换为图2界面，图2界面点击返回按钮可切换为图1界面。</li><li>在<strong>注册登录界面</strong>，对填充的文本内容有长度和字符内容的限制。例如用户名和密码只能为字母和数字组成。</li><li>在此界面注册后，密码将以加密后的文本进行存储。</li><li><strong>如果还未登录，企图访问其他网页，则会自动跳转至登录注册页面</strong>。反之，若在登录后，访问该登录注册页面，将会自动跳转至首页。</li></ul><h2 id="数据可视化首页"><a class="markdownIt-Anchor" href="#数据可视化首页"></a> 数据可视化首页</h2><ul><li>数据可视化首页会在顶部显示<strong>当前的数据库条目数量</strong>。</li><li>数据可视化首页显示的手机信息的序列，将是一个<strong>随机序列</strong>。</li><li><strong>在刚载入页面时，首页只会显示8条数据。当滚轮被滑到底部时，将会再次载入至多4条数据。实现了动态加载数据的过程，直至数据库的所有数据都已呈现</strong>。<ul><li>每次载入的数据都是从后端被渲染完毕后，以HTML的形式插入的。</li></ul></li><li><strong>每个标签左侧会读取数据库中的基本信息并显示，右侧会以echarts雷达图的形式显示当前的数据和平均的数据。</strong></li><li>点击名字可以弹出bilibili的视频。</li></ul><h2 id="爬虫页面"><a class="markdownIt-Anchor" href="#爬虫页面"></a> 爬虫页面</h2><p>在文本框填入要爬取数据的第几页，点击爬虫，即可爬取数据。<br />数据来源是<strong>ZOL手机报价</strong>。</p><ul><li>如果选择的页号已经被爬取到数据库中，后端将会拒绝该爬取请求。</li><li>如果选择的页号不符合要求，后端也会拒绝该爬取请求。</li><li>清空数据库前，需要填入事先在后端设置好的密码。</li></ul><h2 id="数据柱状图页面"><a class="markdownIt-Anchor" href="#数据柱状图页面"></a> 数据柱状图页面</h2><p>该页面将会呈现数据库中所有条目的售价以及得分状况。通过调节图像四周的工具，可以获取不同的信息。<br />该页面将会呈现数据库中所有条目的售价以及得分状况。通过调节图像四周的工具，可以获取不同的信息。</p><ul><li>单击柱状条可以在下方显示手机信息卡片。</li><li>双击柱状条会自动跳转到和这个手机相关的B站视频链接。</li></ul><h2 id="关于页面"><a class="markdownIt-Anchor" href="#关于页面"></a> 关于页面</h2><p>关于页面比较简单，仅仅只是显示了本文档的<strong>简介</strong>部分的内容。在此不再赘述。</p><h1 id="接口"><a class="markdownIt-Anchor" href="#接口"></a> 接口</h1><p>接口分成两个模块，UserInfo模块和echarts模块。</p><h2 id="userinfo"><a class="markdownIt-Anchor" href="#userinfo"></a> UserInfo</h2><ul><li>index，被请求时，将会返回<strong>登录注册页面</strong>。</li><li>user_login，仅能被POST请求，参数为username和password。用于登录。</li><li>user_register，仅能被POST请求，参数为username和password及emailAddress。用于注册。</li><li>user_activate，能被GET请求，参数为id。用于注册账号的激活。将会返回一个JsonResponse。</li><li>is_login，参数为id。被请求时，会检查浏览器的session，查看是否登录。</li><li>user_logout，参数为id。被请求时，将会删除浏览器的session。</li></ul><h2 id="echarts"><a class="markdownIt-Anchor" href="#echarts"></a> echarts</h2><ul><li>空，被请求时，返回<strong>数据可视化首页</strong>。</li><li>run_page，被请求时，返回<strong>爬虫页面</strong>。</li><li>hot_page，被请求时，返回<strong>数据柱状图页面</strong>。</li><li>about，被请求时，返回<strong>关于页面</strong>。</li><li>timenow，被请求时，返回含有系统现行时间信息的JsonResponse。</li><li>run，参数为index，仅能被POST请求。被请求后，将会启动爬虫程序。</li><li>get_hot_json，被请求时，返回一个字典。字典内容为数据库中所有手机的名称、价格、分数数据。</li><li>delete，仅能被POST请求。将会清空数据库数据。</li><li>get_data，参数为index，将会从数据库中读取序号为index的手机数据并返回一个JsonResponse。</li><li>get_random_dict，以列表的形式产生一个随机的序列。</li><li>get_average，被请求时，将以JsonResponse返回数据库中所有数据的评分的平均值。</li><li>init_zorua_box，参数为index，将读取数据库中的数据，并对指定的HTML文件进行渲染，然后<strong>将渲染后的HTML文件返回</strong>。</li></ul><h1 id="数据库结构"><a class="markdownIt-Anchor" href="#数据库结构"></a> 数据库结构</h1><ul><li>User(id,username,password,is_activate)</li><li>Phone(id,name,price,img,score)</li><li>config(phone,soc,camera,camera_vice,ram,battery,screen_size,image)</li><li>evaluation(phone,cost_performance,performance,endurance,design,photograph)</li></ul><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;总述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#总述&quot;&gt;&lt;/a&gt; 总述&lt;/h1&gt;
&lt;p&gt;今天是8月14日，实训的第20天。实训的最后一天。&lt;br /&gt;
今天我如预期一样地完成了答辩，两位老师似乎对我的项目及答辩都还很满意。&lt;br /</summary>
      
    
    
    
    <category term="实训日记" scheme="https://zoruasama.gitee.io/categories/%E5%AE%9E%E8%AE%AD%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="Python" scheme="https://zoruasama.gitee.io/tags/Python/"/>
    
    <category term="实训" scheme="https://zoruasama.gitee.io/tags/%E5%AE%9E%E8%AE%AD/"/>
    
  </entry>
  
  <entry>
    <title>实训日记 | Day 19. 答辩的准备</title>
    <link href="https://zoruasama.gitee.io/2020/08/13/training_19/"/>
    <id>https://zoruasama.gitee.io/2020/08/13/training_19/</id>
    <published>2020-08-13T11:30:00.000Z</published>
    <updated>2020-09-07T08:24:12.539Z</updated>
    
    <content type="html"><![CDATA[<h1 id="总述"><a class="markdownIt-Anchor" href="#总述"></a> 总述</h1><p>今天是8月13日，实训的第19天。实训即将步入尾声。<br />今天是答辩的第一天。<br />而我是在第二天答辩。今天准备了一下答辩的思路。</p><h1 id="事先准备"><a class="markdownIt-Anchor" href="#事先准备"></a> 事先准备</h1><ul><li>另一块屏幕用来播放本文档</li><li>已经开启服务的项目（原项目，处于登录状态，数据仅有一页）</li><li>ZOL手机报价网站</li><li>360安全浏览器</li></ul><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><ul><li>名称：指上云霄手机信息查阅系统</li><li>功能：提供爬虫和数据可视化两部分功能。<ul><li>爬虫：可以在页面上调用后台接口，爬取ZOL手机报价网站上的数据并存储到数据库中。</li><li>数据可视化：可以在页面上显示手机的相关数据信息。</li></ul></li></ul><h1 id="介绍数据爬取来源"><a class="markdownIt-Anchor" href="#介绍数据爬取来源"></a> 介绍数据爬取来源</h1><ul><li>手机报价首页</li><li>手机配置参数页</li><li>手机评价页面</li><li>bilibili搜索</li></ul><p>难点：ZOL手机报价的页面很多都不一样。对于一些没有评价或未上市的手机数据不予爬取。</p><h1 id="应用页面"><a class="markdownIt-Anchor" href="#应用页面"></a> 应用页面</h1><p>应用的页面有<strong>登录注册页面</strong>、<strong>数据可视化首页</strong>、<strong>爬虫页面</strong>、<strong>数据柱状图页面</strong>、<strong>关于页面</strong>五个页面。</p><h2 id="登录注册页面"><a class="markdownIt-Anchor" href="#登录注册页面"></a> 登录注册页面</h2><ul><li>在图1中点击注册按钮可切换为图2界面，图2界面点击返回按钮可切换为图1界面。</li><li>在<strong>注册登录界面</strong>，对填充的文本内容有长度和字符内容的限制。例如用户名和密码只能为字母和数字组成。</li><li>在此界面注册后，密码将以加密后的文本进行存储。</li><li><strong>如果还未登录，企图访问其他网页，则会自动跳转至登录注册页面</strong>。反之，若在登录后，访问该登录注册页面，将会自动跳转至首页。</li></ul><h2 id="数据可视化首页"><a class="markdownIt-Anchor" href="#数据可视化首页"></a> 数据可视化首页</h2><ul><li>数据可视化首页会在顶部显示<strong>当前的数据库条目数量</strong>。</li><li>数据可视化首页显示的手机信息的序列，将是一个<strong>随机序列</strong>。</li><li><strong>在刚载入页面时，首页只会显示8条数据。当滚轮被滑到底部时，将会再次载入至多4条数据。实现了动态加载数据的过程，直至数据库的所有数据都已呈现</strong>。<ul><li>每次载入的数据都是从后端被渲染完毕后，以HTML的形式插入的。</li></ul></li><li><strong>每个标签左侧会读取数据库中的基本信息并显示，右侧会以echarts雷达图的形式显示当前的数据和平均的数据。</strong></li><li>点击名字可以弹出bilibili的视频。</li></ul><h2 id="爬虫页面"><a class="markdownIt-Anchor" href="#爬虫页面"></a> 爬虫页面</h2><p>在文本框填入要爬取数据的第几页，点击爬虫，即可爬取数据。<br />数据来源是<strong>ZOL手机报价</strong>。</p><ul><li>如果选择的页号已经被爬取到数据库中，后端将会拒绝该爬取请求。</li><li>如果选择的页号不符合要求，后端也会拒绝该爬取请求。</li><li>清空数据库前，需要填入事先在后端设置好的密码。</li></ul><h2 id="数据柱状图页面"><a class="markdownIt-Anchor" href="#数据柱状图页面"></a> 数据柱状图页面</h2><p>该页面将会呈现数据库中所有条目的售价以及得分状况。通过调节图像四周的工具，可以获取不同的信息。</p><h2 id="关于页面"><a class="markdownIt-Anchor" href="#关于页面"></a> 关于页面</h2><p>关于页面比较简单，仅仅只是显示了本文档的<strong>简介</strong>部分的内容。在此不再赘述。</p><h1 id="接口"><a class="markdownIt-Anchor" href="#接口"></a> 接口</h1><p>接口分成两个模块，UserInfo模块和echarts模块。</p><h2 id="userinfo"><a class="markdownIt-Anchor" href="#userinfo"></a> UserInfo</h2><ul><li>index，被请求时，将会返回<strong>登录注册页面</strong>。</li><li>user_login，仅能被POST请求，参数为username和password。用于登录。</li><li>user_register，仅能被POST请求，参数为username和password及emailAddress。用于注册。</li><li>user_activate，能被GET请求，参数为id。用于注册账号的激活。将会返回一个JsonResponse。</li><li>is_login，参数为id。被请求时，会检查浏览器的session，查看是否登录。</li><li>user_logout，参数为id。被请求时，将会删除浏览器的session。</li></ul><h2 id="echarts"><a class="markdownIt-Anchor" href="#echarts"></a> echarts</h2><ul><li>空，被请求时，返回<strong>数据可视化首页</strong>。</li><li>run_page，被请求时，返回<strong>爬虫页面</strong>。</li><li>hot_page，被请求时，返回<strong>数据柱状图页面</strong>。</li><li>about，被请求时，返回<strong>关于页面</strong>。</li><li>timenow，被请求时，返回含有系统现行时间信息的JsonResponse。</li><li>run，参数为index，仅能被POST请求。被请求后，将会启动爬虫程序。</li><li>get_hot_json，被请求时，返回一个字典。字典内容为数据库中所有手机的名称、价格、分数数据。</li><li>delete，仅能被POST请求。将会清空数据库数据。</li><li>get_data，参数为index，将会从数据库中读取序号为index的手机数据并返回一个JsonResponse。</li><li>get_random_dict，以列表的形式产生一个随机的序列。</li><li>get_average，被请求时，将以JsonResponse返回数据库中所有数据的评分的平均值。</li><li>init_zorua_box，参数为index，将读取数据库中的数据，并对指定的HTML文件进行渲染，然后<strong>将渲染后的HTML文件返回</strong>。</li></ul><h1 id="数据库结构"><a class="markdownIt-Anchor" href="#数据库结构"></a> 数据库结构</h1><ul><li>User(id,username,password,is_activate)</li><li>Phone(id,name,price,img,score)</li><li>config(phone,soc,camera,camera_vice,ram,battery,screen_size,image)</li><li>evaluation(phone,cost_performance,performance,endurance,design,photograph)</li></ul><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;总述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#总述&quot;&gt;&lt;/a&gt; 总述&lt;/h1&gt;
&lt;p&gt;今天是8月13日，实训的第19天。实训即将步入尾声。&lt;br /&gt;
今天是答辩的第一天。&lt;br /&gt;
而我是在第二天答辩。今天准备了一下答辩的思路</summary>
      
    
    
    
    <category term="实训日记" scheme="https://zoruasama.gitee.io/categories/%E5%AE%9E%E8%AE%AD%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="Python" scheme="https://zoruasama.gitee.io/tags/Python/"/>
    
    <category term="实训" scheme="https://zoruasama.gitee.io/tags/%E5%AE%9E%E8%AE%AD/"/>
    
  </entry>
  
  <entry>
    <title>实训日记 | Day 18. 我的项目介绍</title>
    <link href="https://zoruasama.gitee.io/2020/08/12/training_18/"/>
    <id>https://zoruasama.gitee.io/2020/08/12/training_18/</id>
    <published>2020-08-12T11:30:00.000Z</published>
    <updated>2020-09-07T08:23:51.677Z</updated>
    
    <content type="html"><![CDATA[<h1 id="总述"><a class="markdownIt-Anchor" href="#总述"></a> 总述</h1><p>今天是8月12日，实训的第18天。实训即将步入尾声。<br />今天孟老师依然全天给同学们进行答疑。<br />我整理了一下我的项目的相关信息以准备明天后天的答辩。<br />整理内容如下。</p><h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><ul><li>名称：指上云霄手机信息查阅系统</li><li>功能：提供爬虫和数据可视化两部分功能。<ul><li>爬虫：可以在页面上调用后台接口，爬取ZOL手机报价网站上的数据并存储到数据库中。</li><li>数据可视化：可以在页面上显示手机的相关数据信息。</li></ul></li><li>开发工具：PyCharm</li><li>后台开发语言：Python3</li><li>前端开发语言：HTML5+CSS+JavaScript</li><li>作者：张仁忠(Zorua) 2018065527</li><li>指导老师：孟老师（mzm5466）</li></ul><h1 id="应用页面"><a class="markdownIt-Anchor" href="#应用页面"></a> 应用页面</h1><p>应用的页面有<strong>登录注册页面</strong>、<strong>数据可视化首页</strong>、<strong>爬虫页面</strong>、<strong>数据柱状图页面</strong>、<strong>关于页面</strong>五个页面。</p><h2 id="登录注册页面"><a class="markdownIt-Anchor" href="#登录注册页面"></a> 登录注册页面</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/1597240970_20200812210057628_27841.png" alt="" /><br /><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/1597240972_20200812210113431_24575.png" alt="" /></p><ul><li>在图1中点击注册按钮可切换为图2界面，图2界面点击返回按钮可切换为图1界面。</li><li>在<strong>注册登录界面</strong>，对填充的文本内容有长度和字符内容的限制。例如用户名和密码只能为字母和数字组成。</li><li>在此界面注册后，密码将以加密后的文本进行存储。</li><li><strong>如果还未登录，企图访问其他网页，则会自动跳转至登录注册页面</strong>。反之，若在登录后，访问该登录注册页面，将会自动跳转至首页。</li></ul><h2 id="数据可视化首页"><a class="markdownIt-Anchor" href="#数据可视化首页"></a> 数据可视化首页</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/1597240973_20200812210444412_15098.png" alt="" /></p><ul><li>数据可视化首页会在顶部显示<strong>当前的数据库条目数量</strong>。</li><li>数据可视化首页显示的手机信息的序列，将是一个<strong>随机序列</strong>。</li><li><strong>在刚载入页面时，首页只会显示8条数据。当滚轮被滑到底部时，将会再次载入至多4条数据。实现了动态加载数据的过程，直至数据库的所有数据都已呈现</strong>。<ul><li>每次载入的数据都是从后端被渲染完毕后，以HTML的形式插入的。</li></ul></li><li><strong>每个标签左侧会读取数据库中的基本信息并显示，右侧会以echarts雷达图的形式显示当前的数据和平均的数据。</strong></li></ul><h2 id="爬虫页面"><a class="markdownIt-Anchor" href="#爬虫页面"></a> 爬虫页面</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/1597240973_20200812212702692_31578.png" alt="" /><br />在文本框填入要爬取数据的第几页，点击爬虫，即可爬取数据。<br />数据来源是<strong>ZOL手机报价</strong>。</p><ul><li>如果选择的页号已经被爬取到数据库中，后端将会拒绝该爬取请求。</li><li>如果选择的页号不符合要求，后端也会拒绝该爬取请求。</li><li>清空数据库前，需要填入事先在后端设置好的密码。</li></ul><h2 id="数据柱状图页面"><a class="markdownIt-Anchor" href="#数据柱状图页面"></a> 数据柱状图页面</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/1597240973_20200812212945780_14328.png" alt="" /><br />该页面将会呈现数据库中所有条目的售价以及得分状况。通过调节图像四周的工具，可以获取不同的信息。</p><h2 id="关于页面"><a class="markdownIt-Anchor" href="#关于页面"></a> 关于页面</h2><p><img src="https://gitee.com/zoruasama/Zorua-Pic/raw/master/1597240974_20200812214757439_29652.png" alt="" /><br />关于页面比较简单，仅仅只是显示了本文档的<strong>简介</strong>部分的内容。在此不再赘述。</p><h1 id="接口"><a class="markdownIt-Anchor" href="#接口"></a> 接口</h1><p>接口分成两个模块，UserInfo模块和echarts模块。</p><h2 id="userinfo"><a class="markdownIt-Anchor" href="#userinfo"></a> UserInfo</h2><ul><li>index，被请求时，将会返回<strong>登录注册页面</strong>。</li><li>user_login，仅能被POST请求，参数为username和password。用于登录。</li><li>user_register，仅能被POST请求，参数为username和password及emailAddress。用于注册。</li><li>user_activate，能被GET请求，参数为id。用于注册账号的激活。将会返回一个JsonResponse。</li><li>is_login，参数为id。被请求时，会检查浏览器的session，查看是否登录。</li><li>user_logout，参数为id。被请求时，将会删除浏览器的session。</li></ul><h2 id="echarts"><a class="markdownIt-Anchor" href="#echarts"></a> echarts</h2><ul><li>空，被请求时，返回<strong>数据可视化首页</strong>。</li><li>run_page，被请求时，返回<strong>爬虫页面</strong>。</li><li>hot_page，被请求时，返回<strong>数据柱状图页面</strong>。</li><li>about，被请求时，返回<strong>关于页面</strong>。</li><li>timenow，被请求时，返回含有系统现行时间信息的JsonResponse。</li><li>run，参数为index，仅能被POST请求。被请求后，将会启动爬虫程序。</li><li>get_hot_json，被请求时，返回一个字典。字典内容为数据库中所有手机的名称、价格、分数数据。</li><li>delete，仅能被POST请求。将会清空数据库数据。</li><li>get_data，参数为index，将会从数据库中读取序号为index的手机数据并返回一个JsonResponse。</li><li>get_random_dict，以列表的形式产生一个随机的序列。</li><li>get_average，被请求时，将以JsonResponse返回数据库中所有数据的评分的平均值。</li><li>init_zorua_box，参数为index，将读取数据库中的数据，并对指定的HTML文件进行渲染，然后<strong>将渲染后的HTML文件返回</strong>。</li></ul><h1 id="数据库结构"><a class="markdownIt-Anchor" href="#数据库结构"></a> 数据库结构</h1><ul><li>User(id,username,password,is_activate)</li><li>Phone(id,name,price,img,score)</li><li>config(phone,soc,camera,camera_vice,ram,battery,screen_size,image)</li><li>evaluation(phone,cost_performance,performance,endurance,design,photograph)</li></ul><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.7.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;总述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#总述&quot;&gt;&lt;/a&gt; 总述&lt;/h1&gt;
&lt;p&gt;今天是8月12日，实训的第18天。实训即将步入尾声。&lt;br /&gt;
今天孟老师依然全天给同学们进行答疑。&lt;br /&gt;
我整理了一下我的项目的相关信</summary>
      
    
    
    
    <category term="实训日记" scheme="https://zoruasama.gitee.io/categories/%E5%AE%9E%E8%AE%AD%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="Python" scheme="https://zoruasama.gitee.io/tags/Python/"/>
    
    <category term="实训" scheme="https://zoruasama.gitee.io/tags/%E5%AE%9E%E8%AE%AD/"/>
    
  </entry>
  
</feed>
